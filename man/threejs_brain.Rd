% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/threejs_brain.R
\name{threejs_brain}
\alias{threejs_brain}
\title{Create a Threejs Brain and View it in Browsers}
\usage{
threejs_brain(..., .list = list(), width = NULL, height = NULL,
  side_canvas = FALSE, side_zoom = 1, side_width = 250,
  side_shift = c(0, 0), control_panel = TRUE, control_presets = NULL,
  camera_center = c(0, 0, 0), camera_pos = c(0, 0, 500),
  start_zoom = 1, coords = NULL, time_range = NULL,
  color_type = "continuous", color_ramp = c("navyblue", "#e2e2e2",
  "red"), value_range = NULL, symmetric = 0, n_color = 64,
  color_names = seq_along(color_ramp), show_legend = TRUE,
  legend_title = "Value", widget_id = "threebrain_data",
  tmp_dirname = NULL, debug = FALSE, token = NULL,
  optionals = list(), browser_external = TRUE, global_data = list())
}
\arguments{
\item{..., .list}{geometries inherit from AbstractGeom}

\item{width, height}{positive integers. Width and height of the widget.
By default width=`100\%`, and height varies.}

\item{side_canvas}{logical, enable side cameras to view objects from fixed perspective}

\item{side_zoom}{numerical, if side camera is enabled, zoom-in level, from 1 to 5}

\item{side_width}{positive integer, side panel size in pixels}

\item{side_shift}{integer of length two, side panel shift in pixels (`CSS style`: top, left)}

\item{control_panel}{logical, enable control panels for the widget}

\item{control_presets}{characters, presets to be shown in control panels}

\item{camera_center}{numerical, length of three, XYZ position where camera should focus at}

\item{camera_pos}{XYZ position of camera itself, default (0, 0, 500)}

\item{start_zoom}{numerical, positive number indicating camera zoom level}

\item{coords}{\code{NULL} to hide coordinates or numeric vector of three.}

\item{time_range}{numerical, length two, ascending. Used to specify animation time range}

\item{color_type}{character, either 'continuous' or 'discrete'}

\item{color_ramp}{characters, used to generate color ramps}

\item{value_range}{numerical, length two, ascending. Used to generate continuous colors}

\item{symmetric}{numerical, default 0, color center will be mapped to this value}

\item{n_color}{positive integer. How many colors in the color ramp (used by continuous legend)}

\item{color_names}{characters, color names, should share the same length as
color_ramp (used by discrete legend)}

\item{show_legend}{logical, show legend in control panel?}

\item{legend_title}{character, legend title (not used)}

\item{widget_id}{character, internally used as unique identifiers for widgets.
Only use it when you have multiple widgets in one website}

\item{tmp_dirname}{character path, internally used, where to store temporary files}

\item{debug}{logical, internally used for debugging}

\item{token}{unique character, internally used to identify widgets in JS localStorage}

\item{optionals}{internally used, to be deprecated}

\item{browser_external}{logical, use system default browser (default) or builtin one.}

\item{global_data}{internally use, mainly to store orientation matrices.}
}
\description{
Create a Threejs Brain and View it in Browsers
}
\author{
Zhengjia Wang
}
