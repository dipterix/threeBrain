% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_palette_voxel.R
\name{voxel_colormap}
\alias{voxel_colormap}
\alias{create_colormap}
\alias{save_colormap}
\alias{freeserfer_colormap}
\alias{load_colormap}
\title{Creates color maps for volume data (\code{\link{DataCubeGeom2}})}
\usage{
create_colormap(
  gtype = c("surface", "volume"),
  dtype = c("continuous", "discrete"),
  key,
  color,
  value,
  alpha = FALSE,
  con = NULL,
  ...
)

save_colormap(cmap, con)

freeserfer_colormap(con)

load_colormap(con)
}
\arguments{
\item{key}{non-negative integer vector corresponding to voxel values;
its length must exceed 1; see 'Details'}

\item{color}{characters, corresponding to color strings for each key}

\item{value}{actual value for each key, continuous palettes only}

\item{alpha}{whether to respect transparency}

\item{con}{a file path to write results to or to read from. The
file path can be passed as \code{voxel_colormap} into \code{\link{threejs_brain}}.}

\item{...}{used by continuous color maps, passed to
\code{\link[grDevices]{colorRampPalette}}. Ignored by others}

\item{label}{name for each key, discrete palettes only}

\item{x}{voxel color map object to be saved}
}
\value{
A list of color map information
}
\description{
Creates color maps for volume data (\code{\link{DataCubeGeom2}})
}
\details{
Internal 'JavaScript' shader implementation uses integer \code{key} to
connect data and color palettes. The keys must be non-negative. These keys
should coincide with data values used by \code{\link{DataCubeGeom2}}.
Each key stands for a value or label indicated by \code{value} or
\code{label}.

Zero key is a special color key. If a \code{\link{DataCubeGeom2}} voxel
value is 0, then this voxel will be hidden. This is hard-coded into
material shader.
}
\examples{

# Creates a symmetric continuous colormap with 3 keys
# The color range is -10 to 10
# The colors are 'blue','white','red' for these keys

pal <- create_voxel_colormap_continuous(
  key = c(1,2,3), value = c(-10,0,10),
  color = c('blue','white','red'))

print( pal )

f <- tempfile( fileext = '.json' )
save_voxel_colormap( pal, f )
cat(readLines(f), sep = '\n')

}
