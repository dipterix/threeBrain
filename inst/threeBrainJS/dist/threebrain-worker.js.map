{"version":3,"file":"threebrain-worker.js","mappings":"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AAKikB,OAAO,GAAG,IAAM,KACzBoD,EAAIrnB,KAAKikB,OAAO,GAAG,IAAM,KACzBoD,EAAIrnB,KAAKikB,OAAO,GAAG,IAAM,KAE7BvgB,GAAW,iBAAoB1D,KAAKwjB,YAAc,MAE9CxjB,KAAKuhB,cAAc,KACnB7d,GAAW,qBAAuB1D,KAAKmiB,cAAgB,YAAcniB,KAAKokB,cAAgB,MAIvF1gB,CACX,EAQAqc,EAAMC,OAAO7c,UAAUokB,sBAAwB,SAAUzlB,GACrD,OAAIA,IAASie,EAAMC,OAAOuE,WACf,0BACAziB,IAASie,EAAMC,OAAOwE,WACtB,wBACA1iB,IAASie,EAAMC,OAAOyE,WACtB,wBACA3iB,IAASie,EAAMC,OAAO0E,aACtB,eACA5iB,IAASie,EAAMC,OAAO4E,aACtB,eACA9iB,IAASie,EAAMC,OAAO6E,WACtB,MACA/iB,IAASie,EAAMC,OAAO8E,UACtB,wBACAhjB,IAASie,EAAMC,OAAO+E,YACtB,0BACAjjB,IAASie,EAAMC,OAAOgF,YACtB,0BACAljB,IAASie,EAAMC,OAAOiF,WACtB,wBACAnjB,IAASie,EAAMC,OAAOkF,YACtB,0BAEA,SAEf,EAQAnF,EAAMC,OAAO7c,UAAUskB,uBAAyB,SAAU3lB,GACtD,OAAIA,IAASie,EAAMC,OAAOuF,mBACf,UACAzjB,IAASie,EAAMC,OAAOwF,mBACtB,UACA1jB,IAASie,EAAMC,OAAOyF,gBACtB,YACA3jB,IAASie,EAAMC,OAAO0F,cACtB,MAEA,SAEf,EAQA3F,EAAMC,OAAO7c,UAAUqkB,mBAAqB,SAAU1lB,GAClD,OAAIA,IAASie,EAAMC,OAAO8F,YACf,SACAhkB,IAASie,EAAMC,OAAO+F,SACtB,cACAjkB,IAASie,EAAMC,OAAOgG,aACtB,UACAlkB,IAASie,EAAMC,OAAOiG,UACtB,UACAnkB,IAASie,EAAMC,OAAOkG,WACtB,eACApkB,IAASie,EAAMC,OAAOmG,WACtB,eACArkB,IAASie,EAAMC,OAAOoG,SACtB,KACAtkB,IAASie,EAAMC,OAAOqG,UACtB,MACAvkB,IAASie,EAAM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","sources":["webpack://threeBrain/webpack/universalModuleDefinition","webpack://threeBrain/./node_modules/base64-js/index.js","webpack://threeBrain/./node_modules/buffer/index.js","webpack://threeBrain/./node_modules/gifti-reader-js/lib/base64-binary.js","webpack://threeBrain/./node_modules/gifti-reader-js/src/dataArray.js","webpack://threeBrain/./node_modules/gifti-reader-js/src/gifti.js","webpack://threeBrain/./node_modules/gifti-reader-js/src/label.js","webpack://threeBrain/./node_modules/gifti-reader-js/src/transform.js","webpack://threeBrain/./node_modules/gifti-reader-js/src/utilities.js","webpack://threeBrain/./node_modules/ieee754/index.js","webpack://threeBrain/./node_modules/nifti-reader-js/src/nifti.js","webpack://threeBrain/./node_modules/nifti-reader-js/src/nifti1.js","webpack://threeBrain/./node_modules/nifti-reader-js/src/nifti2.js","webpack://threeBrain/./node_modules/nifti-reader-js/src/utilities.js","webpack://threeBrain/./node_modules/pako/index.js","webpack://threeBrain/./node_modules/pako/lib/deflate.js","webpack://threeBrain/./node_modules/pako/lib/inflate.js","webpack://threeBrain/./node_modules/pako/lib/utils/common.js","webpack://threeBrain/./node_modules/pako/lib/utils/strings.js","webpack://threeBrain/./node_modules/pako/lib/zlib/adler32.js","webpack://threeBrain/./node_modules/pako/lib/zlib/constants.js","webpack://threeBrain/./node_modules/pako/lib/zlib/crc32.js","webpack://threeBrain/./node_modules/pako/lib/zlib/deflate.js","webpack://threeBrain/./node_modules/pako/lib/zlib/gzheader.js","webpack://threeBrain/./node_modules/pako/lib/zlib/inffast.js","webpack://threeBrain/./node_modules/pako/lib/zlib/inflate.js","webpack://threeBrain/./node_modules/pako/lib/zlib/inftrees.js","webpack://threeBrain/./node_modules/pako/lib/zlib/messages.js","webpack://threeBrain/./node_modules/pako/lib/zlib/trees.js","webpack://threeBrain/./node_modules/pako/lib/zlib/zstream.js","webpack://threeBrain/./node_modules/papaparse/papaparse.min.js","webpack://threeBrain/./node_modules/safe-buffer/index.js","webpack://threeBrain/./node_modules/sax/lib/sax.js","webpack://threeBrain/./node_modules/string_decoder/lib/string_decoder.js","webpack://threeBrain/./node_modules/fflate/lib/index.cjs","webpack://threeBrain/./node_modules/fflate/lib/worker.cjs","webpack://threeBrain/webpack/bootstrap","webpack://threeBrain/webpack/runtime/compat get default export","webpack://threeBrain/webpack/runtime/define property getters","webpack://threeBrain/webpack/runtime/hasOwnProperty shorthand","webpack://threeBrain/webpack/runtime/make namespace object","webpack://threeBrain/./node_modules/three/build/three.module.js","webpack://threeBrain/./src/js/core/StorageCache.js","webpack://threeBrain/./src/js/core/Workers.js","webpack://threeBrain/./src/js/formats/NIfTIImage.js","webpack://threeBrain/./node_modules/fflate/esm/browser.js","webpack://threeBrain/./src/js/formats/MGHImage.js","webpack://threeBrain/./src/js/formats/GIfTIMesh.js","webpack://threeBrain/./src/js/jsm/loaders/STLLoader.js","webpack://threeBrain/./src/js/formats/STLMesh.js","webpack://threeBrain/./src/js/utils.js","webpack://threeBrain/./src/js/formats/FreeSurferMesh.js","webpack://threeBrain/./src/js/formats/FreeSurferNodeValues.js","webpack://threeBrain/./src/js/formats/FreeSurferAnnot.js","webpack://threeBrain/./node_modules/gl-matrix/esm/common.js","webpack://threeBrain/./node_modules/gl-matrix/esm/mat4.js","webpack://threeBrain/./node_modules/gl-matrix/esm/vec4.js","webpack://threeBrain/./src/js/formats/streamlineIO.js","webpack://threeBrain/./src/js/formats/TTTract.js","webpack://threeBrain/./src/js/core/DataLoaders.js","webpack://threeBrain/./src/js/worker.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"threeBrain\"] = factory();\n\telse\n\t\troot[\"threeBrain\"] = factory();\n})(this, () => {\nreturn ","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","\n/*jslint browser: true, node: true */\n/*global require, module */\n\n\"use strict\";\n\n/*\n * Sept 12 2013 (M. Martinez): Slight modification to better handle padding.\n\n Copyright (c) 2011, Daniel Guerrero\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in the\n documentation and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL DANIEL GUERRERO BE LIABLE FOR ANY\n DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Uses the new array typed in javascript to binary base64 encode/decode\n * at the moment just decodes a binary base64 encoded\n * into either an ArrayBuffer (decodeArrayBuffer)\n * or into an Uint8Array (decode)\n *\n * References:\n * https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer\n * https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array\n */\n\nvar Base64Binary = {\n    _keyStr : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\n    /* will return a  Uint8Array type */\n    decodeArrayBuffer: function(input) {\n        var lkey1 = this._keyStr.indexOf(input.charAt(input.length-1));\n        var lkey2 = this._keyStr.indexOf(input.charAt(input.length-2));\n\n        var bytes = (input.length/4) * 3;\n        if (lkey1 == 64) bytes--; //padding chars, so skip\n        if (lkey2 == 64) bytes--; //padding chars, so skip\n\n        var ab = new ArrayBuffer(bytes);\n        this.decode(input, ab, bytes);\n\n        return ab;\n    },\n\n    decode: function(input, arrayBuffer, bytes) {\n        var uarray;\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        var j = 0;\n\n        if (arrayBuffer)\n            uarray = new Uint8Array(arrayBuffer);\n        else\n            uarray = new Uint8Array(bytes);\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        for (i=0; i<bytes; i+=3) {\n            //get the 3 octects in 4 ascii chars\n            enc1 = this._keyStr.indexOf(input.charAt(j++));\n            enc2 = this._keyStr.indexOf(input.charAt(j++));\n            enc3 = this._keyStr.indexOf(input.charAt(j++));\n            enc4 = this._keyStr.indexOf(input.charAt(j++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            uarray[i] = chr1;\n            if (enc3 != 64) uarray[i+1] = chr2;\n            if (enc4 != 64) uarray[i+2] = chr3;\n        }\n\n        return uarray;\n    }\n};\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = Base64Binary;\n}\n","\n/*jslint browser: true, node: true */\n/*global require, module */\n\n\"use strict\";\n\n/*** Imports ***/\n\nvar gifti = gifti || {};\ngifti.Transform = gifti.Transform || ((typeof require !== 'undefined') ? require('./transform.js') : null);\n\nvar Base64Binary = Base64Binary || ((typeof require !== 'undefined') ? require('../lib/base64-binary.js') : null);\n\nvar fflate = fflate || ((typeof require !== 'undefined') ? require('fflate') : null);\n\n\n\n/*** Static Pseudo-constants ***/\n\ngifti.NIFTI_INTENT_GENMATRIX = \"NIFTI_INTENT_GENMATRIX\";\ngifti.NIFTI_INTENT_LABEL = \"NIFTI_INTENT_LABEL\";\ngifti.NIFTI_INTENT_NODE_INDEX = \"NIFTI_INTENT_NODE_INDEX\";\ngifti.NIFTI_INTENT_POINTSET = \"NIFTI_INTENT_POINTSET\";\ngifti.NIFTI_INTENT_RGB_VECTOR = \"NIFTI_INTENT_RGB_VECTOR\";\ngifti.NIFTI_INTENT_RGBA_VECTOR = \"NIFTI_INTENT_RGBA_VECTOR\";\ngifti.NIFTI_INTENT_SHAPE = \"NIFTI_INTENT_SHAPE\";\ngifti.NIFTI_INTENT_TIME_SERIES = \"NIFTI_INTENT_TIME_SERIES\";\ngifti.NIFTI_INTENT_TRIANGLE = \"NIFTI_INTENT_TRIANGLE\";\ngifti.NIFTI_INTENT_NONE = \"NIFTI_INTENT_NONE\";\ngifti.NIFTI_INTENT_VECTOR = \"NIFTI_INTENT_VECTOR\";\n\ngifti.ATT_ARRAYINDEXINGORDER = \"ArrayIndexingOrder\";\ngifti.ATT_DATATYPE = \"DataType\";\ngifti.ATT_DIMENSIONALITY = \"Dimensionality\";\ngifti.ATT_DIMN = \"Dim\";\ngifti.ATT_ENCODING = \"Encoding\";\ngifti.ATT_ENDIAN = \"Endian\";\ngifti.ATT_EXTERNALFILENAME = \"ExternalFileName\";\ngifti.ATT_EXTERNALFILEOFFSET = \"ExternalFileOffset\";\ngifti.ATT_INTENT = \"Intent\";\n\ngifti.ENCODING_ASCII = \"ASCII\";\ngifti.ENCODING_BASE64BINARY = \"Base64Binary\";\ngifti.ENCODING_GZIPBASE64BINARY = \"GZipBase64Binary\";\ngifti.ENCODING_EXTERNALFILEBINARY = \"ExternalFileBinary\";\n\ngifti.TYPE_NIFTI_TYPE_UINT8 = \"NIFTI_TYPE_UINT8\";\ngifti.TYPE_NIFTI_TYPE_INT32 = \"NIFTI_TYPE_INT32\";\ngifti.TYPE_NIFTI_TYPE_FLOAT32 = \"NIFTI_TYPE_FLOAT32\";\n\n\n\n/*** Constructor ***/\n\n/**\n * The DataArray constructor.\n * @constructor\n * @property {object} attributes\n * @property {object} metadata\n * @property {gifti.Transform[]} transforms\n * @property {Float32Array|Uint8Array|Int32Array} data\n * @type {Function}\n */\ngifti.DataArray = gifti.DataArray || function () {\n    this.attributes = null;\n    this.metadata = {};\n    this.transforms = [];\n    this.data = null;\n    this.dataConverted = false;\n};\n\n\n\n/*** Prototype Methods ***/\n\n/**\n * Returns true if this data array represents a point set.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isPointSet = function() {\n    return this.attributes[gifti.ATT_INTENT] === gifti.NIFTI_INTENT_POINTSET;\n};\n\n\n/**\n * Returns true if this data array represents triangle indices.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isTriangles = function() {\n    return this.attributes[gifti.ATT_INTENT] === gifti.NIFTI_INTENT_TRIANGLE;\n};\n\n\n/**\n * Returns true if this data array represents normals.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isNormals = function() {\n    return this.attributes[gifti.ATT_INTENT] === gifti.NIFTI_INTENT_VECTOR;\n};\n\n\n/**\n * Returns true if this data array represents normals.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isColors = function() {\n    return (this.attributes[gifti.ATT_INTENT] === gifti.NIFTI_INTENT_RGB_VECTOR) || (this.attributes[gifti.ATT_INTENT] === gifti.NIFTI_INTENT_RGBA_VECTOR);\n};\n\n\n/**\n * Returns the number of dimensions of this data array.\n * @returns {number}\n */\ngifti.DataArray.prototype.getDimensions = function() {\n    return parseInt(this.attributes[gifti.ATT_DIMENSIONALITY]);\n};\n\n\n/**\n * Returns the number of elements in the specified dimension.\n * @param {number} dimIndex\n * @returns {number}\n */\ngifti.DataArray.prototype.getNumElements = function(dimIndex) {\n    if (dimIndex === undefined) {\n        dimIndex = 0;\n    }\n    \n    return parseInt(this.attributes[gifti.ATT_DIMN + dimIndex]);\n};\n\n\n/**\n * Returns true if this data array represents scalar data.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isScalar = function() {\n    return (this.getDimensions() == 1);\n};\n\n\n/**\n * Returns true if this data array is in triples.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isTriple = function() {\n    return ((this.getDimensions() == 2) && (this.getNumElements(1) == 3));\n};\n\n\n/**\n * Returns true if this data array is in quads.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isQuad = function() {\n    return ((this.getDimensions() == 2) && (this.getNumElements(1) == 4));\n};\n\n\n/**\n * Returns true if this data array is encoded in ASCII format.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isAscii = function() {\n    return (gifti.ENCODING_ASCII === this.attributes[gifti.ATT_ENCODING]);\n};\n\n\n/**\n * Returns true if this data array is encoded in Base64 format.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isBase64Binary = function() {\n    return (gifti.ENCODING_BASE64BINARY === this.attributes[gifti.ATT_ENCODING]);\n};\n\n\n/**\n * Returns true if this data array is encoded in GZIP-Base64 format.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isGzipBase64Binary = function() {\n    return (gifti.ENCODING_GZIPBASE64BINARY === this.attributes[gifti.ATT_ENCODING]);\n};\n\n\n/**\n * Returns true if this data array uses Base64 encoding.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isBase64Encoded = function() {\n    return this.isBase64Binary() || this.isGzipBase64Binary();\n};\n\n\n/**\n * Returns true if the datatype is 32-bit floating point.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isFloat32 = function() {\n    return (gifti.TYPE_NIFTI_TYPE_FLOAT32 === this.attributes[gifti.ATT_DATATYPE]);\n};\n\n\n/**\n * Returns true if the datatype is 32-bit signed integer.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isInt32 = function() {\n    return (gifti.TYPE_NIFTI_TYPE_INT32 === this.attributes[gifti.ATT_DATATYPE]);\n};\n\n\n/**\n * Returns true if the datatype is 8-bit unsigned integer.\n * @returns {boolean}\n */\ngifti.DataArray.prototype.isUnsignedInt8 = function() {\n    return (gifti.TYPE_NIFTI_TYPE_UINT8 === this.attributes[gifti.ATT_DATATYPE]);\n};\n\n\n\n/**\n * Returns the data as a typed array (either Float32Array, Uint8Array or Int32Array)\n * @returns {Float32Array|Uint8Array|Int32Array}\n */\ngifti.DataArray.prototype.getData = function() {\n    if (!this.dataConverted) {\n        this.dataConverted = true;\n\n        if (this.isAscii()) {\n            if (this.isUnsignedInt8()) {\n                gifti.DataArray.readUnsignedInt8ASCII(this);\n            } else if (this.isInt32()) {\n                gifti.DataArray.readSignedInt32ASCII(this);\n            } else {\n                gifti.DataArray.readFloat32ASCII(this);\n            }\n        } else if (this.isBase64Binary()) {\n            if (this.isUnsignedInt8()) {\n                gifti.DataArray.readUnsignedInt8Base64(this);\n            } else if (this.isInt32()) {\n                gifti.DataArray.readSignedInt32Base64(this);\n            } else {\n                gifti.DataArray.readFloat32Base64(this);\n            }\n        } else if (this.isGzipBase64Binary()) {\n            if (this.isUnsignedInt8()) {\n                gifti.DataArray.readUnsignedInt8GZIPBase64(this);\n            } else if (this.isInt32()) {\n                gifti.DataArray.readSignedInt32GZIPBase64(this);\n            } else {\n                gifti.DataArray.readFloat32GZIPBase64(this);\n            }\n        }\n    }\n\n    return this.data;\n};\n\n\n\ngifti.DataArray.prototype.getDataAsync = function(onProgress, onFinish) {\n    if (!this.dataConverted) {\n        this.dataConverted = true;\n\n        if (this.isAscii()) {\n            if (this.isUnsignedInt8()) {\n                gifti.DataArray.readUnsignedInt8ASCII(this);\n            } else if (this.isInt32()) {\n                gifti.DataArray.readSignedInt32ASCII(this);\n            } else {\n                gifti.DataArray.readFloat32ASCII(this);\n            }\n\n            onFinish();\n        } else if (this.isBase64Binary()) {\n            if (this.isUnsignedInt8()) {\n                gifti.DataArray.readUnsignedInt8Base64(this);\n            } else if (this.isInt32()) {\n                gifti.DataArray.readSignedInt32Base64(this);\n            } else {\n                gifti.DataArray.readFloat32Base64(this);\n            }\n\n            onFinish();\n        } else if (this.isGzipBase64Binary()) {\n            if (this.isUnsignedInt8()) {\n                gifti.DataArray.readUnsignedInt8GZIPBase64Async(this, onProgress, onFinish);\n            } else if (this.isInt32()) {\n                gifti.DataArray.readSignedInt32GZIPBase64Async(this, onProgress, onFinish);\n            } else {\n                gifti.DataArray.readFloat32GZIPBase64Async(this, onProgress, onFinish);\n            }\n        }\n    }\n};\n\n\n\n// http://stackoverflow.com/questions/17374893/how-to-extract-floating-numbers-from-strings-in-javascript\ngifti.DataArray.readFloat32ASCII = function(obj) {\n    var regex = /[+-]?\\d+(\\.\\d+)?/g;\n    obj.data = new Float32Array(obj.data.match(regex).map(function(v) { return parseFloat(v); }));\n};\n\n\n\ngifti.DataArray.readSignedInt32ASCII = function(obj) {\n    var regex = /[+-]?\\d+(\\.\\d+)?/g;\n    obj.data = new Int32Array(obj.data.match(regex).map(function(v) { return parseInt(v); }));\n};\n\n\n\ngifti.DataArray.readUnsignedInt8ASCII = function(obj) {\n    var regex = /[+-]?\\d+(\\.\\d+)?/g;\n    obj.data = new Uint8Array(obj.data.match(regex).map(function(v) { return parseInt(v); }));\n};\n\n\n\ngifti.DataArray.readUnsignedInt8Base64 = function(obj) {\n    var rawData = Base64Binary.decodeArrayBuffer(obj.data);\n    obj.data = new Uint8Array(rawData, 0, rawData.byteLength);\n};\n\n\n\ngifti.DataArray.readSignedInt32Base64 = function(obj) {\n    var rawData = Base64Binary.decodeArrayBuffer(obj.data);\n    obj.data = new Int32Array(rawData, 0, rawData.byteLength / 4);\n};\n\n\n\ngifti.DataArray.readFloat32Base64 = function(obj) {\n    var rawData = Base64Binary.decodeArrayBuffer(obj.data);\n    obj.data = new Float32Array(rawData, 0, rawData.byteLength / 4);\n};\n\n\n\ngifti.DataArray.readUnsignedInt8GZIPBase64 = function(obj) {\n    var rawData = Base64Binary.decodeArrayBuffer(obj.data);\n    rawData = fflate.decompressSync(new Uint8Array(rawData)).buffer;\n    obj.data = new Uint8Array(rawData, 0, rawData.byteLength);\n};\n\n\n\n\ngifti.DataArray.readUnsignedInt8GZIPBase64Async = function(obj, onProgress, onFinish) {\n    var rawData = Base64Binary.decodeArrayBuffer(obj.data);\n\n    var inflator = new fflate.Inflate();\n\n    var onFinished = function() {\n        obj.data = new Uint8Array(inflator.result.buffer, 0, inflator.result.buffer.byteLength);\n        onFinish(obj.data);\n    };\n\n    setTimeout(function() { gifti.DataArray.readNext(inflator, rawData, 0, onProgress, onFinished); }, 0);\n};\n\n\n\ngifti.DataArray.readSignedInt32GZIPBase64 = function(obj) {\n    var rawData = Base64Binary.decodeArrayBuffer(obj.data);\n    rawData = fflate.decompressSync(new Uint8Array(rawData)).buffer;\n    obj.data = new Int32Array(rawData, 0, rawData.byteLength / 4);\n};\n\n\n\ngifti.DataArray.readSignedInt32GZIPBase64Async = function(obj, onProgress, onFinish) {\n    var rawData = Base64Binary.decodeArrayBuffer(obj.data);\n\n    var inflator = new fflate.Inflate();\n\n    var onFinished = function() {\n        obj.data = new Int32Array(inflator.result.buffer, 0, inflator.result.buffer.byteLength / 4);\n        onFinish(obj.data);\n    };\n\n    setTimeout(function() { gifti.DataArray.readNext(inflator, rawData, 0, onProgress, onFinished); }, 0);\n};\n\n\n\ngifti.DataArray.readFloat32GZIPBase64 = function(obj) {\n    var rawData = Base64Binary.decodeArrayBuffer(obj.data);\n    rawData = fflate.decompressSync(new Uint8Array(rawData)).buffer;\n    obj.data = new Float32Array(rawData, 0, rawData.byteLength / 4);\n};\n\n\n\ngifti.DataArray.readFloat32GZIPBase64Async = function(obj, onProgress, onFinish) {\n    var rawData = Base64Binary.decodeArrayBuffer(obj.data);\n\n    var inflator = new fflate.Inflate();\n\n    var onFinished = function() {\n        obj.data = new Float32Array(inflator.result.buffer, 0, inflator.result.buffer.byteLength / 4);\n        onFinish(obj.data);\n    };\n\n    setTimeout(function() { gifti.DataArray.readNext(inflator, rawData, 0, onProgress, onFinished); }, 0);\n};\n\n\n\ngifti.DataArray.readNext = function(inflator, rawData, index, onProgress, onFinish) {\n    var end = index + 4096 * 8;\n    var finished = (end >= rawData.byteLength);\n\n    inflator.push(rawData.slice(index, index + 4096 * 8), finished);\n\n    if (finished) {\n        onFinish();\n    } else {\n        onProgress(end / rawData.byteLength);\n        setTimeout(function() { gifti.DataArray.readNext(inflator, rawData, end, onProgress, onFinish); }, 0);\n    }\n};\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = gifti.DataArray;\n}\n","\n/*jslint browser: true, node: true */\n/*global require, module */\n\n\"use strict\";\n\n/*** Imports ***/\n\n/**\n * gifti\n * @type {{}}\n */\nvar gifti = gifti || {};\n\ngifti.Utils = gifti.Utils || ((typeof require !== 'undefined') ? require('./utilities.js') : null);\ngifti.DataArray = gifti.DataArray || ((typeof require !== 'undefined') ? require('./dataArray.js') : null);\ngifti.Transform = gifti.Transform || ((typeof require !== 'undefined') ? require('./transform.js') : null);\ngifti.Label = gifti.Label || ((typeof require !== 'undefined') ? require('./label.js') : null);\n\nvar sax = sax || ((typeof require !== 'undefined') ? require('sax') : null);\n\n\n/*** Static Pseudo-constants ***/\n\ngifti.TAG_TRANSFORM = \"CoordinateSystemTransformMatrix\";\ngifti.TAG_DATA = \"Data\";\ngifti.TAG_DATAARRAY = \"DataArray\";\ngifti.TAG_DATASPACE = \"DataSpace\";\ngifti.TAG_GIFTI = \"GIFTI\";\ngifti.TAG_LABEL = \"Label\";\ngifti.TAG_LABELTABLE = \"LabelTable\";\ngifti.TAG_MATRIXDATA = \"MatrixData\";\ngifti.TAG_METADATA = \"MetaData\";\ngifti.TAG_MD = \"MD\";\ngifti.TAG_NAME = \"Name\";\ngifti.TAG_TRANSFORMEDSPACE = \"TransformedSpace\";\ngifti.TAG_VALUE = \"Value\";\n\n\n\n/*** Constructor ***/\n\n/**\n * The GIFTI constructor.\n * @constructor\n * @property {object} attributes\n * @property {object} metadata\n * @property {gifti.Label[]} labelTable\n * @property {gifti.DataArray[]} dataArrays\n * @type {Function}\n */\ngifti.GIFTI = gifti.GIFTI || function () {\n    this.attributes = null;\n    this.metadata = {};\n    this.dataArrays = [];\n    this.labelTable = [];\n};\n\n\n\n/*** Prototype Methods ***/\n\n/**\n * Returns the point set data array.\n * @returns {gifti.DataArray}\n */\ngifti.GIFTI.prototype.getPointsDataArray = function () {\n    var ctr;\n\n    for (ctr = 0; ctr < this.dataArrays.length; ctr += 1) {\n        if (this.dataArrays[ctr].isPointSet()) {\n            return this.dataArrays[ctr];\n        }\n    }\n\n    return null;\n};\n\n\n/**\n * Returns the triangle indices data array.\n * @returns {gifti.DataArray}\n */\ngifti.GIFTI.prototype.getTrianglesDataArray = function () {\n    var ctr;\n\n    for (ctr = 0; ctr < this.dataArrays.length; ctr += 1) {\n        if (this.dataArrays[ctr].isTriangles()) {\n            return this.dataArrays[ctr];\n        }\n    }\n\n    return null;\n};\n\n\n/**\n * Returns the normals data array.\n * @returns {gifti.DataArray}\n */\ngifti.GIFTI.prototype.getNormalsDataArray = function () {\n    var ctr;\n\n    for (ctr = 0; ctr < this.dataArrays.length; ctr += 1) {\n        if (this.dataArrays[ctr].isNormals()) {\n            return this.dataArrays[ctr];\n        }\n    }\n\n    return null;\n};\n\n\n\n/**\n * Returns the colors data array.\n * @returns {gifti.DataArray}\n */\ngifti.GIFTI.prototype.getColorsDataArray = function () {\n    var ctr;\n\n    for (ctr = 0; ctr < this.dataArrays.length; ctr += 1) {\n        if (this.dataArrays[ctr].isColors()) {\n            return this.dataArrays[ctr];\n        }\n    }\n\n    return null;\n};\n\n\n\n/**\n * Returns the number of points.\n * @returns {number}\n */\ngifti.GIFTI.prototype.getNumPoints = function () {\n    var ctr;\n\n    for (ctr = 0; ctr < this.dataArrays.length; ctr += 1) {\n        if (this.dataArrays[ctr].isPointSet()) {\n            return this.dataArrays[ctr].getNumElements();\n        }\n    }\n\n    return 0;\n};\n\n\n/**\n * Returns the number of triangles.\n * @returns {number}\n */\ngifti.GIFTI.prototype.getNumTriangles = function () {\n    var ctr;\n\n    for (ctr = 0; ctr < this.dataArrays.length; ctr += 1) {\n        if (this.dataArrays[ctr].isTriangles()) {\n            return this.dataArrays[ctr].getNumElements();\n        }\n    }\n\n    return 0;\n};\n\n\n\n/*** Static Methods ***/\n\n/**\n * Returns true if this filename contains \".gii\"\n * @param filename\n * @returns {boolean}\n */\ngifti.isThisFormat = function (filename) {\n    return (filename.indexOf(\".gii\") !== -1);\n};\n\n\n\n/**\n * Parses GIFTI data.\n * @param {string} xmlStr\n * @returns {gifti.GIFTI}\n */\ngifti.parse = function (xmlStr) {\n    var parser = sax.parser(true),\n        gii = null,\n        currentDataArray = null,\n        currentMetadataHolder = null,\n        currentMetadataName = null,\n        currentMetadataValue = null,\n        currentTransform = null,\n        currentString = \"\",\n        currentLabel = null,\n        isReadingGIFTI = false,\n        isReadingMetadata = false,\n        isReadingMD = false,\n        isReadingName = false,\n        isReadingValue = false,\n        isReadingDataArray = false,\n        isReadingTransform = false,\n        isReadingDataSpace = false,\n        isReadingTransformedSpace = false,\n        isReadingMatrixData = false,\n        isReadingData = false,\n        isReadingLabelTable = false,\n        isReadingLabel = false;\n\n    parser.onopentag = function (node) {\n        if (node.name === gifti.TAG_GIFTI) {\n            isReadingGIFTI = true;\n            currentMetadataHolder = gii = new gifti.GIFTI();\n            gii.attributes = node.attributes;\n        } else if (node.name === gifti.TAG_METADATA) {\n            isReadingMetadata = true;\n        } else if (node.name === gifti.TAG_MD) {\n            isReadingMD = true;\n        } else if (node.name === gifti.TAG_NAME) {\n            isReadingName = true;\n        } else if (node.name === gifti.TAG_VALUE) {\n            isReadingValue = true;\n        } else if (node.name === gifti.TAG_LABELTABLE) {\n            isReadingLabelTable = true;\n        } else if (node.name === gifti.TAG_LABEL) {\n            isReadingLabel = true;\n            currentLabel = new gifti.Label(node.attributes);\n        } else if (node.name === gifti.TAG_DATAARRAY) {\n            isReadingDataArray = true;\n            currentMetadataHolder = currentDataArray = new gifti.DataArray();\n            gii.dataArrays.push(currentDataArray);\n            currentDataArray.attributes = node.attributes;\n        } else if (node.name === gifti.TAG_TRANSFORM) {\n            isReadingTransform = true;\n            currentTransform = new gifti.Transform();\n            currentDataArray.transforms.push(currentTransform);\n        } else if (node.name === gifti.TAG_DATASPACE) {\n            isReadingDataSpace = true;\n        } else if (node.name === gifti.TAG_TRANSFORMEDSPACE) {\n            isReadingTransformedSpace = true;\n        } else if (node.name === gifti.TAG_MATRIXDATA) {\n            isReadingMatrixData = true;\n        } else if (node.name === gifti.TAG_DATA) {\n            isReadingData = true;\n        }\n    };\n\n    parser.ontext = parser.oncdata = function (text) {\n        if (isReadingName) {\n            currentString += text;\n        } else if (isReadingValue) {\n            currentString += text;\n        } else if (isReadingDataSpace) {\n            currentString += text;\n        } else if (isReadingTransformedSpace) {\n            currentString += text;\n        } else if (isReadingMatrixData) {\n            currentString += text;\n        } else if (isReadingData) {\n            currentString += text;\n        } else if (isReadingLabel) {\n            currentString += text;\n        }\n    };\n\n    parser.onclosetag = function (tagName) {\n        if (tagName === gifti.TAG_GIFTI) {\n            isReadingGIFTI = false;\n        } else if (tagName === gifti.TAG_METADATA) {\n            isReadingMetadata = false;\n        } else if (tagName === gifti.TAG_MD) {\n            isReadingMD = false;\n            if (currentMetadataHolder) {\n                currentMetadataHolder.metadata[currentMetadataName] = currentMetadataValue;\n            }\n        } else if (tagName === gifti.TAG_NAME) {\n            isReadingName = false;\n            currentMetadataName = currentString;\n            currentString = \"\";\n        } else if (tagName === gifti.TAG_VALUE) {\n            isReadingValue = false;\n            currentMetadataValue = currentString;\n            currentString = \"\";\n        } else if (tagName === gifti.TAG_LABELTABLE) {\n            isReadingLabelTable = false;\n        } else if (tagName === gifti.TAG_LABEL) {\n            currentLabel.label = currentString.trim();\n            gii.labelTable[currentLabel.key] = currentLabel;\n            currentString = \"\";\n        } else if (tagName === gifti.TAG_DATAARRAY) {\n            isReadingDataArray = false;\n        } else if (tagName === gifti.TAG_TRANSFORM) {\n            isReadingTransform = false;\n        } else if (tagName === gifti.TAG_DATASPACE) {\n            isReadingDataSpace = false;\n            currentTransform.dataSpace = currentString;\n            currentString = \"\";\n        } else if (tagName === gifti.TAG_TRANSFORMEDSPACE) {\n            isReadingTransformedSpace = false;\n            currentTransform.transformedSpace = currentString;\n            currentString = \"\";\n        } else if (tagName === gifti.TAG_MATRIXDATA) {\n            isReadingMatrixData = false;\n            currentTransform.matrixData = currentString;\n            currentString = \"\";\n        } else if (tagName === gifti.TAG_DATA) {\n            isReadingData = false;\n            currentDataArray.data = currentString;\n            currentString = \"\";\n        }\n    };\n\n    parser.onerror = function (e) {\n        console.log(e);\n    };\n\n    parser.write(xmlStr).close();\n\n    return gii;\n};\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = gifti;\n}\n","\n/*jslint browser: true, node: true */\n/*global require, module */\n\n\"use strict\";\n\n/*** Imports ***/\n\nvar gifti = gifti || {};\n\n\n\n/*** Static Pseudo-constants ***/\n\ngifti.ATT_KEY = \"Key\";\ngifti.ATT_RED = \"Red\";\ngifti.ATT_GREEN = \"Green\";\ngifti.ATT_BLUE = \"Blue\";\ngifti.ATT_ALPHA = \"Alpha\";\ngifti.ATT_INDEX = \"Index\";\n\n\n/*** Constructor ***/\n\n/**\n * The Label constructor.\n * @constructor\n * @param {object} attributes\n * @property {string} key\n * @property {number} r\n * @property {number} g\n * @property {number} b\n * @property {number} a\n * @property {string} label\n * @type {Function|*}\n */\ngifti.Label = gifti.Label || function (attributes) {\n    this.key = attributes[gifti.ATT_KEY] || attributes[gifti.ATT_INDEX];\n    this.r = parseFloat(attributes[gifti.ATT_RED]);\n    this.g = parseFloat(attributes[gifti.ATT_GREEN]);\n    this.b = parseFloat(attributes[gifti.ATT_BLUE]);\n    this.a = parseFloat(attributes[gifti.ATT_ALPHA]);\n    this.label = null;\n};\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = gifti.Label;\n}\n","\n/*jslint browser: true, node: true */\n/*global require, module */\n\n\"use strict\";\n\n/*** Imports ***/\n\nvar gifti = gifti || {};\n\n\n\n/*** Constructor ***/\n\n/**\n * The Transform constructor.\n * @constructor\n * @property {string} dataSpace\n * @property {string} transformedSpace\n * @property {number[]} matrixData\n * @type {Function}\n */\ngifti.Transform = gifti.Transform || function () {\n    this.dataSpace = null;\n    this.transformedSpace = null;\n    this.matrixData = null;\n};\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = gifti.Transform;\n}\n","\n/*jslint browser: true, node: true */\n/*global require, module */\n\n\"use strict\";\n\n/*** Imports ***/\n\nvar gifti = gifti || {};\ngifti.Utils = gifti.Utils || {};\n\n\n\n/*** Static Pseudo-constants ***/\n\ngifti.Utils.crcTable = null;\n\n\n\n/*** Static methods ***/\n\n// http://stackoverflow.com/questions/18638900/javascript-crc32\ngifti.Utils.makeCRCTable = function(){\n    var c;\n    var crcTable = [];\n    for(var n =0; n < 256; n++){\n        c = n;\n        for(var k =0; k < 8; k++){\n            c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n        }\n        crcTable[n] = c;\n    }\n    return crcTable;\n};\n\n\n\ngifti.Utils.crc32 = function(dataView) {\n    var crcTable = gifti.Utils.crcTable || (gifti.Utils.crcTable = gifti.Utils.makeCRCTable());\n    var crc = 0 ^ (-1);\n\n    for (var i = 0; i < dataView.byteLength; i++ ) {\n        crc = (crc >>> 8) ^ crcTable[(crc ^ dataView.getUint8(i)) & 0xFF];\n    }\n\n    return (crc ^ (-1)) >>> 0;\n};\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = gifti.Utils;\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\n/*jslint browser: true, node: true */\n/*global require, module */\n\n\"use strict\";\n\n/*** Imports ***/\n\n/**\n * nifti\n * @type {*|{}}\n */\nvar nifti = nifti || {};\nnifti.NIFTI1 = nifti.NIFTI1 || ((typeof require !== 'undefined') ? require('./nifti1.js') : null);\nnifti.NIFTI2 = nifti.NIFTI2 || ((typeof require !== 'undefined') ? require('./nifti2.js') : null);\nnifti.Utils = nifti.Utils || ((typeof require !== 'undefined') ? require('./utilities.js') : null);\n\nvar pako = pako || ((typeof require !== 'undefined') ? require('pako') : null);\n\n\n\n/*** Static Methods ***/\n\n/**\n * Returns true if this data represents a NIFTI-1 header.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nnifti.isNIFTI1 = function (data) {\n    var buf, mag1, mag2, mag3;\n\n    if (data.byteLength < nifti.NIFTI1.STANDARD_HEADER_SIZE) {\n        return false;\n    }\n\n    buf = new DataView(data);\n\n    if (buf)\n\n    mag1 = buf.getUint8(nifti.NIFTI1.MAGIC_NUMBER_LOCATION);\n    mag2 = buf.getUint8(nifti.NIFTI1.MAGIC_NUMBER_LOCATION + 1);\n    mag3 = buf.getUint8(nifti.NIFTI1.MAGIC_NUMBER_LOCATION + 2);\n\n    return !!((mag1 === nifti.NIFTI1.MAGIC_NUMBER[0]) && (mag2 === nifti.NIFTI1.MAGIC_NUMBER[1]) &&\n        (mag3 === nifti.NIFTI1.MAGIC_NUMBER[2]));\n};\n\n\n/**\n * Returns true if this data represents a NIFTI-2 header.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nnifti.isNIFTI2 = function (data) {\n    var buf, mag1, mag2, mag3;\n\n    if (data.byteLength < nifti.NIFTI1.STANDARD_HEADER_SIZE) {\n        return false;\n    }\n\n    buf = new DataView(data);\n    mag1 = buf.getUint8(nifti.NIFTI2.MAGIC_NUMBER_LOCATION);\n    mag2 = buf.getUint8(nifti.NIFTI2.MAGIC_NUMBER_LOCATION + 1);\n    mag3 = buf.getUint8(nifti.NIFTI2.MAGIC_NUMBER_LOCATION + 2);\n\n    return !!((mag1 === nifti.NIFTI2.MAGIC_NUMBER[0]) && (mag2 === nifti.NIFTI2.MAGIC_NUMBER[1]) &&\n    (mag3 === nifti.NIFTI2.MAGIC_NUMBER[2]));\n};\n\n\n\n/**\n * Returns true if this data represents a NIFTI header.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nnifti.isNIFTI = function (data) {\n    return (nifti.isNIFTI1(data) || nifti.isNIFTI2(data));\n};\n\n\n\n/**\n * Returns true if this data is GZIP compressed.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nnifti.isCompressed = function (data) {\n    var buf, magicCookie1, magicCookie2;\n\n    if (data) {\n        buf = new DataView(data);\n\n        magicCookie1 = buf.getUint8(0);\n        magicCookie2 = buf.getUint8(1);\n\n        if (magicCookie1 === nifti.Utils.GUNZIP_MAGIC_COOKIE1) {\n            return true;\n        }\n\n        if (magicCookie2 === nifti.Utils.GUNZIP_MAGIC_COOKIE2) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\n\n\n/**\n * Returns decompressed data.\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nnifti.decompress = function (data) {\n    return pako.inflate(data).buffer;\n};\n\n\n\n/**\n * Reads and returns the header object.\n * @param {ArrayBuffer} data\n * @returns {nifti.NIFTI1|nifti.NIFTI2|null}\n */\nnifti.readHeader = function (data) {\n    var header = null;\n\n    if (nifti.isCompressed(data)) {\n        data = nifti.decompress(data);\n    }\n\n    if (nifti.isNIFTI1(data)) {\n        header = new nifti.NIFTI1();\n    } else if (nifti.isNIFTI2(data)) {\n        header = new nifti.NIFTI2();\n    }\n\n    if (header) {\n        header.readHeader(data);\n    } else {\n        console.error(\"That file does not appear to be NIFTI!\");\n    }\n\n    return header;\n};\n\n\n\n/**\n * Returns true if this header contains an extension.\n * @param {nifti.NIFTI1|nifti.NIFTI2} header\n * @returns {boolean}\n */\nnifti.hasExtension = function (header) {\n    return (header.extensionFlag[0] != 0);\n};\n\n\n\n/**\n * Returns the image data.\n * @param {nifti.NIFTI1|nifti.NIFTI2} header\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nnifti.readImage = function (header, data) {\n    var imageOffset = header.vox_offset,\n        timeDim = 1,\n        statDim = 1;\n\n    if (header.dims[4]) {\n        timeDim = header.dims[4];\n    }\n\n    if (header.dims[5]) {\n        statDim = header.dims[5];\n    }\n\n    var imageSize = header.dims[1] * header.dims[2] * header.dims[3] * timeDim * statDim * (header.numBitsPerVoxel / 8);\n    return data.slice(imageOffset, imageOffset + imageSize);\n};\n\n\n\n/**\n * Returns the extension data (including extension header).\n * @param {nifti.NIFTI1|nifti.NIFTI2} header\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nnifti.readExtension = function (header, data) {\n    var loc = header.getExtensionLocation(),\n        size = header.extensionSize;\n\n    return data.slice(loc, loc + size);\n};\n\n\n\n/**\n * Returns the extension data.\n * @param {nifti.NIFTI1|nifti.NIFTI2} header\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nnifti.readExtensionData = function (header, data) {\n    var loc = header.getExtensionLocation(),\n        size = header.extensionSize;\n\n    return data.slice(loc + 8, loc + size - 8);\n};\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = nifti;\n}\n","\n/*jslint browser: true, node: true */\n/*global */\n\n\"use strict\";\n\n/*** Imports ***/\n\nvar nifti = nifti || {};\nnifti.Utils = nifti.Utils || ((typeof require !== 'undefined') ? require('./utilities.js') : null);\n\n\n\n/*** Constructor ***/\n\n/**\n * The NIFTI1 constructor.\n * @constructor\n * @property {boolean} littleEndian\n * @property {number} dim_info\n * @property {number[]} dims - image dimensions\n * @property {number} intent_p1\n * @property {number} intent_p2\n * @property {number} intent_p3\n * @property {number} intent_code\n * @property {number} datatypeCode\n * @property {number} numBitsPerVoxel\n * @property {number} slice_start\n * @property {number} slice_end\n * @property {number} slice_code\n * @property {number[]} pixDims - voxel dimensions\n * @property {number} vox_offset\n * @property {number} scl_slope\n * @property {number} scl_inter\n * @property {number} xyzt_units\n * @property {number} cal_max\n * @property {number} cal_min\n * @property {number} slice_duration\n * @property {number} toffset\n * @property {string} description\n * @property {string} aux_file\n * @property {string} intent_name\n * @property {number} qform_code\n * @property {number} sform_code\n * @property {number} quatern_b\n * @property {number} quatern_c\n * @property {number} quatern_d\n * @property {number} quatern_x\n * @property {number} quatern_y\n * @property {number} quatern_z\n * @property {Array.<Array.<number>>} affine\n * @property {string} magic\n * @property {boolean} isHDR - if hdr/img format\n * @property {number[]} extensionFlag\n * @property {number} extensionSize\n * @property {number} extensionCode\n * @type {Function}\n */\nnifti.NIFTI1 = nifti.NIFTI1 || function () {\n    this.littleEndian = false;\n    this.dim_info = 0;\n    this.dims = [];\n    this.intent_p1 = 0;\n    this.intent_p2 = 0;\n    this.intent_p3 = 0;\n    this.intent_code = 0;\n    this.datatypeCode = 0;\n    this.numBitsPerVoxel = 0;\n    this.slice_start = 0;\n    this.slice_end = 0;\n    this.slice_code = 0;\n    this.pixDims = [];\n    this.vox_offset = 0;\n    this.scl_slope = 1;\n    this.scl_inter = 0;\n    this.xyzt_units = 0;\n    this.cal_max = 0;\n    this.cal_min = 0;\n    this.slice_duration = 0;\n    this.toffset = 0;\n    this.description = \"\";\n    this.aux_file = \"\";\n    this.intent_name = \"\";\n    this.qform_code = 0;\n    this.sform_code = 0;\n    this.quatern_b = 0;\n    this.quatern_c = 0;\n    this.quatern_d = 0;\n    this.qoffset_x = 0;\n    this.qoffset_y = 0;\n    this.qoffset_z = 0;\n    this.affine = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n    this.magic = 0;\n    this.isHDR = false;\n    this.extensionFlag = [0, 0, 0, 0];\n    this.extensionSize = 0;\n    this.extensionCode = 0;\n};\n\n\n\n/*** Static Pseudo-constants ***/\n\n// datatype codes\nnifti.NIFTI1.TYPE_NONE            = 0;\nnifti.NIFTI1.TYPE_BINARY          = 1;\nnifti.NIFTI1.TYPE_UINT8           = 2;\nnifti.NIFTI1.TYPE_INT16           = 4;\nnifti.NIFTI1.TYPE_INT32           = 8;\nnifti.NIFTI1.TYPE_FLOAT32        = 16;\nnifti.NIFTI1.TYPE_COMPLEX64      = 32;\nnifti.NIFTI1.TYPE_FLOAT64        = 64;\nnifti.NIFTI1.TYPE_RGB24         = 128;\nnifti.NIFTI1.TYPE_INT8          = 256;\nnifti.NIFTI1.TYPE_UINT16        = 512;\nnifti.NIFTI1.TYPE_UINT32        = 768;\nnifti.NIFTI1.TYPE_INT64        = 1024;\nnifti.NIFTI1.TYPE_UINT64       = 1280;\nnifti.NIFTI1.TYPE_FLOAT128     = 1536;\nnifti.NIFTI1.TYPE_COMPLEX128   = 1792;\nnifti.NIFTI1.TYPE_COMPLEX256   = 2048;\n\n// transform codes\nnifti.NIFTI1.XFORM_UNKNOWN        = 0;\nnifti.NIFTI1.XFORM_SCANNER_ANAT   = 1;\nnifti.NIFTI1.XFORM_ALIGNED_ANAT   = 2;\nnifti.NIFTI1.XFORM_TALAIRACH      = 3;\nnifti.NIFTI1.XFORM_MNI_152        = 4;\n\n// unit codes\nnifti.NIFTI1.SPATIAL_UNITS_MASK = 0x07;\nnifti.NIFTI1.TEMPORAL_UNITS_MASK = 0x38;\nnifti.NIFTI1.UNITS_UNKNOWN        = 0;\nnifti.NIFTI1.UNITS_METER          = 1;\nnifti.NIFTI1.UNITS_MM             = 2;\nnifti.NIFTI1.UNITS_MICRON         = 3;\nnifti.NIFTI1.UNITS_SEC            = 8;\nnifti.NIFTI1.UNITS_MSEC          = 16;\nnifti.NIFTI1.UNITS_USEC          = 24;\nnifti.NIFTI1.UNITS_HZ            = 32;\nnifti.NIFTI1.UNITS_PPM           = 40;\nnifti.NIFTI1.UNITS_RADS          = 48;\n\n// nifti1 codes\nnifti.NIFTI1.MAGIC_COOKIE = 348;\nnifti.NIFTI1.STANDARD_HEADER_SIZE = 348;\nnifti.NIFTI1.MAGIC_NUMBER_LOCATION = 344;\nnifti.NIFTI1.MAGIC_NUMBER = [0x6E, 0x2B, 0x31];  // n+1 (.nii)\nnifti.NIFTI1.MAGIC_NUMBER2 = [0x6E, 0x69, 0x31];  // ni1 (.hdr/.img)\nnifti.NIFTI1.EXTENSION_HEADER_SIZE = 8;\n\n\n/*** Prototype Methods ***/\n\n/**\n * Reads the header data.\n * @param {ArrayBuffer} data\n */\nnifti.NIFTI1.prototype.readHeader = function (data) {\n    var rawData = new DataView(data),\n        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian),\n        ctr,\n        ctrOut,\n        ctrIn,\n        index;\n\n    if (magicCookieVal !== nifti.NIFTI1.MAGIC_COOKIE) {  // try as little endian\n        this.littleEndian = true;\n        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian);\n    }\n\n    if (magicCookieVal !== nifti.NIFTI1.MAGIC_COOKIE) {\n        throw new Error(\"This does not appear to be a NIFTI file!\");\n    }\n\n    this.dim_info = nifti.Utils.getByteAt(rawData, 39);\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n        index = 40 + (ctr * 2);\n        this.dims[ctr] = nifti.Utils.getShortAt(rawData, index, this.littleEndian);\n    }\n\n    this.intent_p1 = nifti.Utils.getFloatAt(rawData, 56, this.littleEndian);\n    this.intent_p2 = nifti.Utils.getFloatAt(rawData, 60, this.littleEndian);\n    this.intent_p3 = nifti.Utils.getFloatAt(rawData, 64, this.littleEndian);\n    this.intent_code = nifti.Utils.getShortAt(rawData, 68, this.littleEndian);\n\n    this.datatypeCode = nifti.Utils.getShortAt(rawData, 70, this.littleEndian);\n    this.numBitsPerVoxel = nifti.Utils.getShortAt(rawData, 72, this.littleEndian);\n\n    this.slice_start = nifti.Utils.getShortAt(rawData, 74, this.littleEndian);\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n        index = 76 + (ctr * 4);\n        this.pixDims[ctr] = nifti.Utils.getFloatAt(rawData, index, this.littleEndian);\n    }\n\n    this.vox_offset = nifti.Utils.getFloatAt(rawData, 108, this.littleEndian);\n\n    this.scl_slope = nifti.Utils.getFloatAt(rawData, 112, this.littleEndian);\n    this.scl_inter = nifti.Utils.getFloatAt(rawData, 116, this.littleEndian);\n\n    this.slice_end = nifti.Utils.getShortAt(rawData, 120, this.littleEndian);\n    this.slice_code = nifti.Utils.getByteAt(rawData, 122);\n\n    this.xyzt_units = nifti.Utils.getByteAt(rawData, 123);\n\n    this.cal_max = nifti.Utils.getFloatAt(rawData, 124, this.littleEndian);\n    this.cal_min = nifti.Utils.getFloatAt(rawData, 128, this.littleEndian);\n\n    this.slice_duration = nifti.Utils.getFloatAt(rawData, 132, this.littleEndian);\n    this.toffset = nifti.Utils.getFloatAt(rawData, 136, this.littleEndian);\n\n    this.description = nifti.Utils.getStringAt(rawData, 148, 228);\n    this.aux_file = nifti.Utils.getStringAt(rawData, 228, 252);\n\n    this.qform_code = nifti.Utils.getShortAt(rawData, 252, this.littleEndian);\n    this.sform_code = nifti.Utils.getShortAt(rawData, 254, this.littleEndian);\n\n    this.quatern_b = nifti.Utils.getFloatAt(rawData, 256, this.littleEndian);\n    this.quatern_c = nifti.Utils.getFloatAt(rawData, 260, this.littleEndian);\n    this.quatern_d = nifti.Utils.getFloatAt(rawData, 264, this.littleEndian);\n    this.qoffset_x = nifti.Utils.getFloatAt(rawData, 268, this.littleEndian);\n    this.qoffset_y = nifti.Utils.getFloatAt(rawData, 272, this.littleEndian);\n    this.qoffset_z = nifti.Utils.getFloatAt(rawData, 276, this.littleEndian);\n\n    for (ctrOut = 0; ctrOut < 3; ctrOut += 1) {\n        for (ctrIn = 0; ctrIn < 4; ctrIn += 1) {\n            index = 280 + (((ctrOut * 4) + ctrIn) * 4);\n            this.affine[ctrOut][ctrIn] = nifti.Utils.getFloatAt(rawData, index, this.littleEndian);\n        }\n    }\n\n    this.affine[3][0] = 0;\n    this.affine[3][1] = 0;\n    this.affine[3][2] = 0;\n    this.affine[3][3] = 1;\n\n    this.intent_name = nifti.Utils.getStringAt(rawData, 328, 344);\n    this.magic = nifti.Utils.getStringAt(rawData, 344, 348);\n\n    this.isHDR = (this.magic === nifti.NIFTI1.MAGIC_NUMBER2);\n\n    if (rawData.byteLength > nifti.NIFTI1.MAGIC_COOKIE) {\n        this.extensionFlag[0] = nifti.Utils.getByteAt(rawData, 348);\n        this.extensionFlag[1] = nifti.Utils.getByteAt(rawData, 348 + 1);\n        this.extensionFlag[2] = nifti.Utils.getByteAt(rawData, 348 + 2);\n        this.extensionFlag[3] = nifti.Utils.getByteAt(rawData, 348 + 3);\n\n        if (this.extensionFlag[0]) {\n            this.extensionSize = this.getExtensionSize(rawData);\n            this.extensionCode = this.getExtensionCode(rawData);\n        }\n    }\n};\n\n\n/**\n * Returns a formatted string of header fields.\n * @returns {string}\n */\nnifti.NIFTI1.prototype.toFormattedString = function () {\n    var fmt = nifti.Utils.formatNumber,\n        string = \"\";\n\n    string += (\"Dim Info = \" + this.dim_info + \"\\n\");\n\n    string += (\"Image Dimensions (1-8): \" +\n        this.dims[0] + \", \" +\n        this.dims[1] + \", \" +\n        this.dims[2] + \", \" +\n        this.dims[3] + \", \" +\n        this.dims[4] + \", \" +\n        this.dims[5] + \", \" +\n        this.dims[6] + \", \" +\n        this.dims[7] + \"\\n\");\n\n    string += (\"Intent Parameters (1-3): \" +\n        this.intent_p1 + \", \" +\n        this.intent_p2 + \", \" +\n        this.intent_p3) + \"\\n\";\n\n    string += (\"Intent Code = \" + this.intent_code + \"\\n\");\n    string += (\"Datatype = \" + this.datatypeCode +  \" (\" + this.getDatatypeCodeString(this.datatypeCode) + \")\\n\");\n    string += (\"Bits Per Voxel = \" + this.numBitsPerVoxel + \"\\n\");\n    string += (\"Slice Start = \" + this.slice_start + \"\\n\");\n    string += (\"Voxel Dimensions (1-8): \" +\n        fmt(this.pixDims[0]) + \", \" +\n        fmt(this.pixDims[1]) + \", \" +\n        fmt(this.pixDims[2]) + \", \" +\n        fmt(this.pixDims[3]) + \", \" +\n        fmt(this.pixDims[4]) + \", \" +\n        fmt(this.pixDims[5]) + \", \" +\n        fmt(this.pixDims[6]) + \", \" +\n        fmt(this.pixDims[7]) + \"\\n\");\n\n    string += (\"Image Offset = \" + this.vox_offset + \"\\n\");\n    string += (\"Data Scale:  Slope = \" + fmt(this.scl_slope) + \"  Intercept = \" + fmt(this.scl_inter) + \"\\n\");\n    string += (\"Slice End = \" + this.slice_end + \"\\n\");\n    string += (\"Slice Code = \" + this.slice_code + \"\\n\");\n    string += (\"Units Code = \" + this.xyzt_units + \" (\" + this.getUnitsCodeString(nifti.NIFTI1.SPATIAL_UNITS_MASK & this.xyzt_units) + \", \" + this.getUnitsCodeString(nifti.NIFTI1.TEMPORAL_UNITS_MASK & this.xyzt_units) + \")\\n\");\n    string += (\"Display Range:  Max = \" + fmt(this.cal_max) + \"  Min = \" + fmt(this.cal_min) + \"\\n\");\n    string += (\"Slice Duration = \" + this.slice_duration + \"\\n\");\n    string += (\"Time Axis Shift = \" + this.toffset + \"\\n\");\n    string += (\"Description: \\\"\" + this.description + \"\\\"\\n\");\n    string += (\"Auxiliary File: \\\"\" + this.aux_file + \"\\\"\\n\");\n    string += (\"Q-Form Code = \" + this.qform_code + \" (\" + this.getTransformCodeString(this.qform_code) + \")\\n\");\n    string += (\"S-Form Code = \" + this.sform_code + \" (\" + this.getTransformCodeString(this.sform_code) + \")\\n\");\n    string += (\"Quaternion Parameters:  \" +\n        \"b = \" + fmt(this.quatern_b) + \"  \" +\n        \"c = \" + fmt(this.quatern_c) + \"  \" +\n        \"d = \" + fmt(this.quatern_d) + \"\\n\");\n\n    string += (\"Quaternion Offsets:  \" +\n        \"x = \" + this.qoffset_x + \"  \" +\n        \"y = \" + this.qoffset_y + \"  \" +\n        \"z = \" + this.qoffset_z + \"\\n\");\n\n    string += (\"S-Form Parameters X: \" +\n        fmt(this.affine[0][0]) + \", \" +\n        fmt(this.affine[0][1]) + \", \" +\n        fmt(this.affine[0][2]) + \", \" +\n        fmt(this.affine[0][3]) + \"\\n\");\n\n    string += (\"S-Form Parameters Y: \" +\n        fmt(this.affine[1][0]) + \", \" +\n        fmt(this.affine[1][1]) + \", \" +\n        fmt(this.affine[1][2]) + \", \" +\n        fmt(this.affine[1][3]) + \"\\n\");\n\n    string += (\"S-Form Parameters Z: \" +\n        fmt(this.affine[2][0]) + \", \" +\n        fmt(this.affine[2][1]) + \", \" +\n        fmt(this.affine[2][2]) + \", \" +\n        fmt(this.affine[2][3]) + \"\\n\");\n\n    string += (\"Intent Name: \\\"\" + this.intent_name + \"\\\"\\n\");\n\n    if (this.extensionFlag[0]) {\n        string += (\"Extension: Size = \" + this.extensionSize + \"  Code = \" + this.extensionCode + \"\\n\");\n\n    }\n\n    return string;\n};\n\n\n/**\n * Returns a human-readable string of datatype.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI1.prototype.getDatatypeCodeString = function (code) {\n    if (code === nifti.NIFTI1.TYPE_UINT8) {\n        return \"1-Byte Unsigned Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_INT16) {\n        return \"2-Byte Signed Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_INT32) {\n        return \"4-Byte Signed Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_FLOAT32) {\n        return \"4-Byte Float\";\n    } else if (code === nifti.NIFTI1.TYPE_FLOAT64) {\n        return \"8-Byte Float\";\n    } else if (code === nifti.NIFTI1.TYPE_RGB24) {\n        return \"RGB\";\n    } else if (code === nifti.NIFTI1.TYPE_INT8) {\n        return \"1-Byte Signed Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_UINT16) {\n        return \"2-Byte Unsigned Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_UINT32) {\n        return \"4-Byte Unsigned Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_INT64) {\n        return \"8-Byte Signed Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_UINT64) {\n        return \"8-Byte Unsigned Integer\";\n    } else {\n        return \"Unknown\";\n    }\n};\n\n\n/**\n * Returns a human-readable string of transform type.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI1.prototype.getTransformCodeString = function (code) {\n    if (code === nifti.NIFTI1.XFORM_SCANNER_ANAT) {\n        return \"Scanner\";\n    } else if (code === nifti.NIFTI1.XFORM_ALIGNED_ANAT) {\n        return \"Aligned\";\n    } else if (code === nifti.NIFTI1.XFORM_TALAIRACH) {\n        return \"Talairach\";\n    } else if (code === nifti.NIFTI1.XFORM_MNI_152) {\n        return \"MNI\";\n    } else {\n        return \"Unknown\";\n    }\n};\n\n\n/**\n * Returns a human-readable string of spatial and temporal units.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI1.prototype.getUnitsCodeString = function (code) {\n    if (code === nifti.NIFTI1.UNITS_METER) {\n        return \"Meters\";\n    } else if (code === nifti.NIFTI1.UNITS_MM) {\n        return \"Millimeters\";\n    } else if (code === nifti.NIFTI1.UNITS_MICRON) {\n        return \"Microns\";\n    } else if (code === nifti.NIFTI1.UNITS_SEC) {\n        return \"Seconds\";\n    } else if (code === nifti.NIFTI1.UNITS_MSEC) {\n        return \"Milliseconds\";\n    } else if (code === nifti.NIFTI1.UNITS_USEC) {\n        return \"Microseconds\";\n    } else if (code === nifti.NIFTI1.UNITS_HZ) {\n        return \"Hz\";\n    } else if (code === nifti.NIFTI1.UNITS_PPM) {\n        return \"PPM\";\n    } else if (code === nifti.NIFTI1.UNITS_RADS) {\n        return \"Rads\";\n    } else {\n        return \"Unknown\";\n    }\n};\n\n\n/**\n * Returns the qform matrix.\n * @returns {Array.<Array.<number>>}\n */\nnifti.NIFTI1.prototype.getQformMat = function () {\n    return this.convertNiftiQFormToNiftiSForm(this.quatern_b, this.quatern_c, this.quatern_d, this.qoffset_x,\n        this.qoffset_y, this.qoffset_z, this.pixDims[1], this.pixDims[2], this.pixDims[3], this.pixDims[0]);\n};\n\n\n\n/**\n * Converts qform to an affine.  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n * @param {number} qb\n * @param {number} qc\n * @param {number} qd\n * @param {number} qx\n * @param {number} qy\n * @param {number} qz\n * @param {number} dx\n * @param {number} dy\n * @param {number} dz\n * @param {number} qfac\n * @returns {Array.<Array.<number>>}\n */\nnifti.NIFTI1.prototype.convertNiftiQFormToNiftiSForm = function (qb, qc, qd, qx, qy, qz, dx, dy, dz,\n                                                qfac) {\n    var R = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n        a,\n        b = qb,\n        c = qc,\n        d = qd,\n        xd,\n        yd,\n        zd;\n\n    // last row is always [ 0 0 0 1 ]\n    R[3][0] = R[3][1] = R[3][2] = 0.0;\n    R[3][3] = 1.0;\n\n    // compute a parameter from b,c,d\n    a = 1.0 - (b * b + c * c + d * d);\n    if (a < 0.0000001) {                   /* special case */\n\n        a = 1.0 / Math.sqrt(b * b + c * c + d * d);\n        b *= a;\n        c *= a;\n        d *= a;        /* normalize (b,c,d) vector */\n        a = 0.0;                        /* a = 0 ==> 180 degree rotation */\n    } else {\n\n        a = Math.sqrt(a);                     /* angle = 2*arccos(a) */\n    }\n\n    // load rotation matrix, including scaling factors for voxel sizes\n    xd = (dx > 0.0) ? dx : 1.0;       /* make sure are positive */\n    yd = (dy > 0.0) ? dy : 1.0;\n    zd = (dz > 0.0) ? dz : 1.0;\n\n    if (qfac < 0.0) {\n        zd = -zd;         /* left handedness? */\n    }\n\n    R[0][0] =       (a * a + b * b - c * c - d * d) * xd;\n    R[0][1] = 2.0 * (b * c - a * d) * yd;\n    R[0][2] = 2.0 * (b * d + a * c) * zd;\n    R[1][0] = 2.0 * (b * c + a * d) * xd;\n    R[1][1] =       (a * a + c * c - b * b - d * d) * yd;\n    R[1][2] = 2.0 * (c * d - a * b) * zd;\n    R[2][0] = 2.0 * (b * d - a * c) * xd;\n    R[2][1] = 2.0 * (c * d + a * b) * yd;\n    R[2][2] =       (a * a + d * d - c * c - b * b) * zd;\n\n    // load offsets\n    R[0][3] = qx;\n    R[1][3] = qy;\n    R[2][3] = qz;\n\n    return R;\n};\n\n\n\n/**\n * Converts sform to an orientation string (e.g., XYZ+--).  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n * @param {Array.<Array.<number>>} R\n * @returns {string}\n */\nnifti.NIFTI1.prototype.convertNiftiSFormToNEMA = function (R) {\n    var xi, xj, xk, yi, yj, yk, zi, zj, zk, val, detQ, detP, i, j, k, p, q, r, ibest, jbest, kbest, pbest, qbest, rbest,\n        M, vbest, Q, P, iChar, jChar, kChar, iSense, jSense, kSense;\n    k = 0;\n\n    Q = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n    P = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n\n    //if( icod == NULL || jcod == NULL || kcod == NULL ) return ; /* bad */\n\n    //*icod = *jcod = *kcod = 0 ; /* this.errorMessage returns, if sh*t happens */\n\n    /* load column vectors for each (i,j,k) direction from matrix */\n\n    /*-- i axis --*/ /*-- j axis --*/ /*-- k axis --*/\n\n    xi = R[0][0];\n    xj = R[0][1];\n    xk = R[0][2];\n\n    yi = R[1][0];\n    yj = R[1][1];\n    yk = R[1][2];\n\n    zi = R[2][0];\n    zj = R[2][1];\n    zk = R[2][2];\n\n    /* normalize column vectors to get unit vectors along each ijk-axis */\n\n    /* normalize i axis */\n    val = Math.sqrt(xi * xi + yi * yi + zi * zi);\n    if (val === 0.0) {  /* stupid input */\n        return null;\n    }\n\n    xi /= val;\n    yi /= val;\n    zi /= val;\n\n    /* normalize j axis */\n    val = Math.sqrt(xj * xj + yj * yj + zj * zj);\n    if (val === 0.0) {  /* stupid input */\n        return null;\n    }\n\n    xj /= val;\n    yj /= val;\n    zj /= val;\n\n    /* orthogonalize j axis to i axis, if needed */\n    val = xi * xj + yi * yj + zi * zj;    /* dot product between i and j */\n    if (Math.abs(val) > 1.E-4) {\n        xj -= val * xi;\n        yj -= val * yi;\n        zj -= val * zi;\n        val = Math.sqrt(xj * xj + yj * yj + zj * zj);  /* must renormalize */\n        if (val === 0.0) {              /* j was parallel to i? */\n            return null;\n        }\n        xj /= val;\n        yj /= val;\n        zj /= val;\n    }\n\n    /* normalize k axis; if it is zero, make it the cross product i x j */\n    val = Math.sqrt(xk * xk + yk * yk + zk * zk);\n    if (val === 0.0) {\n        xk = yi * zj - zi * yj;\n        yk = zi * xj - zj * xi;\n        zk = xi * yj - yi * xj;\n    } else {\n        xk /= val;\n        yk /= val;\n        zk /= val;\n    }\n\n    /* orthogonalize k to i */\n    val = xi * xk + yi * yk + zi * zk;    /* dot product between i and k */\n    if (Math.abs(val) > 1.E-4) {\n        xk -= val * xi;\n        yk -= val * yi;\n        zk -= val * zi;\n        val = Math.sqrt(xk * xk + yk * yk + zk * zk);\n        if (val === 0.0) {    /* bad */\n            return null;\n        }\n        xk /= val;\n        yk /= val;\n        zk /= val;\n    }\n\n    /* orthogonalize k to j */\n    val = xj * xk + yj * yk + zj * zk;    /* dot product between j and k */\n    if (Math.abs(val) > 1.e-4) {\n        xk -= val * xj;\n        yk -= val * yj;\n        zk -= val * zj;\n        val = Math.sqrt(xk * xk + yk * yk + zk * zk);\n        if (val === 0.0) {     /* bad */\n            return null;\n        }\n        xk /= val;\n        yk /= val;\n        zk /= val;\n    }\n\n    Q[0][0] = xi;\n    Q[0][1] = xj;\n    Q[0][2] = xk;\n    Q[1][0] = yi;\n    Q[1][1] = yj;\n    Q[1][2] = yk;\n    Q[2][0] = zi;\n    Q[2][1] = zj;\n    Q[2][2] = zk;\n\n    /* at this point, Q is the rotation matrix from the (i,j,k) to (x,y,z) axes */\n\n    detQ = this.nifti_mat33_determ(Q);\n    if (detQ === 0.0) { /* shouldn't happen unless user is a DUFIS */\n        return null;\n    }\n\n    /* Build and test all possible +1/-1 coordinate permutation matrices P;\n     then find the P such that the rotation matrix M=PQ is closest to the\n     identity, in the sense of M having the smallest total rotation angle. */\n\n    /* Despite the formidable looking 6 nested loops, there are\n     only 3*3*3*2*2*2 = 216 passes, which will run very quickly. */\n\n    vbest = -666.0;\n    ibest = pbest = qbest = rbest = 1;\n    jbest = 2;\n    kbest = 3;\n\n    for (i = 1; i <= 3; i += 1) {     /* i = column number to use for row #1 */\n        for (j = 1; j <= 3; j += 1) {    /* j = column number to use for row #2 */\n            if (i !== j) {\n                for (k = 1; k <= 3; k += 1) {  /* k = column number to use for row #3 */\n                    if (!(i === k || j === k)) {\n                        P[0][0] = P[0][1] = P[0][2] = P[1][0] = P[1][1] = P[1][2] = P[2][0] = P[2][1] = P[2][2] = 0.0;\n                        for (p = -1; p <= 1; p += 2) {    /* p,q,r are -1 or +1      */\n                            for (q = -1; q <= 1; q += 2) {   /* and go into rows #1,2,3 */\n                                for (r = -1; r <= 1; r += 2) {\n                                    P[0][i - 1] = p;\n                                    P[1][j - 1] = q;\n                                    P[2][k - 1] = r;\n                                    detP = this.nifti_mat33_determ(P);           /* sign of permutation */\n                                    if ((detP * detQ) > 0.0) {\n                                        M = this.nifti_mat33_mul(P, Q);\n\n                                        /* angle of M rotation = 2.0*acos(0.5*sqrt(1.0+trace(M)))       */\n                                        /* we want largest trace(M) == smallest angle == M nearest to I */\n\n                                        val = M[0][0] + M[1][1] + M[2][2]; /* trace */\n                                        if (val > vbest) {\n                                            vbest = val;\n                                            ibest = i;\n                                            jbest = j;\n                                            kbest = k;\n                                            pbest = p;\n                                            qbest = q;\n                                            rbest = r;\n                                        }\n                                    }  /* doesn't match sign of Q */\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /* At this point ibest is 1 or 2 or 3; pbest is -1 or +1; etc.\n\n     The matrix P that corresponds is the best permutation approximation\n     to Q-inverse; that is, P (approximately) takes (x,y,z) coordinates\n     to the (i,j,k) axes.\n\n     For example, the first row of P (which contains pbest in column ibest)\n     determines the way the i axis points relative to the anatomical\n     (x,y,z) axes.  If ibest is 2, then the i axis is along the y axis,\n     which is direction P2A (if pbest > 0) or A2P (if pbest < 0).\n\n     So, using ibest and pbest, we can assign the output code for\n     the i axis.  Mutatis mutandis for the j and k axes, of course. */\n\n    iChar = jChar = kChar = iSense = jSense = kSense = 0;\n\n    switch (ibest * pbest) {\n        case 1: /*i = NIFTI_L2R*/\n            iChar = 'X';\n            iSense = '+';\n            break;\n        case -1: /*i = NIFTI_R2L*/\n            iChar = 'X';\n            iSense = '-';\n            break;\n        case 2: /*i = NIFTI_P2A*/\n            iChar = 'Y';\n            iSense = '+';\n            break;\n        case -2: /*i = NIFTI_A2P*/\n            iChar = 'Y';\n            iSense = '-';\n            break;\n        case 3: /*i = NIFTI_I2S*/\n            iChar = 'Z';\n            iSense = '+';\n            break;\n        case -3: /*i = NIFTI_S2I*/\n            iChar = 'Z';\n            iSense = '-';\n            break;\n    }\n\n    switch (jbest * qbest) {\n        case 1: /*j = NIFTI_L2R*/\n            jChar = 'X';\n            jSense = '+';\n            break;\n        case -1: /*j = NIFTI_R2L*/\n            jChar = 'X';\n            jSense = '-';\n            break;\n        case 2: /*j = NIFTI_P2A*/\n            jChar = 'Y';\n            jSense = '+';\n            break;\n        case -2: /*j = NIFTI_A2P*/\n            jChar = 'Y';\n            jSense = '-';\n            break;\n        case 3: /*j = NIFTI_I2S*/\n            jChar = 'Z';\n            jSense = '+';\n            break;\n        case -3: /*j = NIFTI_S2I*/\n            jChar = 'Z';\n            jSense = '-';\n            break;\n    }\n\n    switch (kbest * rbest) {\n        case 1: /*k = NIFTI_L2R*/\n            kChar = 'X';\n            kSense = '+';\n            break;\n        case -1: /*k = NIFTI_R2L*/\n            kChar = 'X';\n            kSense = '-';\n            break;\n        case 2: /*k = NIFTI_P2A*/\n            kChar = 'Y';\n            kSense = '+';\n            break;\n        case -2: /*k = NIFTI_A2P*/\n            kChar = 'Y';\n            kSense = '-';\n            break;\n        case 3: /*k = NIFTI_I2S*/\n            kChar = 'Z';\n            kSense = '+';\n            break;\n        case -3: /*k = NIFTI_S2I*/\n            kChar = 'Z';\n            kSense = '-';\n            break;\n    }\n\n    return (iChar + jChar + kChar + iSense + jSense + kSense);\n};\n\n\n\nnifti.NIFTI1.prototype.nifti_mat33_mul = function (A, B) {\n    var C = [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n        i,\n        j;\n\n    for (i = 0; i < 3; i += 1) {\n        for (j = 0; j < 3; j += 1) {\n            C[i][j] =  A[i][0] * B[0][j]  + A[i][1] * B[1][j] + A[i][2] * B[2][j];\n        }\n    }\n\n    return C;\n};\n\n\n\nnifti.NIFTI1.prototype.nifti_mat33_determ = function (R) {\n    var r11, r12, r13, r21, r22, r23, r31, r32, r33;\n    /*  INPUT MATRIX:  */\n    r11 = R[0][0];\n    r12 = R[0][1];\n    r13 = R[0][2];\n    r21 = R[1][0];\n    r22 = R[1][1];\n    r23 = R[1][2];\n    r31 = R[2][0];\n    r32 = R[2][1];\n    r33 = R[2][2];\n\n    return (r11 * r22 * r33 - r11 * r32 * r23 - r21 * r12 * r33 + r21 * r32 * r13 + r31 * r12 * r23 - r31 * r22 * r13);\n};\n\n\n/**\n * Returns the byte index of the extension.\n * @returns {number}\n */\nnifti.NIFTI1.prototype.getExtensionLocation = function() {\n    return nifti.NIFTI1.MAGIC_COOKIE + 4;\n};\n\n\n/**\n * Returns the extension size.\n * @param {DataView} data\n * @returns {number}\n */\nnifti.NIFTI1.prototype.getExtensionSize = function(data) {\n    return nifti.Utils.getIntAt(data, this.getExtensionLocation(), this.littleEndian);\n};\n\n\n\n/**\n * Returns the extension code.\n * @param {DataView} data\n * @returns {number}\n */\nnifti.NIFTI1.prototype.getExtensionCode = function(data) {\n    return nifti.Utils.getIntAt(data, this.getExtensionLocation() + 4, this.littleEndian);\n};\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = nifti.NIFTI1;\n}\n","\n/*jslint browser: true, node: true */\n/*global */\n\n\"use strict\";\n\n/*** Imports ***/\n\nvar nifti = nifti || {};\nnifti.Utils = nifti.Utils || ((typeof require !== 'undefined') ? require('./utilities.js') : null);\nnifti.NIFTI1 = nifti.NIFTI1 || ((typeof require !== 'undefined') ? require('./nifti1.js') : null);\n\n\n/*** Constructor ***/\n\n/**\n * The NIFTI2 constructor.\n * @constructor\n * @property {boolean} littleEndian\n * @property {number} dim_info\n * @property {number[]} dims - image dimensions\n * @property {number} intent_p1\n * @property {number} intent_p2\n * @property {number} intent_p3\n * @property {number} intent_code\n * @property {number} datatypeCode\n * @property {number} numBitsPerVoxel\n * @property {number} slice_start\n * @property {number} slice_end\n * @property {number} slice_code\n * @property {number[]} pixDims - voxel dimensions\n * @property {number} vox_offset\n * @property {number} scl_slope\n * @property {number} scl_inter\n * @property {number} xyzt_units\n * @property {number} cal_max\n * @property {number} cal_min\n * @property {number} slice_duration\n * @property {number} toffset\n * @property {string} description\n * @property {string} aux_file\n * @property {string} intent_name\n * @property {number} qform_code\n * @property {number} sform_code\n * @property {number} quatern_b\n * @property {number} quatern_c\n * @property {number} quatern_d\n * @property {number} quatern_x\n * @property {number} quatern_y\n * @property {number} quatern_z\n * @property {Array.<Array.<number>>} affine\n * @property {string} magic\n * @property {number[]} extensionFlag\n * @type {Function}\n */\nnifti.NIFTI2 = nifti.NIFTI2 || function () {\n    this.littleEndian = false;\n    this.dim_info = 0;\n    this.dims = [];\n    this.intent_p1 = 0;\n    this.intent_p2 = 0;\n    this.intent_p3 = 0;\n    this.intent_code = 0;\n    this.datatypeCode = 0;\n    this.numBitsPerVoxel = 0;\n    this.slice_start = 0;\n    this.slice_end = 0;\n    this.slice_code = 0;\n    this.pixDims = [];\n    this.vox_offset = 0;\n    this.scl_slope = 1;\n    this.scl_inter = 0;\n    this.xyzt_units = 0;\n    this.cal_max = 0;\n    this.cal_min = 0;\n    this.slice_duration = 0;\n    this.toffset = 0;\n    this.description = \"\";\n    this.aux_file = \"\";\n    this.intent_name = \"\";\n    this.qform_code = 0;\n    this.sform_code = 0;\n    this.quatern_b = 0;\n    this.quatern_c = 0;\n    this.quatern_d = 0;\n    this.qoffset_x = 0;\n    this.qoffset_y = 0;\n    this.qoffset_z = 0;\n    this.affine = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n    this.magic = 0;\n    this.extensionFlag = [0, 0, 0, 0];\n};\n\n\n\n/*** Static Pseudo-constants ***/\n\nnifti.NIFTI2.MAGIC_COOKIE = 540;\nnifti.NIFTI2.MAGIC_NUMBER_LOCATION = 4;\nnifti.NIFTI2.MAGIC_NUMBER = [0x6E, 0x2B, 0x32, 0, 0x0D, 0x0A, 0x1A, 0x0A];  // n+2\\0\n\n\n\n/*** Prototype Methods ***/\n\n/**\n * Reads the header data.\n * @param {ArrayBuffer} data\n */\nnifti.NIFTI2.prototype.readHeader = function (data) {\n    var rawData = new DataView(data),\n        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian),\n        ctr,\n        ctrOut,\n        ctrIn,\n        index,\n        array;\n\n    if (magicCookieVal !== nifti.NIFTI2.MAGIC_COOKIE) {  // try as little endian\n        this.littleEndian = true;\n        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian);\n    }\n\n    if (magicCookieVal !== nifti.NIFTI2.MAGIC_COOKIE) {\n        throw new Error(\"This does not appear to be a NIFTI file!\");\n    }\n\n    this.datatypeCode = nifti.Utils.getShortAt(rawData, 12, this.littleEndian);\n    this.numBitsPerVoxel = nifti.Utils.getShortAt(rawData, 14, this.littleEndian);\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n        index = 16 + (ctr * 8);\n        this.dims[ctr] = nifti.Utils.getLongAt(rawData, index, this.littleEndian);\n    }\n\n    this.intent_p1 = nifti.Utils.getDoubleAt(rawData, 80, this.littleEndian);\n    this.intent_p2 = nifti.Utils.getDoubleAt(rawData, 88, this.littleEndian);\n    this.intent_p3 = nifti.Utils.getDoubleAt(rawData, 96, this.littleEndian);\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n        index = 104 + (ctr * 8);\n        this.pixDims[ctr] = nifti.Utils.getDoubleAt(rawData, index, this.littleEndian);\n    }\n\n    this.vox_offset = nifti.Utils.getLongAt(rawData, 168, this.littleEndian);\n\n    this.scl_slope = nifti.Utils.getDoubleAt(rawData, 176, this.littleEndian);\n    this.scl_inter = nifti.Utils.getDoubleAt(rawData, 184, this.littleEndian);\n\n    this.cal_max = nifti.Utils.getDoubleAt(rawData, 192, this.littleEndian);\n    this.cal_min = nifti.Utils.getDoubleAt(rawData, 200, this.littleEndian);\n\n    this.slice_duration = nifti.Utils.getDoubleAt(rawData, 208, this.littleEndian);\n\n    this.toffset = nifti.Utils.getDoubleAt(rawData, 216, this.littleEndian);\n\n    this.slice_start = nifti.Utils.getLongAt(rawData, 224, this.littleEndian);\n    this.slice_end = nifti.Utils.getLongAt(rawData, 232, this.littleEndian);\n\n    this.description = nifti.Utils.getStringAt(rawData, 240, 240 + 80);\n    this.aux_file = nifti.Utils.getStringAt(rawData, 320, 320 + 24);\n\n    this.qform_code = nifti.Utils.getIntAt(rawData, 344, this.littleEndian);\n    this.sform_code = nifti.Utils.getIntAt(rawData, 348, this.littleEndian);\n\n    this.quatern_b = nifti.Utils.getDoubleAt(rawData, 352, this.littleEndian);\n    this.quatern_c = nifti.Utils.getDoubleAt(rawData, 360, this.littleEndian);\n    this.quatern_d = nifti.Utils.getDoubleAt(rawData, 368, this.littleEndian);\n    this.qoffset_x = nifti.Utils.getDoubleAt(rawData, 376, this.littleEndian);\n    this.qoffset_y = nifti.Utils.getDoubleAt(rawData, 384, this.littleEndian);\n    this.qoffset_z = nifti.Utils.getDoubleAt(rawData, 392, this.littleEndian);\n\n    for (ctrOut = 0; ctrOut < 3; ctrOut += 1) {\n        for (ctrIn = 0; ctrIn < 4; ctrIn += 1) {\n            index = 400 + (((ctrOut * 4) + ctrIn) * 8);\n            this.affine[ctrOut][ctrIn] = nifti.Utils.getDoubleAt(rawData, index, this.littleEndian);\n        }\n    }\n\n    this.affine[3][0] = 0;\n    this.affine[3][1] = 0;\n    this.affine[3][2] = 0;\n    this.affine[3][3] = 1;\n\n    this.slice_code = nifti.Utils.getIntAt(rawData, 496, this.littleEndian);\n    this.xyzt_units = nifti.Utils.getIntAt(rawData, 500, this.littleEndian);\n    this.intent_code = nifti.Utils.getIntAt(rawData, 504, this.littleEndian);\n    this.intent_name = nifti.Utils.getStringAt(rawData, 508, 508 + 16);\n\n    this.dim_info = nifti.Utils.getByteAt(rawData, 524);\n\n    if (rawData.byteLength > nifti.NIFTI2.MAGIC_COOKIE) {\n        this.extensionFlag[0] = nifti.Utils.getByteAt(rawData, 540);\n        this.extensionFlag[1] = nifti.Utils.getByteAt(rawData, 540 + 1);\n        this.extensionFlag[2] = nifti.Utils.getByteAt(rawData, 540 + 2);\n        this.extensionFlag[3] = nifti.Utils.getByteAt(rawData, 540 + 3);\n\n        if (this.extensionFlag[0]) {\n            this.extensionSize = this.getExtensionSize(rawData);\n            this.extensionCode = this.getExtensionCode(rawData);\n        }\n    }\n};\n\n\n\n/**\n * Returns a formatted string of header fields.\n * @returns {string}\n */\nnifti.NIFTI2.prototype.toFormattedString = function () {\n    var fmt = nifti.Utils.formatNumber,\n        string = \"\";\n\n    string += (\"Datatype = \" +  + this.datatypeCode + \" (\" + this.getDatatypeCodeString(this.datatypeCode) + \")\\n\");\n    string += (\"Bits Per Voxel = \" + \" = \" + this.numBitsPerVoxel + \"\\n\");\n    string += (\"Image Dimensions\" + \" (1-8): \" +\n        this.dims[0] + \", \" +\n        this.dims[1] + \", \" +\n        this.dims[2] + \", \" +\n        this.dims[3] + \", \" +\n        this.dims[4] + \", \" +\n        this.dims[5] + \", \" +\n        this.dims[6] + \", \" +\n        this.dims[7] + \"\\n\");\n\n    string += (\"Intent Parameters (1-3): \" +\n        this.intent_p1 + \", \" +\n        this.intent_p2 + \", \" +\n        this.intent_p3) + \"\\n\";\n\n    string += (\"Voxel Dimensions (1-8): \" +\n        fmt(this.pixDims[0]) + \", \" +\n        fmt(this.pixDims[1]) + \", \" +\n        fmt(this.pixDims[2]) + \", \" +\n        fmt(this.pixDims[3]) + \", \" +\n        fmt(this.pixDims[4]) + \", \" +\n        fmt(this.pixDims[5]) + \", \" +\n        fmt(this.pixDims[6]) + \", \" +\n        fmt(this.pixDims[7]) + \"\\n\");\n\n    string += (\"Image Offset = \" + this.vox_offset + \"\\n\");\n    string += (\"Data Scale:  Slope = \" + fmt(this.scl_slope) + \"  Intercept = \" + fmt(this.scl_inter) + \"\\n\");\n    string += (\"Display Range:  Max = \" + fmt(this.cal_max) + \"  Min = \" + fmt(this.cal_min) + \"\\n\");\n    string += (\"Slice Duration = \" + this.slice_duration + \"\\n\");\n    string += (\"Time Axis Shift = \" + this.toffset + \"\\n\");\n    string += (\"Slice Start = \" + this.slice_start + \"\\n\");\n    string += (\"Slice End = \" + this.slice_end + \"\\n\");\n    string += (\"Description: \\\"\" + this.description + \"\\\"\\n\");\n    string += (\"Auxiliary File: \\\"\" + this.aux_file + \"\\\"\\n\");\n    string += (\"Q-Form Code = \" + this.qform_code + \" (\" + this.getTransformCodeString(this.qform_code) + \")\\n\");\n    string += (\"S-Form Code = \" + this.sform_code + \" (\" + this.getTransformCodeString(this.sform_code) + \")\\n\");\n    string += (\"Quaternion Parameters:  \" +\n    \"b = \" + fmt(this.quatern_b) + \"  \" +\n    \"c = \" + fmt(this.quatern_c) + \"  \" +\n    \"d = \" + fmt(this.quatern_d) + \"\\n\");\n\n    string += (\"Quaternion Offsets:  \" +\n    \"x = \" + this.qoffset_x + \"  \" +\n    \"y = \" + this.qoffset_y + \"  \" +\n    \"z = \" + this.qoffset_z + \"\\n\");\n\n    string += (\"S-Form Parameters X: \" +\n    fmt(this.affine[0][0]) + \", \" +\n    fmt(this.affine[0][1]) + \", \" +\n    fmt(this.affine[0][2]) + \", \" +\n    fmt(this.affine[0][3]) + \"\\n\");\n\n    string += (\"S-Form Parameters Y: \" +\n    fmt(this.affine[1][0]) + \", \" +\n    fmt(this.affine[1][1]) + \", \" +\n    fmt(this.affine[1][2]) + \", \" +\n    fmt(this.affine[1][3]) + \"\\n\");\n\n    string += (\"S-Form Parameters Z: \" +\n    fmt(this.affine[2][0]) + \", \" +\n    fmt(this.affine[2][1]) + \", \" +\n    fmt(this.affine[2][2]) + \", \" +\n    fmt(this.affine[2][3]) + \"\\n\");\n\n    string += (\"Slice Code = \" + this.slice_code + \"\\n\");\n    string += (\"Units Code = \" + this.xyzt_units + \" (\" + this.getUnitsCodeString(nifti.NIFTI1.SPATIAL_UNITS_MASK & this.xyzt_units) + \", \" + this.getUnitsCodeString(nifti.NIFTI1.TEMPORAL_UNITS_MASK & this.xyzt_units) + \")\\n\");\n    string += (\"Intent Code = \" + this.intent_code + \"\\n\");\n    string += (\"Intent Name: \\\"\" + this.intent_name + \"\\\"\\n\");\n\n    string += (\"Dim Info = \" + this.dim_info + \"\\n\");\n\n    return string;\n};\n\n\n\n/**\n * Returns the byte index of the extension.\n * @returns {number}\n */\nnifti.NIFTI2.prototype.getExtensionLocation = function() {\n    return nifti.NIFTI2.MAGIC_COOKIE + 4;\n};\n\n\n\n/**\n * Returns the extension size.\n * @param {DataView} data\n * @returns {number}\n */\nnifti.NIFTI2.prototype.getExtensionSize = nifti.NIFTI1.prototype.getExtensionSize;\n\n\n\n/**\n * Returns the extension code.\n * @param {DataView} data\n * @returns {number}\n */\nnifti.NIFTI2.prototype.getExtensionCode = nifti.NIFTI1.prototype.getExtensionCode;\n\n\n\n/**\n * Returns a human-readable string of datatype.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI2.prototype.getDatatypeCodeString = nifti.NIFTI1.prototype.getDatatypeCodeString;\n\n\n\n/**\n * Returns a human-readable string of transform type.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI2.prototype.getTransformCodeString = nifti.NIFTI1.prototype.getTransformCodeString;\n\n\n\n/**\n * Returns a human-readable string of spatial and temporal units.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI2.prototype.getUnitsCodeString = nifti.NIFTI1.prototype.getUnitsCodeString;\n\n\n\n/**\n * Returns the qform matrix.\n * @returns {Array.<Array.<number>>}\n */\nnifti.NIFTI2.prototype.getQformMat = nifti.NIFTI1.prototype.getQformMat;\n\n\n\n/**\n * Converts qform to an affine.  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n * @param {number} qb\n * @param {number} qc\n * @param {number} qd\n * @param {number} qx\n * @param {number} qy\n * @param {number} qz\n * @param {number} dx\n * @param {number} dy\n * @param {number} dz\n * @param {number} qfac\n * @returns {Array.<Array.<number>>}\n */\nnifti.NIFTI2.prototype.convertNiftiQFormToNiftiSForm = nifti.NIFTI1.prototype.convertNiftiQFormToNiftiSForm;\n\n\n\n/**\n * Converts sform to an orientation string (e.g., XYZ+--).  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n * @param {Array.<Array.<number>>} R\n * @returns {string}\n */\nnifti.NIFTI2.prototype.convertNiftiSFormToNEMA = nifti.NIFTI1.prototype.convertNiftiSFormToNEMA;\n\n\n\nnifti.NIFTI2.prototype.nifti_mat33_mul = nifti.NIFTI1.prototype.nifti_mat33_mul;\n\n\n\nnifti.NIFTI2.prototype.nifti_mat33_determ = nifti.NIFTI1.prototype.nifti_mat33_determ;\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = nifti.NIFTI2;\n}\n","\n/*jslint browser: true, node: true */\n/*global require, module */\n\n\"use strict\";\n\n/*** Imports ***/\n\nvar nifti = nifti || {};\nnifti.Utils = nifti.Utils || {};\n\n\n\n/*** Static Pseudo-constants ***/\n\nnifti.Utils.crcTable = null;\nnifti.Utils.GUNZIP_MAGIC_COOKIE1 = 31;\nnifti.Utils.GUNZIP_MAGIC_COOKIE2 = 139;\n\n\n\n/*** Static methods ***/\n\nnifti.Utils.getStringAt = function (data, start, end) {\n    var str = \"\", ctr, ch;\n\n    for (ctr = start; ctr < end; ctr += 1) {\n        ch = data.getUint8(ctr);\n\n        if (ch !== 0) {\n            str += String.fromCharCode(ch);\n        }\n    }\n\n    return str;\n};\n\n\n\nnifti.Utils.getByteAt = function (data, start) {\n    return data.getInt8(start);\n};\n\n\n\nnifti.Utils.getShortAt = function (data, start, littleEndian) {\n    return data.getInt16(start, littleEndian);\n};\n\n\n\nnifti.Utils.getIntAt = function (data, start, littleEndian) {\n    return data.getInt32(start, littleEndian);\n};\n\n\n\nnifti.Utils.getFloatAt = function (data, start, littleEndian) {\n    return data.getFloat32(start, littleEndian);\n};\n\n\n\nnifti.Utils.getDoubleAt = function (data, start, littleEndian) {\n    return data.getFloat64(start, littleEndian);\n};\n\n\n\nnifti.Utils.getLongAt = function (data, start, littleEndian) {\n    var ctr, array = [], value = 0;\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n        array[ctr] = nifti.Utils.getByteAt(data, start + ctr, littleEndian);\n    }\n\n    for (ctr = array.length - 1; ctr >= 0; ctr--) {\n        value = (value * 256) + array[ctr];\n    }\n\n    return value;\n};\n\n\n\nnifti.Utils.toArrayBuffer = function (buffer) {\n    var ab, view, i;\n\n    ab = new ArrayBuffer(buffer.length);\n    view = new Uint8Array(ab);\n    for (i = 0; i < buffer.length; i += 1) {\n        view[i] = buffer[i];\n    }\n    return ab;\n};\n\n\n\nnifti.Utils.isString = function (obj) {\n    return (typeof obj === \"string\" || obj instanceof String);\n};\n\n\nnifti.Utils.formatNumber = function (num, shortFormat) {\n    var val = 0;\n\n    if (nifti.Utils.isString(num)) {\n        val = Number(num);\n    } else {\n        val = num;\n    }\n\n    if (shortFormat) {\n        val = val.toPrecision(5);\n    } else {\n        val = val.toPrecision(7);\n    }\n\n    return parseFloat(val);\n};\n\n\n\n// http://stackoverflow.com/questions/18638900/javascript-crc32\nnifti.Utils.makeCRCTable = function(){\n    var c;\n    var crcTable = [];\n    for(var n =0; n < 256; n++){\n        c = n;\n        for(var k =0; k < 8; k++){\n            c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n        }\n        crcTable[n] = c;\n    }\n    return crcTable;\n};\n\n\n\nnifti.Utils.crc32 = function(dataView) {\n    var crcTable = nifti.Utils.crcTable || (nifti.Utils.crcTable = nifti.Utils.makeCRCTable());\n    var crc = 0 ^ (-1);\n\n    for (var i = 0; i < dataView.byteLength; i++ ) {\n        crc = (crc >>> 8) ^ crcTable[(crc ^ dataView.getUint8(i)) & 0xFF];\n    }\n\n    return (crc ^ (-1)) >>> 0;\n};\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = nifti.Utils;\n}\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nconst { Deflate, deflate, deflateRaw, gzip } = require('./lib/deflate');\n\nconst { Inflate, inflate, inflateRaw, ungzip } = require('./lib/inflate');\n\nconst constants = require('./lib/zlib/constants');\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = ungzip;\nmodule.exports.constants = constants;\n","'use strict';\n\n\nconst zlib_deflate = require('./zlib/deflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = zlib_deflate.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = zlib_deflate.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    this.result = utils.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  const deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n\nconst zlib_inflate = require('./zlib/inflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\nconst GZheader     = require('./zlib/gzheader');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  this.options = utils.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = zlib_inflate.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      zlib_inflate.inflateReset(strm);\n      status = zlib_inflate.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = zlib_inflate.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || msg[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = inflate;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n","// String encode/decode helpers\n'use strict';\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nmodule.exports.string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nmodule.exports.buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nmodule.exports.utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = require('./trees');\nconst adler32 = require('./adler32');\nconst crc32   = require('./crc32');\nconst msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_PARTIAL_FLUSH, Z_FULL_FLUSH, Z_FINISH, Z_BLOCK,\n  Z_OK, Z_STREAM_END, Z_STREAM_ERROR, Z_DATA_ERROR, Z_BUF_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY,\n  Z_UNKNOWN,\n  Z_DEFLATED\n} = require('./constants');\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = msg[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH) ||\n                        flush === Z_NO_FLUSH ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH && flush !== Z_FINISH &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH) && flush !== Z_NO_FLUSH &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR;\n  }\n  strm.state.gzhead = head;\n  return Z_OK;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n};\n\n\n/* ========================================================================= */\nconst deflate = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n};\n\n\nmodule.exports.deflateInit = deflateInit;\nmodule.exports.deflateInit2 = deflateInit2;\nmodule.exports.deflateReset = deflateReset;\nmodule.exports.deflateResetKeep = deflateResetKeep;\nmodule.exports.deflateSetHeader = deflateSetHeader;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateEnd = deflateEnd;\nmodule.exports.deflateSetDictionary = deflateSetDictionary;\nmodule.exports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 16209;       /* got a data error -- remain here until reset */\nconst TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32       = require('./adler32');\nconst crc32         = require('./crc32');\nconst inflate_fast  = require('./inffast');\nconst inflate_table = require('./inftrees');\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH, Z_BLOCK, Z_TREES,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR, Z_BUF_ERROR,\n  Z_DEFLATED\n} = require('./constants');\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n};\n\n\nmodule.exports.inflateReset = inflateReset;\nmodule.exports.inflateReset2 = inflateReset2;\nmodule.exports.inflateResetKeep = inflateResetKeep;\nmodule.exports.inflateInit = inflateInit;\nmodule.exports.inflateInit2 = inflateInit2;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateEnd = inflateEnd;\nmodule.exports.inflateGetHeader = inflateGetHeader;\nmodule.exports.inflateSetDictionary = inflateSetDictionary;\nmodule.exports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nmodule.exports = inflate_table;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH    = 3;\nconst MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES       = 30;\n/* number of distance codes */\n\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nconst MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nmodule.exports._tr_init  = _tr_init;\nmodule.exports._tr_stored_block = _tr_stored_block;\nmodule.exports._tr_flush_block  = _tr_flush_block;\nmodule.exports._tr_tally = _tr_tally;\nmodule.exports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","/* @license\nPapa Parse\nv5.4.1\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=f.IS_PAPA_WORKER||!1,a={},u=0,b={parse:function(e,t){var r=(t=t||{}).dynamicTyping||!1;J(r)&&(t.dynamicTypingFunction=r,r={});if(t.dynamicTyping=r,t.transform=!!J(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var i=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(r=f.URL||f.webkitURL||null,i=s.toString(),b.BLOB_URL||(b.BLOB_URL=r.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \",\"(\",i,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var r,i;return t.onmessage=_,t.id=u++,a[t.id]=t}();return i.userStep=t.step,i.userChunk=t.chunk,i.userComplete=t.complete,i.userError=t.error,t.step=J(t.step),t.chunk=J(t.chunk),t.complete=J(t.complete),t.error=J(t.error),delete t.worker,void i.postMessage({input:e,config:t,workerId:i.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?(e=function(e){if(65279===e.charCodeAt(0))return e.slice(1);return e}(e),n=t.download?new l(t):new p(t)):!0===e.readable&&J(e.read)&&J(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,r=!1,i=null,o=!1;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(r=t.skipEmptyLines);\"string\"==typeof t.newline&&(y=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");i=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s);(\"boolean\"==typeof t.escapeFormulae||t.escapeFormulae instanceof RegExp)&&(o=t.escapeFormulae instanceof RegExp?t.escapeFormulae:/^[=+\\-@\\t\\r].*$/)}();var u=new RegExp(Q(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return h(null,e,r);if(\"object\"==typeof e[0])return h(i||Object.keys(e[0]),e,r)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||i),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),h(e.fields||[],e.data||[],r);throw new Error(\"Unable to serialize unrecognized input\");function h(e,t,r){var i=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(i+=m),i+=v(e[a],a);0<t.length&&(i+=y)}for(var o=0;o<t.length;o++){var u=n?e.length:t[o].length,h=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(r&&!n&&(h=\"greedy\"===r?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===r&&n){for(var d=[],l=0;l<u;l++){var c=s?e[l]:l;d.push(t[o][c])}h=\"\"===d.join(\"\").trim()}if(!h){for(var p=0;p<u;p++){0<p&&!f&&(i+=m);var g=n&&s?e[p]:p;i+=v(t[o][g],p)}o<t.length-1&&(!r||0<u&&!f)&&(i+=y)}}return i}function v(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var r=!1;o&&\"string\"==typeof e&&o.test(e)&&(e=\"'\"+e,r=!0);var i=e.toString().replace(u,a);return(r=r||!0===n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var r=0;r<t.length;r++)if(-1<e.indexOf(t[r]))return!0;return!1}(i,b.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1))?s+i+s:i}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=E,b.ParserHandle=r,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var r=o.config||{},u=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)u.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},r)})}),e(),this;function e(){if(0!==u.length){var e,t,r,i,n=u[0];if(J(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,r=n.inputElem,i=s.reason,void(J(o.error)&&o.error({name:e},t,r,i));if(\"skip\"===s.action)return void h();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void h()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){J(a)&&a(e,n.file,n.inputElem),h()},b.parse(n.file,n.instanceConfig)}else J(o.complete)&&o.complete()}function h(){u.splice(0,1),e()}}}function h(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=w(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new r(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&J(this._config.beforeFirstChunk)){var r=this._config.beforeFirstChunk(e);void 0!==r&&(e=r)}this.isFirstChunk=!1,this._halted=!1;var i=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(i,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=i.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(J(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!J(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){J(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var i;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),h.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(i=new XMLHttpRequest,this._config.withCredentials&&(i.withCredentials=this._config.withCredentials),n||(i.onload=v(this._chunkLoaded,this),i.onerror=v(this._chunkError,this)),i.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)i.setRequestHeader(t,e[t])}if(this._config.chunkSize){var r=this._start+this._config.chunkSize-1;i.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+r)}try{i.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===i.status&&this._chunkError()}},this._chunkLoaded=function(){4===i.readyState&&(i.status<200||400<=i.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:i.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(i),this.parseChunk(i.responseText)))},this._chunkError=function(e){var t=i.statusText||e;this._sendError(new Error(t))}}function c(e){var i,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),h.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((i=new FileReader).onload=v(this._chunkLoaded,this),i.onerror=v(this._chunkError,this)):i=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var r=i.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:r}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(i.error)}}function p(e){var r;h.call(this,e=e||{}),this.stream=function(e){return r=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=r.substring(0,t),r=r.substring(t)):(e=r,r=\"\"),this._finished=!r,this.parseChunk(e)}}}function g(e){h.call(this,e=e||{});var t=[],r=!0,i=!1;this.pause=function(){h.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){h.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){i&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):r=!0},this._streamData=v(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),r&&(r=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=v(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=v(function(){this._streamCleanUp(),i=!0,this._streamData(\"\")},this),this._streamCleanUp=v(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function r(m){var a,o,u,i=Math.pow(2,53),n=-i,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,h=/^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/,t=this,r=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(J(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;r+=e.data.length,m.preview&&r>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){return c&&u&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),u=!1),m.skipEmptyLines&&(c.data=c.data.filter(function(e){return!y(e)})),_()&&function(){if(!c)return;function e(e,t){J(m.transformHeader)&&(e=m.transformHeader(e,t)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var r,i=m.header?{}:[];for(r=0;r<e.length;r++){var n=r,s=e[r];m.header&&(n=r>=l.length?\"__parsed_extra\":l[r]),m.transform&&(s=m.transform(s,n)),s=v(n,s),\"__parsed_extra\"===n?(i[n]=i[n]||[],i[n].push(s)):i[n]=s}return m.header&&(r>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+r,f+t):r<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+r,f+t)),i}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function v(e,t){return r=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[r]&&(m.dynamicTyping[r]=m.dynamicTypingFunction(r)),!0===(m.dynamicTyping[r]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<i)return!0}return!1}(t)?parseFloat(t):h.test(t)?new Date(t):\"\"===t?null:t):t;var r}function k(e,t,r,i){var n={type:e,code:t,message:r};void 0!==i&&(n.row=i),c.errors.push(n)}this.parse=function(e,t,r){var i=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var r=new RegExp(Q(t)+\"([^]*?)\"+Q(t),\"gm\"),i=(e=e.replace(r,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<i[0].length;if(1===i.length||s)return\"\\n\";for(var a=0,o=0;o<i.length;o++)\"\\n\"===i[o][0]&&a++;return a>=i.length/2?\"\\r\\n\":\"\\r\"}(e,i)),u=!1,m.delimiter)J(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,r,i,n){var s,a,o,u;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var h=0;h<n.length;h++){var f=n[h],d=0,l=0,c=0;o=void 0;for(var p=new E({comments:i,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(r&&y(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===u||u<l)&&1.99<l&&(a=d,s=f,u=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(u=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=w(m);return m.preview&&m.header&&s.preview++,a=e,o=new E(s),c=o.parse(a,t,r),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=J(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,J(m.complete)&&m.complete(c),a=\"\"}}function Q(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(j){var z,M=(j=j||{}).delimiter,P=j.newline,U=j.comments,q=j.step,N=j.preview,B=j.fastMode,K=z=void 0===j.quoteChar||null===j.quoteChar?'\"':j.quoteChar;if(void 0!==j.escapeChar&&(K=j.escapeChar),(\"string\"!=typeof M||-1<b.BAD_DELIMITERS.indexOf(M))&&(M=\",\"),U===M)throw new Error(\"Comment character same as delimiter\");!0===U?U=\"#\":(\"string\"!=typeof U||-1<b.BAD_DELIMITERS.indexOf(U))&&(U=!1),\"\\n\"!==P&&\"\\r\"!==P&&\"\\r\\n\"!==P&&(P=\"\\n\");var W=0,H=!1;this.parse=function(i,t,r){if(\"string\"!=typeof i)throw new Error(\"Input must be a string\");var n=i.length,e=M.length,s=P.length,a=U.length,o=J(q),u=[],h=[],f=[],d=W=0;if(!i)return L();if(j.header&&!t){var l=i.split(P)[0].split(M),c=[],p={},g=!1;for(var _ in l){var m=l[_];J(j.transformHeader)&&(m=j.transformHeader(m,_));var y=m,v=p[m]||0;for(0<v&&(g=!0,y=m+\"_\"+v),p[m]=v+1;c.includes(y);)y=y+\"_\"+v;c.push(y)}if(g){var k=i.split(P);k[0]=c.join(M),i=k.join(P)}}if(B||!1!==B&&-1===i.indexOf(z)){for(var b=i.split(P),E=0;E<b.length;E++){if(f=b[E],W+=f.length,E!==b.length-1)W+=P.length;else if(r)return L();if(!U||f.substring(0,a)!==U){if(o){if(u=[],I(f.split(M)),F(),H)return L()}else I(f.split(M));if(N&&N<=E)return u=u.slice(0,N),L(!0)}}return L()}for(var w=i.indexOf(M,W),R=i.indexOf(P,W),C=new RegExp(Q(K)+Q(z),\"g\"),S=i.indexOf(z,W);;)if(i[W]!==z)if(U&&0===f.length&&i.substring(W,W+a)===U){if(-1===R)return L();W=R+s,R=i.indexOf(P,W),w=i.indexOf(M,W)}else if(-1!==w&&(w<R||-1===R))f.push(i.substring(W,w)),W=w+e,w=i.indexOf(M,W);else{if(-1===R)break;if(f.push(i.substring(W,R)),D(R+s),o&&(F(),H))return L();if(N&&u.length>=N)return L(!0)}else for(S=W,W++;;){if(-1===(S=i.indexOf(z,S+1)))return r||h.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:u.length,index:W}),T();if(S===n-1)return T(i.substring(W,S).replace(C,z));if(z!==K||i[S+1]!==K){if(z===K||0===S||i[S-1]!==K){-1!==w&&w<S+1&&(w=i.indexOf(M,S+1)),-1!==R&&R<S+1&&(R=i.indexOf(P,S+1));var O=A(-1===R?w:Math.min(w,R));if(i.substr(S+1+O,e)===M){f.push(i.substring(W,S).replace(C,z)),i[W=S+1+O+e]!==z&&(S=i.indexOf(z,W)),w=i.indexOf(M,W),R=i.indexOf(P,W);break}var x=A(R);if(i.substring(S+1+x,S+1+x+s)===P){if(f.push(i.substring(W,S).replace(C,z)),D(S+1+x+s),w=i.indexOf(M,W),S=i.indexOf(z,W),o&&(F(),H))return L();if(N&&u.length>=N)return L(!0);break}h.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:u.length,index:W}),S++}}else S++}return T();function I(e){u.push(e),d=W}function A(e){var t=0;if(-1!==e){var r=i.substring(S+1,e);r&&\"\"===r.trim()&&(t=r.length)}return t}function T(e){return r||(void 0===e&&(e=i.substring(W)),f.push(e),W=n,I(f),o&&F()),L()}function D(e){W=e,I(f),f=[],R=i.indexOf(P,W)}function L(e){return{data:u,errors:h,meta:{delimiter:M,linebreak:P,aborted:H,truncated:!!e,cursor:d+(t||0)}}}function F(){q(L()),u=[],h=[]}},this.abort=function(){H=!0},this.getCharIndex=function(){return W}}function _(e){var t=e.data,r=a[t.workerId],i=!1;if(t.error)r.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){i=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:y,resume:y};if(J(r.userStep)){for(var s=0;s<t.results.data.length&&(r.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!i);s++);delete t.results}else J(r.userChunk)&&(r.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!i&&m(t.workerId,t.results)}function m(e,t){var r=a[e];J(r.userComplete)&&r.userComplete(t),r.terminate(),delete a[e]}function y(){throw new Error(\"Not implemented.\")}function w(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var r in e)t[r]=w(e[r]);return t}function v(e,t){return function(){e.apply(t,arguments)}}function J(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var r=b.parse(t.input,t.config);r&&f.postMessage({workerId:b.WORKER_ID,results:r,finished:!0})}}),(l.prototype=Object.create(h.prototype)).constructor=l,(c.prototype=Object.create(h.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(h.prototype)).constructor=g,b});","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n  if (!Stream) Stream = function () {}\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            if (parser.opt.unparsedEntities) {\n              var parsedEntity = parseEntity(parser)\n              parser.entity = ''\n              parser.state = returnState\n              parser.write(parsedEntity)\n            } else {\n              parser[buffer] += parseEntity(parser)\n              parser.entity = ''\n              parser.state = returnState\n            }\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default: /* istanbul ignore next */ {\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n        }\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","\"use strict\";\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar node_worker_1 = require(\"./node-worker.cjs\");\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexports.FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos >> 3] = lst;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return node_worker_1[\"default\"](ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if (d[1] & 32)\n        err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexports.Deflate = Deflate;\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexports.AsyncDeflate = AsyncDeflate;\nfunction deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\nexports.deflate = deflate;\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nfunction deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\nexports.deflateSync = deflateSync;\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexports.Inflate = Inflate;\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexports.AsyncInflate = AsyncInflate;\nfunction inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\nexports.inflate = inflate;\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nfunction inflateSync(data, out) {\n    return inflt(data, out);\n}\nexports.inflateSync = inflateSync;\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexports.Gzip = Gzip;\nexports.Compress = Gzip;\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexports.AsyncGzip = AsyncGzip;\nexports.AsyncCompress = AsyncGzip;\nfunction gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\nexports.gzip = gzip;\nexports.compress = gzip;\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nfunction gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\nexports.gzipSync = gzipSync;\nexports.compressSync = gzipSync;\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                err(6, 'invalid gzip data');\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexports.Gunzip = Gunzip;\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexports.AsyncGunzip = AsyncGunzip;\nfunction gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\nexports.gunzip = gunzip;\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nfunction gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\nexports.gunzipSync = gunzipSync;\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexports.Zlib = Zlib;\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexports.AsyncZlib = AsyncZlib;\nfunction zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\nexports.zlib = zlib;\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nfunction zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\nexports.zlibSync = zlibSync;\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexports.Unzlib = Unzlib;\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexports.AsyncUnzlib = AsyncUnzlib;\nfunction unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\nexports.unzlib = unzlib;\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nfunction unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\nexports.unzlibSync = unzlibSync;\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexports.Decompress = Decompress;\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexports.AsyncDecompress = AsyncDecompress;\nfunction decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\nexports.decompress = decompress;\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nfunction decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\nexports.decompressSync = decompressSync;\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexports.DecodeUTF8 = DecodeUTF8;\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexports.EncodeUTF8 = EncodeUTF8;\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nfunction strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\nexports.strToU8 = strToU8;\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nfunction strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            err(8);\n        return out;\n    }\n}\nexports.strFromU8 = strFromU8;\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexports.ZipPassThrough = ZipPassThrough;\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexports.ZipDeflate = ZipDeflate;\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexports.AsyncZipDeflate = AsyncZipDeflate;\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexports.Zip = Zip;\nfunction zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\nexports.zip = zip;\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nfunction zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\nexports.zipSync = zipSync;\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexports.UnzipPassThrough = UnzipPassThrough;\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexports.UnzipInflate = UnzipInflate;\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexports.AsyncUnzipInflate = AsyncUnzipInflate;\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexports.Unzip = Unzip;\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nfunction unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, new u8(su)));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\nexports.unzip = unzip;\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nfunction unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\nexports.unzipSync = unzipSync;\n","\"use strict\";\nvar ch2 = {};\nexports[\"default\"] = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '160';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0\n\t\t}, options );\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps;\n\t\tthis.texture.internalFormat = options.internalFormat;\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$1 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$1 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false, // set to use shader texture LOD\n\t\t\tclipCullDistance: false // set to use vertex shader clipping\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // deprecated\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( range.start, range.start + range.count ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// deprecated\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\treturn color;\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance && extensions.has( 'WEBGL_clip_cull_distance' ),\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true && glInternalFormat !== RGB_ETC1_Format );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new srcAttribute.constructor( dstArray, itemSize, normalized );\n\t\t\t\tdstAttribute.setUsage( srcAttribute.usage );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry atributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.isWebGPURenderer ? WebGPUCoordinateSystem : WebGLCoordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","import { Cache } from 'three';\n\n// FIXME: remove this class\nclass StorageCache {\n  constructor(){\n    this._d = new Map();\n  }\n\n  check_item( path ){\n    return( this._d.has( path ) || this._d.get( path ) !== undefined );\n  }\n\n  get_item( path , ifnotfound = '' ){\n    const re = this._d.get( path );\n    if( re !== undefined ){\n      return( re );\n    }else{\n      return( ifnotfound );\n    }\n  }\n\n  set_item( path, obj ){\n    this._d.set( path , obj );\n  }\n\n  get_hash( path ){\n    var hash = 0;\n    var s = this.get_item( path );\n    var i, chr;\n    if (s.length === 0) return hash;\n    for (i = 0; i < s.length; i++) {\n      chr   = s.charCodeAt(i);\n      hash  = ((hash << 5) - hash) + chr;\n      hash |= 0;\n    }\n    return hash;\n  }\n\n  clear_items( paths ){\n    if( paths === undefined ){\n      // Remove all\n      this._d.clear();\n    }else{\n      paths.forEach((p) => {\n        this._d.delete( p );\n      });\n    }\n  }\n\n}\n\nCache.maxFiles = 20;\nCache.keys = [];\nCache.add = function ( key, file ) {\n\n\tif ( this.enabled === false ) return;\n\tif( typeof key !== \"string\" ) return;\n\n\tconst item = this.files[ key ];\n\tif( item ) {\n    item.file = file;\n  } else {\n\t\tthis.files[ key ] = {\n\t\t  hit: 0,\n\t\t  file: file\n\t\t};\n  }\n\tthis.purge( key );\n};\nCache.get = function ( key ) {\n\n\tif ( this.enabled === false ) return;\n\tif( typeof key !== \"string\" ) return;\n\n  const item = this.files[ key ];\n  if( item ) {\n    item.hit++;\n    return item.file;\n  }\n\treturn;\n\n};\nCache.remove = function ( key ) {\n\n  if( typeof key !== \"string\" ) return;\n\n  const item = this.files[ key ];\n\n  if( item ) {\n    delete item.files;\n  }\n\n};\nCache.purge = function( excludeKey ) {\n  let n = this.maxFiles >= 1 ? this.maxFiles : 0;\n\n  const keys = [];\n  for(let k in this.files) {\n    if( k !== excludeKey ) {\n\t    const item = this.files[ k ];\n\t    if( item.file ) {\n  \t    keys.push({\n  \t      hit: item.hit,\n  \t      key: k,\n  \t    });\n\t    }\n    }\n  }\n  if( excludeKey ) {\n    n--;\n  }\n\n  if( keys.length <= n ) {\n    return;\n  }\n\n  keys.sort((a, b) => {\n    return b.hit - a.hit;\n  });\n\n  n = n - keys.length;\n\n  for(let i = 0; i < n; i++) {\n    const item2 = this.files[ keys[ i ].key ];\n    delete item2.file;\n  }\n\n};\n\n/*\nconst Cache = {\n\n\tenabled: false,\n\n\tmaxFiles: 20,\n\n\tfiles: {},\n\n  keys: [],\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\tconst item = this.files[ key ];\n\t\tif( item ) {\n      item.file = file;\n    } else {\n  \t\tthis.files[ key ] = {\n  \t\t  hit: 0,\n  \t\t  file: file\n  \t\t};\n    }\n\t\tthis.purge( key );\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n    const item = this.files[ key ];\n    if( item ) {\n      item.hit++;\n      return item.file;\n    }\n\t\treturn;\n\n\t},\n\n\tremove: function ( key ) {\n\n    if(!key) { return; }\n\n    const item = this.files[ key ];\n\n    if( item ) {\n      delete item.files;\n    }\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t},\n\n\tpurge: function( excludeKey ) {\n\t  let n = this.maxFiles >= 1 ? this.maxFiles : 0;\n\n\t  const keys = [];\n\t  for(let k in this.files) {\n\t    if( k !== excludeKey ) {\n  \t    const item = this.files[ k ];\n  \t    if( item.file ) {\n    \t    keys.push({\n    \t      hit: item.hit,\n    \t      key: key,\n    \t    });\n  \t    }\n\t    }\n\t  }\n\t  if( excludeKey ) {\n\t    n--;\n\t  }\n\n\t  if( keys.length <= n ) {\n\t    return;\n\t  }\n\n\t  keys.sort((a, b) => {\n\t    return b.hit - a.hit;\n\t  });\n\n\t  n = n - keys.length;\n\n\t  for(let i = 0; i < n; i++) {\n\t    const item2 = this.files[ keys[ i ].key ];\n      delete item2.file;\n\t  }\n\n\t}\n\n};\n\n*/\nexport { StorageCache, Cache };\n","import { EventDispatcher } from 'three';\nconst workerLoaders = {};\nlet useWorkerLoaders = true;\n\nfunction asyncLoaderAvailable( name, workerScript ) {\n  if( typeof workerScript !== \"string\") { return false; }\n  if( !useWorkerLoaders ) { return false; }\n  if( typeof name !== \"string\") { return false; }\n  if(!window) { return false; }\n  if(!window.Worker) { return false; }\n  if(!workerLoaders[ name ]) { return false; }\n  return [\"workerLoaders\", name];\n}\n\n\nclass WorkerPool {\n  constructor( workerScript, logger, softSize = 0, maxSize = 8 ) {\n    this.workerScript = workerScript;\n    this.softSize = Math.ceil( softSize );\n    if( this.softSize <= 0 ) { this.softSize = 0; }\n    this.maxSize = Math.ceil( maxSize );\n    if( this.maxSize <= this.softSize ) { this.maxSize = this.softSize; }\n    this._pool = new Map();\n    this._dispatcher = new EventDispatcher();\n    if( logger ) {\n      this.logger = logger;\n    } else {\n      this.logger = console.debug;\n    }\n  }\n\n  _spawnWorker() {\n    let uuid = '';\n    const item = {\n      idle: false,\n      timeOut : 15000,\n      onError : undefined,\n      onProgress: undefined,\n      onResult : undefined,\n      startWorker : undefined,\n      terminate : undefined,\n      elapsed   : undefined,\n    };\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    while( uuid === \"\" || this._pool.has(uuid) ) {\n      let counter = 0;\n      while (counter < 8) {\n        uuid += characters.charAt(Math.floor(Math.random() * charactersLength));\n        counter += 1;\n        if( counter == 4 ) {\n          uuid += \"-\";\n        }\n      }\n    }\n    this._pool.set(uuid, item);\n\n    let timeStarted = 0;\n\n    const setIdle = (idle) => {\n      if( idle ) {\n        if( item.idle ) { return; }\n        const poolSize = this._pool.size;\n        if( poolSize > this.softSize ) {\n          this.logger(`Pruning 1 worker (UUID: ${ uuid }, still running: ${ poolSize - 1 })`);\n          item.terminate( true );\n        } else {\n          this.logger(`Worker ${ uuid } -> idle`);\n          item.idle = true;\n          item.timeOut = 15000;\n        }\n        this._dispatcher.dispatchEvent({\n          type : \"WorkerPool.idle\",\n          uuid: uuid,\n        });\n      } else {\n        if( !item.idle ) { return; }\n        this.logger(`Worker ${ uuid } -> busy`);\n        timeStarted = new Date().getTime();\n        item.idle = false;\n      }\n    }\n\n    const worker = new window.Worker( this.workerScript );\n    const errorHandler = (e) => {\n      if( item.idle ) { return; }\n      const f = item.onError;\n      item.onError = undefined;\n      item.onResult = undefined;\n\n      setIdle(true);\n      if( typeof f === \"function\" ) { f(e); }\n    };\n    const resultHandler = (data) => {\n      if( item.idle ) { return; }\n      const f = item.onResult;\n      item.onError = undefined;\n      item.onResult = undefined;\n\n      if( typeof f === \"function\" ) {\n        try {\n          f(data);\n        } catch (e) {\n          console.error( e );\n        }\n      }\n      setIdle(true);\n    };\n    const progressHandler = (progress) => {\n      if( item.idle ) { return; }\n      const f = item.onProgress;\n      if( typeof f === \"function\" ) {\n        try {\n          f(progress);\n        } catch (e) {}\n      }\n    }\n\n    worker.onerror = errorHandler;\n    worker.onmessageerror = errorHandler;\n    worker.onmessage = (e) => {\n      if( item.idle ) { return; }\n      if( e.data && typeof e.data === \"object\" && typeof e.data.status === \"string\") {\n        switch ( e.data.status ) {\n          case 'scheduled':\n            if( e.data.object !== undefined ) {\n              resultHandler( e.data.object );\n              return;\n            }\n            break;\n          case 'progress':\n            if( e.data.object !== undefined ) {\n              progressHandler( e.data.object );\n              return;\n            }\n            break;\n          case 'done':\n            resultHandler( e.data.object );\n            return;\n            break;\n          case 'error':\n            errorHandler( e.data.object );\n            break;\n        };\n      } else {\n        errorHandler( new TypeError(\"Worker does not return with proper message event.\") );\n      }\n    };\n\n    item.startWorker = ({ methodNames, args } = {}) => {\n      if(!item.idle) { throw new Error(\"Worker is not idle\"); }\n      setIdle( false );\n      worker.postMessage({\n        methodNames: methodNames,\n        args: args,\n        token: uuid\n      });\n      let timeOut = item.timeOut;\n      /*\n      if( isFinite( timeOut ) ) {\n        if( timeOut < 0 ) { timeOut = 0; }\n        setTimeout(() => {\n          if(!item.idle) {\n            try {\n              errorHandler(new Error(\"Worker timeout.\"));\n            } catch (e) {}\n            this._dispatcher.dispatchEvent({\n              type : \"WorkerPool.timeout\",\n              uuid: uuid,\n            });\n          }\n        }, timeOut);\n      }\n      */\n    };\n    item.terminate = ( force = false ) => {\n      if( !force && !item.idle ) {\n        try {\n          errorHandler(new Error(\"Worker has been terminated.\"));\n        } catch (e) {}\n      }\n      item.idle = false;\n      item.onError = undefined;\n      item.onResult = undefined;\n      worker.terminate();\n      this._pool.delete( uuid );\n\n      // in case callbacks are called\n      item.idle = true;\n      item.timeOut = 15000;\n    };\n    item.elapsed = () => {\n      return ( new Date().getTime() - timeStarted );\n    };\n    // setIdle( true ); cannot call this, might terminate\n    item.idle = true;\n    return uuid;\n  }\n\n  _spawn() {\n    if( !useWorkerLoaders ) { return; }\n    const currentSize = this._pool.size;\n    if( currentSize >= this.maxSize ) { return; }\n    if( currentSize < this.softSize ) {\n      this.logger(`Spawning 1 parallel workers... Current workers: ${ currentSize }+1`);\n      this._spawnWorker();\n      return;\n    }\n\n    // check if any idle or elapsed 1s\n    let anyIdle = false;\n    let maxElapsed = 0;\n    this._pool.forEach(( item, uuid ) => {\n      if( item.idle ) {\n        anyIdle = true;\n      }\n      const e = item.elapsed();\n      if( maxElapsed < e ) {\n        maxElapsed = e;\n      }\n    });\n\n    if( anyIdle ) { return; }\n\n    this.logger(`Spawning 1 parallel workers... Current workers: ${ currentSize }+1`);\n    this._spawnWorker();\n  }\n\n  _startWorker( uuid, methodNames, args, { onResult, onError, onProgress, timeOut } = {} ) {\n    this.logger(`Starting worker ${uuid} -> threeBrain.${ methodNames.join(\".\") }`);\n    const item = this._pool.get( uuid );\n    item.onError = onError;\n    item.onResult = onResult;\n    item.onProgress = onProgress;\n    if( typeof timeOut === \"number\" ) {\n      item.timeOut = timeOut;\n    }\n    item.startWorker({ methodNames : methodNames, args : args });\n  }\n\n  startWorker({ methodNames, args, onProgress, timeOut = 15000 } = {}) {\n\n    return new Promise((resolve, reject) => {\n\n      let running = false;\n      const handler = () => {\n        if( running ) { return; }\n        running = true;\n        try {\n          if( this._dispatcher.hasEventListener(\"WorkerPool.idle\", handler) ) {\n            this._dispatcher.removeEventListener(\"WorkerPool.idle\", handler);\n          }\n          if( this._dispatcher.hasEventListener(\"WorkerPool.timeout\", handler) ) {\n            this._dispatcher.removeEventListener(\"WorkerPool.timeout\", handler);\n          }\n\n          if( !useWorkerLoaders ) {\n            reject(\"Async workers are turned off.\");\n            return;\n          }\n          this._spawn();\n          const uuids = [...this._pool.keys()];\n          for(let i = 0; i < uuids.length; i++) {\n            const uuid = uuids[ i ];\n            const item = this._pool.get( uuid );\n            if( item.idle ) {\n              this._startWorker( uuid, methodNames, args, {\n                onResult: resolve, onError: reject,\n                onProgress : onProgress, timeOut: timeOut\n              });\n              return;\n            }\n          }\n          throw new Error(\"No available worker.\");\n        } catch (e) {\n          this.logger(`Awaiting... (${e.message})`);\n          running = false;\n          this._dispatcher.addEventListener(\"WorkerPool.idle\", handler);\n          this._dispatcher.addEventListener(\"WorkerPool.timeout\", handler);\n        }\n      };\n\n      handler();\n\n\n    });\n  }\n\n  stopWorkers() {\n    this._pool.forEach(item => {\n      item.terminate();\n    });\n  }\n}\nconst workerURL = [];\nconst workerPool = {};\n\nasync function startWorker( url, { methodNames, args, onProgress, logger, timeOut = 15000 } = {} ) {\n  if( !useWorkerLoaders ) {\n    throw new Error(\"Async workers disabled.\");\n  }\n  let pool;\n  let idx = workerURL.indexOf(url);\n  if(idx == -1) {\n    pool = new WorkerPool( url, logger );\n    const idx = workerURL.length;\n    workerURL.push(url);\n    workerPool[ idx ] = pool;\n  } else {\n    pool = workerPool[ idx ];\n    if( logger ) {\n      pool.logger = logger;\n    }\n  }\n  return await pool.startWorker({\n    methodNames : methodNames, args : args,\n    onProgress : onProgress, timeOut : timeOut });\n}\nasync function stopWorker( url ) {\n  let pool;\n  let idx = workerURL.indexOf(url);\n  if(idx > -1) {\n    pool = workerPool[ idx ];\n    pool.stopWorkers();\n  }\n}\n\nexport {\n  workerLoaders, asyncLoaderAvailable,\n  startWorker, stopWorker, workerPool\n};\n\n","import nifti from 'nifti-reader-js';\nimport {\n  Vector3, Vector4, Matrix4, ByteType, ShortType, IntType,\n  FloatType, UnsignedByteType, UnsignedShortType,\n} from 'three';\n\nclass NiftiImage {\n  constructor ( data ) {\n    this.isInvalid = true;\n    if(!data) { return; }\n    // parse nifti\n    if (nifti.isCompressed(data)) {\n        data = nifti.decompress(data);\n    }\n\n    this.header = nifti.readHeader(data);\n\n    this.slope = this.header.scl_slope || 1;\n    this.intercept = this.header.scl_inter || 0;\n    this.calMin = this.header.cal_min || 0;\n    this.calMax = this.header.cal_max || 0;\n\n    const niftiImage = nifti.readImage(this.header, data);\n    if (this.header.datatypeCode === nifti.NIFTI1.TYPE_INT8) {\n      this.image = new Int8Array(niftiImage);\n      this.imageDataType = ByteType;\n      this.dataIsInt8 = true;\n    } else if (this.header.datatypeCode === nifti.NIFTI1.TYPE_INT16) {\n      this.image = new Int16Array(niftiImage);\n      this.imageDataType = ShortType;\n      this.dataIsInt16 = true;\n    } else if (this.header.datatypeCode === nifti.NIFTI1.TYPE_INT32) {\n      this.image = new Int32Array(niftiImage);\n      this.imageDataType = IntType;\n      this.dataIsInt32 = true;\n    } else if (this.header.datatypeCode === nifti.NIFTI1.TYPE_FLOAT32) {\n      this.image = new Float32Array(niftiImage);\n      this.imageDataType = FloatType;\n      this.dataIsFloat32 = true;\n    } else if (this.header.datatypeCode === nifti.NIFTI1.TYPE_FLOAT64) {\n      // we do not support this, need to make transform later\n      this.image = new Float64Array(niftiImage);\n      this.dataIsFloat64 = true;\n    } else if (this.header.datatypeCode === nifti.NIFTI1.TYPE_UINT8) {\n      this.image = new Uint8Array(niftiImage);\n      this.imageDataType = UnsignedByteType;\n      this.dataIsUInt8 = true;\n    } else if (this.header.datatypeCode === nifti.NIFTI1.TYPE_UINT16) {\n      this.image = new Uint16Array(niftiImage);\n      this.imageDataType = UnsignedShortType;\n      this.dataIsUInt16 = true;\n    } else if (this.header.datatypeCode === nifti.NIFTI1.TYPE_UINT32) {\n      this.image = new Uint32Array(niftiImage);\n      this.imageDataType = UnsignedIntType;\n      this.dataIsUInt32 = true;\n    } else {\n      console.warn(\"NiftiImage: Cannot load NIFTI image data: the data type code is unsupported.\")\n    }\n\n    if( this.calMax === 0 ) {\n      let maxV = 1, minV = 0;\n      if( this.image.length > 0 ) {\n        maxV = this.image[0];\n        minV = this.image[0];\n\n        this.image.forEach( ( v ) => {\n          if( v > maxV ) {\n            maxV = v;\n          } else if ( v < minV ) {\n            minV = v;\n          }\n        });\n      }\n      this.calMin = minV * this.slope + this.intercept;\n      this.calMax = maxV * this.slope + this.intercept;\n    }\n\n    this.isNiftiImage = true;\n\n    // IJK to RAS\n    // determine which matrix to use\n\n    /* WHY 3 METHODS?\n     --------------\n     Method 1 is provided only for backwards compatibility.  The intention\n     is that Method 2 (qform_code > 0) represents the nominal voxel locations\n     as reported by the scanner, or as rotated to some fiducial orientation and\n     location.  Method 3, if present (sform_code > 0), is to be used to give\n     the location of the voxels in some standard space.  The sform_code\n     indicates which standard space is present.  Both methods 2 and 3 can be\n     present, and be useful in different contexts (method 2 for displaying the\n     data on its original grid; method 3 for displaying it on a standard grid).\n    */\n\n    if ( this.header.sform_code <= 0 ) {\n      this.header.affine = this.header.getQformMat();\n    }\n\n    this.affine = new Matrix4().set(\n      this.header.affine[0][0],\n      this.header.affine[0][1],\n      this.header.affine[0][2],\n      this.header.affine[0][3],\n      this.header.affine[1][0],\n      this.header.affine[1][1],\n      this.header.affine[1][2],\n      this.header.affine[1][3],\n      this.header.affine[2][0],\n      this.header.affine[2][1],\n      this.header.affine[2][2],\n      this.header.affine[2][3],\n      this.header.affine[3][0],\n      this.header.affine[3][1],\n      this.header.affine[3][2],\n      this.header.affine[3][3]\n    );\n\n    this.shape = new Vector3(\n      this.header.dims[1],\n      this.header.dims[2],\n      this.header.dims[3]\n    );\n\n    // threeBrain uses the volume center as origin, hence the transform\n    // is shifted\n    const crsOrder = new Vector4( 1, 1, 1, 0 ).applyMatrix4( this.affine );\n    const shift = new Matrix4().set(\n      1, 0, 0, (this.shape.x - 1) / 2,\n      0, 1, 0, (this.shape.y - 1) / 2 ,\n      0, 0, 1, (this.shape.z - 1) / 2,\n      0, 0, 0, 1\n    );\n    this.model2vox = shift;\n\n    this.ijkIndexOrder = new Vector3().copy( crsOrder );\n\n    // IJK to scanner RAS (of the image)\n    this.model2RAS = this.affine.clone().multiply( shift );\n\n    // IJK to tkrRAS\n    this.model2tkrRAS = this.affine.clone().setPosition(0, 0, 0);\n    const tOrigTranslate = this.shape.clone()\n      .multiplyScalar( -0.5 )\n      .applyMatrix4( this.model2tkrRAS );\n    this.model2tkrRAS.setPosition(\n      tOrigTranslate.x,\n      tOrigTranslate.y,\n      tOrigTranslate.z,\n    );\n    this.model2tkrRAS.multiply( shift );\n    this.isInvalid = false;\n\n  }\n\n  getNormalizedImage () {\n\n    const slope = this.slope || 1;\n    const intercept = this.intercept;\n    const calMin = this.calMin;\n    const calMax = this.calMax;\n    const calSpread = calMax == calMin ? 1 : (calMax - calMin);\n    const calInterc = ( intercept - calMin ) / calSpread;\n    const calSlope = slope / calSpread;\n\n    const newImage = Float32Array.from( this.image, (x) => {\n      // return ( slope * x + intercept - calMin ) / calSpread;\n      return calSlope * x + calInterc;\n    });\n\n    return newImage;\n  }\n\n  dispose () {\n    this.header = undefined;\n    this.image = undefined;\n    this.affine = undefined;\n    this.shape = undefined;\n    this.ijkIndexOrder = undefined;\n    this.model2RAS = undefined;\n    this.model2vox = undefined;\n  }\n\n  copy( el ) {\n    this.isInvalid = el.isInvalid;\n    if(this.isInvalid) { return this; }\n\n    this.header = el.header;\n    this.image = el.image;\n    this.imageDataType = el.imageDataType;\n\n    if( el.dataIsInt8 ) {\n      this.dataIsInt8 = true;\n    } else if( el.dataIsInt16 ) {\n      this.dataIsInt16 = true;\n    } else if( el.dataIsInt32 ) {\n      this.dataIsInt32 = true;\n    } else if( el.dataIsFloat32 ) {\n      this.dataIsFloat32 = true;\n    } else if( el.dataIsFloat64 ) {\n      this.dataIsFloat64 = true;\n    } else if( el.dataIsUInt8 ) {\n      this.dataIsUInt8 = true;\n    } else if( el.dataIsUInt16 ) {\n      this.dataIsUInt16 = true;\n    } else if( el.dataIsUInt32 ) {\n      this.dataIsUInt32 = true;\n    }\n\n    this.slope = el.slope || 1;\n    this.intercept = el.intercept;\n    this.calMin = el.calMin;\n    this.calMax = el.calMax;\n\n    this.isNiftiImage = true;\n\n    this.affine = new Matrix4().copy( el.affine );\n    this.shape = new Vector3().copy( el.shape );\n    this.ijkIndexOrder = new Vector3().copy( el.ijkIndexOrder );\n\n    this.model2RAS = new Matrix4().copy( el.model2RAS );\n\n    this.model2tkrRAS = new Matrix4().copy( el.model2tkrRAS );\n\n    this.model2vox = new Matrix4().copy( el.model2vox );\n\n    return this;\n  }\n\n}\n\nexport { NiftiImage }\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos >> 3] = lst;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if (d[1] & 32)\n        err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                err(6, 'invalid gzip data');\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            err(8);\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, new u8(su)));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","import nifti from 'nifti-reader-js';\nimport { decompressSync } from 'fflate';\nimport { Vector3, Vector4, Matrix4, ShortType, IntType, FloatType, UnsignedByteType } from 'three';\n\nclass MGHImage {\n  constructor ( data ) {\n    this.isMGHImage = true;\n    this.isInvalid = true;\n\n    if( !data ) { return; }\n\n    // data is binary file buffer\n    let raw = data;\n    let reader = new DataView( data );\n\n    // check if data is gz-compressed (MGZ)\n    if( reader.getUint8(0) === 31 && reader.getUint8(1) === 139 ) {\n      const decompressed = decompressSync( new Uint8Array(data) );\n      raw = decompressed.buffer;\n      reader = new DataView( raw );\n    }\n    let version = reader.getInt32(0, false);\n    let width = reader.getInt32(4, false);\n    let height = reader.getInt32(8, false);\n    let depth = reader.getInt32(12, false);\n    let nframes = reader.getInt32(16, false);\n    let mtype = reader.getInt32(20, false);\n    let spacingX = reader.getFloat32(30, false);\n    let spacingY = reader.getFloat32(34, false);\n    let spacingZ = reader.getFloat32(38, false);\n    let xr = reader.getFloat32(42, false);\n    let xa = reader.getFloat32(46, false);\n    let xs = reader.getFloat32(50, false);\n    let yr = reader.getFloat32(54, false);\n    let ya = reader.getFloat32(58, false);\n    let ys = reader.getFloat32(62, false);\n    let zr = reader.getFloat32(66, false);\n    let za = reader.getFloat32(70, false);\n    let zs = reader.getFloat32(74, false);\n    let cr = reader.getFloat32(78, false);\n    let ca = reader.getFloat32(82, false);\n    let cs = reader.getFloat32(86, false);\n    this._MGHHeader = {\n      version : version,\n      width : width, height : height, depth : depth, nframes : nframes,\n      mtype : mtype,\n      spacingX : spacingX, spacingY : spacingY, spacingZ : spacingZ,\n      xr : xr, xa : xa, xs : xs,\n      yr : yr, ya : ya, ys : ys,\n      zr : zr, za : za, zs : zs,\n      cr : cr, ca : ca, cs : cs\n    };\n\n    this.header = new nifti.NIFTI1();\n    const isLittleEndian = false;\n    this.header.littleEndian = isLittleEndian; // always big endian\n    this.header.dims = [3, 1, 1, 1, 0, 0, 0, 0];\n    this.header.pixDims = [1, 1, 1, 1, 1, 0, 0, 0];\n\n    if (version !== 1 || mtype < 0 || mtype > 4) {\n      console.warn(\"MGHImage: this is an invalid MGH/MGZ file\");\n      this.isInvalid = true;\n      return;\n    }\n    if (mtype === 0) {\n      this.header.numBitsPerVoxel = 8;\n      this.header.datatypeCode = nifti.NIFTI1.TYPE_UINT8;\n    } else if (mtype === 4) {\n      this.header.numBitsPerVoxel = 16;\n      this.header.datatypeCode = nifti.NIFTI1.TYPE_INT16;\n    } else if (mtype === 1) {\n      this.header.numBitsPerVoxel = 32;\n      this.header.datatypeCode = nifti.NIFTI1.TYPE_INT32;\n    } else if (mtype === 3) {\n      this.header.numBitsPerVoxel = 32;\n      this.header.datatypeCode = nifti.NIFTI1.TYPE_FLOAT32;\n    }\n\n    this.header.dims[1] = width;\n    this.header.dims[2] = height;\n    this.header.dims[3] = depth;\n    this.header.dims[4] = nframes;\n    if (nframes > 1) { this.header.dims[0] = 4; }\n    this.header.pixDims[1] = spacingX;\n    this.header.pixDims[2] = spacingY;\n    this.header.pixDims[3] = spacingZ;\n    this.header.vox_offset = 284;\n    this.header.sform_code = 1;\n\n    this.slope = this.header.scl_slope = 1;\n    this.intercept = this.header.scl_inter = 0;\n\n    // Get Torig: IJK to tkrRAS: this Torig only contains rotation part. need to calculate translation\n    const Torig = new Matrix4().set(\n      xr * spacingX, yr * spacingY, zr * spacingZ, 0,\n      xa * spacingX, ya * spacingY, za * spacingZ, 0,\n      xs * spacingX, ys * spacingY, zs * spacingZ, 0,\n      0, 0, 0, 1\n    );\n    // center of IJK\n    const Pcrs = new Vector3().set( width, height, depth ).divideScalar( 2.0 );\n\n    // rotation * Pcrs -> PxyzOffset\n    // Torig * Pcrs -> 0,0,0\n    // hence (rotation - Torig) * Pcrs = PxyzOffset\n    const PxyzOffset = new Vector3().copy( Pcrs )\n      .applyMatrix4( Torig );\n\n    /**\n     * (rotation - Torig) * Pcrs = PxyzOffset\n     * [0 0 0 -Torig.x]    Pcrs.x    PxyzOffset.x\n     * [0 0 0 -Torig.y]  * Pcrs.y =  PxyzOffset.y\n     * [0 0 0 -Torig.z]    Pcrs.z    PxyzOffset.z\n     * [0 0 0        0]    1         0\n     * => Torig.xyz = -PxyzOffset.xyz\n     */\n    Torig.setPosition( -PxyzOffset.x, -PxyzOffset.y, -PxyzOffset.z );\n\n    this.ijk2tkrRAS = Torig;\n\n    // Norig is `affine`, which is Torig + cRAS\n    const Norig = Torig.clone();\n    Norig.setPosition( -PxyzOffset.x + cr, -PxyzOffset.y + ca, -PxyzOffset.z + cs );\n\n    this.affine = Norig;\n\n    const nElements = this.header.dims[1] * this.header.dims[2] * this.header.dims[3] * this.header.dims[4];\n    const nBytes = nElements * (this.header.numBitsPerVoxel / 8);\n\n    const imageDataBuf = raw.slice(this.header.vox_offset, this.header.vox_offset + nBytes);\n\n    const dataReader = new DataView( imageDataBuf );\n    if (this.header.datatypeCode === nifti.NIFTI1.TYPE_INT16) {\n      this.image = new Int16Array( nElements );\n      for( let ii = 0 ; ii < nElements ; ii++ ) {\n        this.image[ ii ] = dataReader.getInt16(ii * 2, isLittleEndian);\n      }\n      this.imageDataType = ShortType;\n      this.dataIsInt16 = true;\n    } else if (this.header.datatypeCode === nifti.NIFTI1.TYPE_INT32) {\n      this.image = new Int32Array( nElements );\n      for( let ii = 0 ; ii < nElements ; ii++ ) {\n        this.image[ ii ] = dataReader.getInt32(ii * 4, isLittleEndian);\n      }\n      this.imageDataType = IntType;\n      this.dataIsInt32 = true;\n    } else if (this.header.datatypeCode === nifti.NIFTI1.TYPE_FLOAT32) {\n      this.image = new Float32Array( nElements );\n      for( let ii = 0 ; ii < nElements ; ii++ ) {\n        this.image[ ii ] = dataReader.getFloat32(ii * 4, isLittleEndian);\n      }\n      this.imageDataType = FloatType;\n      this.dataIsFloat32 = true;\n    } else if (this.header.datatypeCode === nifti.NIFTI1.TYPE_UINT8) {\n      this.image = new Uint8Array( imageDataBuf );\n      this.imageDataType = UnsignedByteType;\n      this.dataIsUInt8 = true;\n    }\n\n    let maxV = 1, minV = 0;\n    if( this.image.length > 0 ) {\n      maxV = this.image[0];\n      minV = this.image[0];\n      this.image.forEach( ( v ) => {\n        if( v > maxV ) {\n          maxV = v;\n        } else if ( v < minV ) {\n          minV = v;\n        }\n      });\n    }\n    this.calMin = this.header.cal_min = minV * this.slope + this.intercept;\n    this.calMax = this.header.cal_max = maxV * this.slope + this.intercept;\n\n\n    this.shape = new Vector3(\n      this.header.dims[1],\n      this.header.dims[2],\n      this.header.dims[3]\n    );\n\n    // threeBrain uses the volume center as origin, hence the transform\n    // is shifted. Also needs to take care of the CRS order (positive vs negative)\n    const crsOrder = new Vector4( 1, 1, 1, 0 ).applyMatrix4( this.affine );\n    const shift = new Matrix4().set(\n      1, 0, 0, (this.shape.x) / 2 - 0.5,\n      0, 1, 0, (this.shape.y) / 2 - 0.5,\n      0, 0, 1, (this.shape.z) / 2 - 0.5,\n      0, 0, 0, 1\n    );\n    this.model2vox = shift;\n\n    this.ijkIndexOrder = new Vector3().copy( crsOrder );\n\n    // IJK to scanner RAS (of the image)\n    this.model2RAS = this.affine.clone().multiply( shift );\n\n    this.model2tkrRAS = this.ijk2tkrRAS.clone().multiply( shift );\n\n    this.isInvalid = false;\n\n  }\n\n  getNormalizedImage () {\n\n    const slope = this.slope || 1;\n    const intercept = this.intercept;\n    const calMin = this.calMin;\n    const calMax = this.calMax;\n    const calSpread = calMax == calMin ? 1 : (calMax - calMin);\n    const calInterc = ( intercept - calMin ) / calSpread;\n    const calSlope = slope / calSpread;\n\n    const newImage = Float32Array.from( this.image, (x) => {\n      // return ( slope * x + intercept - calMin ) / calSpread;\n      return calSlope * x + calInterc;\n    });\n\n    return newImage;\n  }\n\n  dispose() {\n    this.isInvalid = false;\n    this._MGHHeader = undefined;\n    this.header = undefined;\n    this.ijk2tkrRAS = undefined;\n    this.affine = undefined;\n    this.image = undefined;\n\n    this.shape = undefined;\n    this.ijkIndexOrder = undefined;\n    this.model2RAS = undefined;\n    this.model2tkrRAS = undefined;\n    this.model2vox = undefined;\n  }\n\n  copy( el ) {\n    this.isMGHImage = el.isMGHImage;\n    this.isInvalid = el.isInvalid;\n    if(this.isInvalid) { return this; }\n    this._MGHHeader = el._MGHHeader;\n    this.header = el.header;\n    this.slope = el.slope || 1;\n    this.intercept = el.intercept;\n    this.calMin = el.calMin;\n    this.calMax = el.calMax;\n\n    this.ijk2tkrRAS = new Matrix4().copy( el.ijk2tkrRAS );\n    this.affine = new Matrix4().copy( el.affine );\n    this.shape = new Vector3().copy( el.shape );\n    this.ijkIndexOrder = new Vector3().copy( el.ijkIndexOrder );\n    this.model2RAS = new Matrix4().copy( el.model2RAS );\n    this.model2tkrRAS = new Matrix4().copy( el.model2tkrRAS );\n    this.model2vox = new Matrix4().copy( el.model2vox );\n\n    this.image = el.image;\n    this.imageDataType = el.imageDataType;\n\n    if( el.dataIsInt16 ) {\n      this.dataIsInt16 = true;\n    } else if( el.dataIsInt32 ) {\n      this.dataIsInt32 = true;\n    } else if( el.dataIsFloat32 ) {\n      this.dataIsFloat32 = true;\n    } else if( el.dataIsUInt8 ) {\n      this.dataIsUInt8 = true;\n    }\n    return this;\n  }\n\n}\n\n\nexport { MGHImage };\n\n","import gifti from 'gifti-reader-js';\n\nclass GiftiMesh {\n\n  // data must be XML data (text)\n  constructor( data ) {\n    // ffff.text().then(v => {window.vvvv = v;})\n    this.isInvalid = true;\n    if( !data ) { return; }\n\n    const gii = gifti.parse( data );\n    window.gii = gii;\n\n    this.nVertices = gii.getNumPoints();\n    this.nFaces = gii.getNumTriangles();\n\n    // positions Float32Array\n    const pointArray = gii.getPointsDataArray();\n    this.position = pointArray.getData();\n\n    // get transforms\n    let transform;\n    if(Array.isArray(pointArray.transforms)) {\n      for(let ii = 0 ; ii < pointArray.transforms.length; ii++) {\n        const tform = pointArray.transforms[ii];\n        try {\n          // Only read in NIFTI_XFORM_SCANNER_ANAT transform\n          if( tform.transformedSpace !== \"NIFTI_XFORM_SCANNER_ANAT\" ) {\n            continue;\n          }\n          const tmat = tform.matrixData\n            .split(\"\\n\")\n            .map(v => { return v.trim().split(/[ ]+/g).map(parseFloat); })\n            .filter(v => {return v.length === 4});\n\n          if( tmat.length !== 3 && tmat.length !== 4 ) {\n            throw \"Not a valid transform\";\n          }\n          transform = tmat;\n        } catch (e) {}\n      }\n    }\n\n    if( transform ) {\n      // needs to apply transforms to anat!!!\n      const posArray = this.position;\n      const t11 = transform[0][0],\n            t12 = transform[0][1],\n            t13 = transform[0][2],\n            t14 = transform[0][3],\n\n            t21 = transform[1][0],\n            t22 = transform[1][1],\n            t23 = transform[1][2],\n            t24 = transform[1][3],\n\n            t31 = transform[2][0],\n            t32 = transform[2][1],\n            t33 = transform[2][2],\n            t34 = transform[2][3];\n\n      for(let ii = 0; ii < posArray.length / 3; ii++) {\n        const x = posArray[ii * 3],\n              y = posArray[ii * 3 + 1],\n              z = posArray[ii * 3 + 2];\n\n        posArray[ii * 3] = t11 * x + t12 * y + t13 * z + t14;\n        posArray[ii * 3 + 1] = t21 * x + t22 * y + t23 * z + t24;\n        posArray[ii * 3 + 2] = t31 * x + t32 * y + t33 * z + t34;\n      }\n    }\n\n    // Int32Array\n    const indexArray = gii.getTrianglesDataArray().getData();\n    const index = new Uint32Array( this.nFaces * 3 );\n    for( let i = 0; i < this.nFaces * 3; i ++ ) {\n      index[ i ] = indexArray[ i ];\n    }\n    this.index = index;\n    this.isGiftiMesh = true;\n    this.isSurfaceMesh = true;\n\n    this.isInvalid = false;\n\n    // TODO: handle tranforms, normals, and color\n  }\n\n  dispose() {\n    this.isInvalid = true;\n    this.position = NaN;\n    this.index = NaN;\n  }\n\n  copy( el ) {\n    this.isInvalid = el.isInvalid;\n    this.nVertices = el.nVertices;\n    this.nFaces = el.nFaces;\n    this.position = el.position;\n    this.index = el.index;\n    this.isSurfaceMesh = true;\n    this.isGiftiMesh = true;\n    return this;\n  }\n\n\n}\n\nexport { GiftiMesh }\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader,\n\tVector3\n} from 'three';\n\n/**\n * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n *\n * Supports both binary and ASCII encoded files, with automatic detection of type.\n *\n * The loader returns a non-indexed buffer geometry.\n *\n * Limitations:\n *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n *  ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *  const loader = new STLLoader();\n *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n *    scene.add( new THREE.Mesh( geometry ) );\n *  });\n *\n * For binary STLs geometry might contain colors for vertices. To use it:\n *  // use the same code to load STL as above\n *  if (geometry.hasColors) {\n *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: true });\n *  } else { .... }\n *  const mesh = new THREE.Mesh( geometry, material );\n *\n * For ASCII STLs containing multiple solids, each solid is assigned to a different group.\n * Groups can be used to assign a different color by defining an array of materials with the same length of\n * geometry.groups and passing it to the Mesh constructor:\n *\n * const mesh = new THREE.Mesh( geometry, material );\n *\n * For example:\n *\n *  const materials = [];\n *  const nGeometryGroups = geometry.groups.length;\n *\n *  const colorMap = ...; // Some logic to index colors.\n *\n *  for (let i = 0; i < nGeometryGroups; i++) {\n *\n *\t\tconst material = new THREE.MeshPhongMaterial({\n *\t\t\tcolor: colorMap[i],\n *\t\t\twireframe: false\n *\t\t});\n *\n *  }\n *\n *  materials.push(material);\n *  const mesh = new THREE.Mesh(geometry, materials);\n */\n\n\nclass STLLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( data ) {\n\n\t\tfunction isBinary( data ) {\n\n\t\t\tconst reader = new DataView( data );\n\t\t\tconst face_size = ( 32 / 8 * 3 ) + ( ( 32 / 8 * 3 ) * 3 ) + ( 16 / 8 );\n\t\t\tconst n_faces = reader.getUint32( 80, true );\n\t\t\tconst expect = 80 + ( 32 / 8 ) + ( n_faces * face_size );\n\n\t\t\tif ( expect === reader.byteLength ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// An ASCII STL data must begin with 'solid ' as the first six bytes.\n\t\t\t// However, ASCII STLs lacking the SPACE after the 'd' are known to be\n\t\t\t// plentiful.  So, check the first 5 bytes for 'solid'.\n\n\t\t\t// Several encodings, such as UTF-8, precede the text with up to 5 bytes:\n\t\t\t// https://en.wikipedia.org/wiki/Byte_order_mark#Byte_order_marks_by_encoding\n\t\t\t// Search for \"solid\" to start anywhere after those prefixes.\n\n\t\t\t// US-ASCII ordinal values for 's', 'o', 'l', 'i', 'd'\n\n\t\t\tconst solid = [ 115, 111, 108, 105, 100 ];\n\n\t\t\tfor ( let off = 0; off < 5; off ++ ) {\n\n\t\t\t\t// If \"solid\" text is matched to the current offset, declare it to be an ASCII STL.\n\n\t\t\t\tif ( matchDataViewAt( solid, reader, off ) ) return false;\n\n\t\t\t}\n\n\t\t\t// Couldn't find \"solid\" text at the beginning; it is binary STL.\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction matchDataViewAt( query, reader, offset ) {\n\n\t\t\t// Check if each byte in query matches the corresponding byte from the current offset\n\n\t\t\tfor ( let i = 0, il = query.length; i < il; i ++ ) {\n\n\t\t\t\tif ( query[ i ] !== reader.getUint8( offset + i ) ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction parseBinary( data ) {\n\n\t\t\tconst reader = new DataView( data );\n\t\t\tconst faces = reader.getUint32( 80, true );\n\n\t\t\tlet r, g, b, hasColors = false, colors;\n\t\t\tlet defaultR, defaultG, defaultB, alpha;\n\n\t\t\t// process STL header\n\t\t\t// check for default color in header (\"COLOR=rgba\" sequence).\n\n\t\t\tfor ( let index = 0; index < 80 - 10; index ++ ) {\n\n\t\t\t\tif ( ( reader.getUint32( index, false ) == 0x434F4C4F /*COLO*/ ) &&\n\t\t\t\t\t( reader.getUint8( index + 4 ) == 0x52 /*'R'*/ ) &&\n\t\t\t\t\t( reader.getUint8( index + 5 ) == 0x3D /*'='*/ ) ) {\n\n\t\t\t\t\thasColors = true;\n\t\t\t\t\tcolors = new Float32Array( faces * 3 * 3 );\n\n\t\t\t\t\tdefaultR = reader.getUint8( index + 6 ) / 255;\n\t\t\t\t\tdefaultG = reader.getUint8( index + 7 ) / 255;\n\t\t\t\t\tdefaultB = reader.getUint8( index + 8 ) / 255;\n\t\t\t\t\talpha = reader.getUint8( index + 9 ) / 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst dataOffset = 84;\n\t\t\tconst faceLength = 12 * 4 + 2;\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tconst vertices = new Float32Array( faces * 3 * 3 );\n\t\t\tconst normals = new Float32Array( faces * 3 * 3 );\n\n\t\t\tfor ( let face = 0; face < faces; face ++ ) {\n\n\t\t\t\tconst start = dataOffset + face * faceLength;\n\t\t\t\tconst normalX = reader.getFloat32( start, true );\n\t\t\t\tconst normalY = reader.getFloat32( start + 4, true );\n\t\t\t\tconst normalZ = reader.getFloat32( start + 8, true );\n\n\t\t\t\tif ( hasColors ) {\n\n\t\t\t\t\tconst packedColor = reader.getUint16( start + 48, true );\n\n\t\t\t\t\tif ( ( packedColor & 0x8000 ) === 0 ) {\n\n\t\t\t\t\t\t// facet has its own unique color\n\n\t\t\t\t\t\tr = ( packedColor & 0x1F ) / 31;\n\t\t\t\t\t\tg = ( ( packedColor >> 5 ) & 0x1F ) / 31;\n\t\t\t\t\t\tb = ( ( packedColor >> 10 ) & 0x1F ) / 31;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tr = defaultR;\n\t\t\t\t\t\tg = defaultG;\n\t\t\t\t\t\tb = defaultB;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 1; i <= 3; i ++ ) {\n\n\t\t\t\t\tconst vertexstart = start + i * 12;\n\t\t\t\t\tconst componentIdx = ( face * 3 * 3 ) + ( ( i - 1 ) * 3 );\n\n\t\t\t\t\tvertices[ componentIdx ] = reader.getFloat32( vertexstart, true );\n\t\t\t\t\tvertices[ componentIdx + 1 ] = reader.getFloat32( vertexstart + 4, true );\n\t\t\t\t\tvertices[ componentIdx + 2 ] = reader.getFloat32( vertexstart + 8, true );\n\n\t\t\t\t\tnormals[ componentIdx ] = normalX;\n\t\t\t\t\tnormals[ componentIdx + 1 ] = normalY;\n\t\t\t\t\tnormals[ componentIdx + 2 ] = normalZ;\n\n\t\t\t\t\tif ( hasColors ) {\n\n\t\t\t\t\t\tcolors[ componentIdx ] = r;\n\t\t\t\t\t\tcolors[ componentIdx + 1 ] = g;\n\t\t\t\t\t\tcolors[ componentIdx + 2 ] = b;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.setAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\n\t\t\tif ( hasColors ) {\n\n\t\t\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\t\t\t\tgeometry.hasColors = true;\n\t\t\t\tgeometry.alpha = alpha;\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction parseASCII( data ) {\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst patternSolid = /solid([\\s\\S]*?)endsolid/g;\n\t\t\tconst patternFace = /facet([\\s\\S]*?)endfacet/g;\n\t\t\tlet faceCounter = 0;\n\n\t\t\tconst patternFloat = /[\\s]+([+-]?(?:\\d*)(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/.source;\n\t\t\tconst patternVertex = new RegExp( 'vertex' + patternFloat + patternFloat + patternFloat, 'g' );\n\t\t\tconst patternNormal = new RegExp( 'normal' + patternFloat + patternFloat + patternFloat, 'g' );\n\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\n\t\t\tconst normal = new Vector3();\n\n\t\t\tlet result;\n\n\t\t\tlet groupCount = 0;\n\t\t\tlet startVertex = 0;\n\t\t\tlet endVertex = 0;\n\n\t\t\twhile ( ( result = patternSolid.exec( data ) ) !== null ) {\n\n\t\t\t\tstartVertex = endVertex;\n\n\t\t\t\tconst solid = result[ 0 ];\n\n\t\t\t\twhile ( ( result = patternFace.exec( solid ) ) !== null ) {\n\n\t\t\t\t\tlet vertexCountPerFace = 0;\n\t\t\t\t\tlet normalCountPerFace = 0;\n\n\t\t\t\t\tconst text = result[ 0 ];\n\n\t\t\t\t\twhile ( ( result = patternNormal.exec( text ) ) !== null ) {\n\n\t\t\t\t\t\tnormal.x = parseFloat( result[ 1 ] );\n\t\t\t\t\t\tnormal.y = parseFloat( result[ 2 ] );\n\t\t\t\t\t\tnormal.z = parseFloat( result[ 3 ] );\n\t\t\t\t\t\tnormalCountPerFace ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\twhile ( ( result = patternVertex.exec( text ) ) !== null ) {\n\n\t\t\t\t\t\tvertices.push( parseFloat( result[ 1 ] ), parseFloat( result[ 2 ] ), parseFloat( result[ 3 ] ) );\n\t\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\t\t\t\t\tvertexCountPerFace ++;\n\t\t\t\t\t\tendVertex ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// every face have to own ONE valid normal\n\n\t\t\t\t\tif ( normalCountPerFace !== 1 ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.STLLoader: Something isn\\'t right with the normal of face number ' + faceCounter );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// each face have to own THREE valid vertices\n\n\t\t\t\t\tif ( vertexCountPerFace !== 3 ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.STLLoader: Something isn\\'t right with the vertices of face number ' + faceCounter );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCounter ++;\n\n\t\t\t\t}\n\n\t\t\t\tconst start = startVertex;\n\t\t\t\tconst count = endVertex - startVertex;\n\n\t\t\t\tgeometry.addGroup( start, count, groupCount );\n\t\t\t\tgroupCount ++;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction ensureString( buffer ) {\n\n\t\t\tif ( typeof buffer !== 'string' ) {\n\n\t\t\t\treturn new TextDecoder().decode( buffer );\n\n\t\t\t}\n\n\t\t\treturn buffer;\n\n\t\t}\n\n\t\tfunction ensureBinary( buffer ) {\n\n\t\t\tif ( typeof buffer === 'string' ) {\n\n\t\t\t\tconst array_buffer = new Uint8Array( buffer.length );\n\t\t\t\tfor ( let i = 0; i < buffer.length; i ++ ) {\n\n\t\t\t\t\tarray_buffer[ i ] = buffer.charCodeAt( i ) & 0xff; // implicitly assumes little-endian\n\n\t\t\t\t}\n\n\t\t\t\treturn array_buffer.buffer || array_buffer;\n\n\t\t\t} else {\n\n\t\t\t\treturn buffer;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// start\n\n\t\tconst binData = ensureBinary( data );\n\n\t\treturn isBinary( binData ) ? parseBinary( binData ) : parseASCII( ensureString( data ) );\n\n\t}\n\n}\n\nexport { STLLoader };\n","import { STLLoader } from '../jsm/loaders/STLLoader.js';\n\nfunction extractAttribute(geometry, attr) {\n  let bufferAttr;\n  if( attr === \"index\" ) {\n    bufferAttr = geometry.index;\n  } else {\n    bufferAttr = geometry.getAttribute( attr );\n  }\n  if(!bufferAttr || typeof bufferAttr !== \"object\" || !bufferAttr.isBufferAttribute ) {\n    return;\n  }\n  return bufferAttr;\n}\n\nclass STLMesh {\n\n  // data must be arraybuffer\n  constructor( data ) {\n    this.isInvalid = true;\n    if( !data ) { return; }\n\n    // threejs has existing STLLoader, but I want it to work under workers\n    // hence only typed arrays can be kept\n    const geometry = new STLLoader().parse(data);\n    // ffff.text().then(v => {window.vvvv = v;})\n\n    const geomAttr = extractAttribute( geometry, 'position' );\n    if( !geomAttr ) { return; }\n    this.nVertices = geomAttr.count;\n    this.position = geomAttr.array;\n\n    const indexAttr = extractAttribute( geometry, 'index' );\n    if( indexAttr ) {\n      this.nFaces = indexAttr.count;\n      this.index = indexAttr.array;\n    } else {\n      // In such case, normal must exists\n      this.nFaces = 0;\n      this.index = null;\n    }\n\n\n    // maybe normals and color\n    const normalAttr = extractAttribute( geometry, 'normal' );\n    if( normalAttr ) {\n      this.normal = normalAttr.array;\n      this.hasNormals = true;\n    } else {\n      this.normal = null;\n      this.hasNormals = false;\n    }\n\n    const colorAttr = extractAttribute( geometry, 'color' );\n    if( colorAttr ) {\n      this.color = colorAttr.array;\n      this.hasColors = true;\n    } else {\n      this.color = null;\n      this.hasColors = false;\n    }\n    this.isSTLMesh = true;\n    this.isSurfaceMesh = true;\n\n    this.isInvalid = false;\n\n  }\n\n  dispose() {\n    this.isInvalid = true;\n    this.position = NaN;\n    this.index = NaN;\n  }\n\n  copy( el ) {\n    this.isInvalid = el.isInvalid;\n    this.nVertices = el.nVertices;\n    this.nFaces = el.nFaces;\n    this.position = el.position;\n    this.index = el.index;\n    this.isSurfaceMesh = true;\n    this.isSTLMesh = true;\n\n    this.hasNormals = el.hasNormals;\n    if( el.hasNormals ) {\n      this.normal = el.normal;\n    } else {\n      this.normal = null;\n    }\n\n    this.hasColors = el.hasColors;\n    if( el.hasColors ) {\n      this.color = el.color;\n    } else {\n      this.color = null;\n    }\n\n    return this;\n  }\n\n\n}\n\nexport { STLMesh }\n","import { Matrix4 } from 'three';\n// import download from 'downloadjs';\n\nfunction padZero(str, len) {\n    len = len || 2;\n    var zeros = new Array(len).join('0');\n    return (zeros + str).slice(-len);\n};\n\nfunction to_dict(x, keys){\n\n  if(typeof(x) !== 'object'){\n    x = [x];\n  }\n  if(x === null){\n    return({});\n  }\n  x = {...x};\n  if(keys !== undefined){\n    old_keys = Object.keys(x);\n    let y = {};\n\n    [...old_keys.keys()].forEach((ii) => {y[keys[ii]] = x[old_keys[ii]]});\n\n    x = y;\n  }\n\n  return(x);\n};\n\nfunction storageAvailable(type) {\n  try {\n    const storage = window[type],\n        x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  }\n  catch(e) {\n    return e instanceof DOMException && (\n        // everything except Firefox\n        e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === 'QuotaExceededError' ||\n        // Firefox\n        e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n        // acknowledge QuotaExceededError only if there's something already stored\n        storage.length !== 0;\n  }\n}\n\nfunction to_array(x){\n  if( x === undefined || x === null ){\n    return([]);\n  }\n\n  if( Array.isArray(x) ){\n    return( x );\n  }\n\n  if(typeof(x) !== 'object'){\n    return( [x] );\n  }\n\n\n  if( x instanceof Map ){\n    return( [...x.values()] );\n  }\n\n  if( Object.prototype.toString.call(x) === \"[object Map Iterator]\" ) {\n    return( [...x] );\n  }\n\n  return( Object.values(x) );\n};\n\nconst min2 = function(x, init = -Infinity){\n  if(x.length === 0){\n    return( init );\n  }\n  let re = Infinity;\n  for(let i in x){\n    let tmp = x[i];\n    if( Array.isArray(tmp) ){\n      tmp = min2(tmp, re, true);\n    }\n    if( tmp < re ){\n      re = tmp;\n    }\n  }\n  return( re );\n};\n\nconst max2 = function(x, init = Infinity){\n  if(x.length === 0){\n    return( init );\n  }\n  let re = -Infinity;\n  for(let i in x){\n    let tmp = x[i];\n    if( Array.isArray(tmp) ){\n      tmp = max2(tmp, re, true);\n    }\n    if( tmp > re ){\n      re = tmp;\n    }\n  }\n  return( re );\n};\n\nconst sub2 = function(x, val){\n  for(let i in x){\n    let tmp = x[i];\n    if( Array.isArray(tmp) ){\n      sub2(tmp, val);\n    } else {\n      x[i] = tmp - val;\n    }\n  }\n  return( x );\n}\n\nfunction get_element_size(el){\n  const width = parseFloat(getComputedStyle(el, null).getPropertyValue('width').replace('px', ''));\n  const height = parseFloat(getComputedStyle(el, null).getPropertyValue('height').replace('px', ''));\n  return([width, height]);\n}\n\nfunction get_or_default(map, key, _default = undefined){\n  if( map.has( key ) ){\n    return( map.get(key) );\n  }else{\n    map.set( key, _default );\n    return( _default );\n  }\n}\n\nfunction set_visibility( m, visible ) {\n  if( visible === undefined ){ return; }\n  if( m.isObject3D ){\n    if( m.userData.instance && m.userData.instance.isThreeBrainObject ) {\n      m.userData.instance.set_visibility( visible );\n    } else {\n      m.visible = visible;\n    }\n  }\n}\n\nfunction set_display_mode( m, mode ) {\n  if( typeof mode !== \"string\" ){ return; }\n  if( m.isObject3D ){\n    if( m.userData.instance && m.userData.instance.isThreeBrainObject ) {\n      m.userData.instance.set_display_mode( mode );\n      return;\n    }\n  }\n  set_visibility( m, mode !== \"hidden\" );\n}\n\n\nfunction remove_comments(s){\n  return(s.split(\"\\n\").map((e) => {\n      return(\n        e.replaceAll(/\\/\\/.*/g, \"\")\n      );\n    }).join(\"\\n\"));\n}\n\n\n// Credit: David Walsh (https://davidwalsh.name/javascript-debounce-function)\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nfunction debounce(func, wait, immediate) {\n  var timeout;\n\n  // This is the function that is actually executed when\n  // the DOM event is triggered.\n  return function executedFunction() {\n    // Store the context of this and any\n    // parameters passed to executedFunction\n    var context = this;\n    var args = arguments;\n\n    // The function to be called after\n    // the debounce time has elapsed\n    var later = function() {\n      // null timeout to indicate the debounce ended\n      timeout = null;\n\n      // Call function now if you did not on the leading end\n      if (!immediate) func.apply(context, args);\n    };\n\n    // Determine if you should call the function\n    // on the leading or trail end\n    var callNow = immediate && !timeout;\n\n    // This will reset the waiting every function execution.\n    // This is the step that prevents the function from\n    // being executed because it will never reach the\n    // inside of the previous setTimeout\n    clearTimeout(timeout);\n\n    // Restart the debounce waiting period.\n    // setTimeout returns a truthy value (it differs in web vs node)\n    timeout = setTimeout(later, wait);\n\n    // Call immediately if you're dong a leading\n    // end execution\n    if (callNow) func.apply(context, args);\n  };\n};\n\n// source: https://github.com/mrdoob/three.js/blob/790811db742ea9d7c54fe28f83865d7576f14134/examples/jsm/loaders/RGBELoader.js#L352-L396\nconst float_to_int32 = ( function () {\n\n\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\tvar floatView = new Float32Array( 1 );\n\tvar int32View = new Int32Array( floatView.buffer );\n\n\t/* This method is faster than the OpenEXR implementation (very often\n\t * used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t * by James Tursa?s half-precision code. */\n\tfunction toHalf( val ) {\n\n\t\tfloatView[ 0 ] = val;\n\t\tvar x = int32View[ 0 ];\n\n\t\tvar bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\tvar m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\tvar e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t * half, return signed zero. */\n\t\tif ( e < 103 ) return bits;\n\n\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\tif ( e > 142 ) {\n\n\t\t\tbits |= 0x7c00;\n\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t * not Inf, so make sure we set one mantissa bit too. */\n\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\t/* If exponent underflows but not too much, return a denormal */\n\t\tif ( e < 113 ) {\n\n\t\t\tm |= 0x0800;\n\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t * to 1, which is OK. */\n\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t * the exponent, which is OK. */\n\t\tbits += m & 1;\n\t\treturn bits;\n\n\t}\n\n\treturn toHalf;\n\n} )();\n\n\n\n\nfunction as_Matrix4(m) {\n  const re = new Matrix4();\n  if(!Array.isArray(m)){ return(re); }\n\n  if( m.length <= 4 ){\n    try {\n      const m1 = m[3] || [0,0,0,1];\n      re.set(...m[0],...m[1],...m[2], ...m1);\n    } catch (e) {}\n    return( re );\n  }\n  // else m length is either 12 or 16\n  if( m.length == 12 ) {\n    re.set(...m, 0,0,0,1);\n  } if (m.length == 16) {\n    re.set(...m);\n  }\n  return( re );\n}\n\nexport { padZero, to_dict, to_array,\n  get_element_size, get_or_default, debounce, min2,\n  sub2, float_to_int32, as_Matrix4,\n  set_visibility, set_display_mode, remove_comments,\n  storageAvailable };\n\n\n\n\n","import { BufferAttribute } from 'three';\nimport { min2, sub2 } from '../utils.js';\n\nclass FreeSurferMesh {\n  position;\n  index;\n\n  constructor( data ) {\n    this.isInvalid = true;\n    if( !data ) { return; }\n    const raw = data;\n\n    let reader = new DataView( data );\n    const sig0 = reader.getUint32(0, false);\n    const sig1 = reader.getUint32(4, false);\n    if (sig0 !== 4294966883 || sig1 !== 1919246708) {\n      // console.warn( \"FreeSurferMesh: Cannot parse FreeSurfer surface data.\" );\n    }\n\n    let offset = 0;\n    // marks 10 bytes for `nVertices` and `nFaces`\n    while( reader.getUint8(offset) !== 10 ) { offset++; }\n    this.nVertices = reader.getUint32(offset + 2, false);\n    this.nFaces = reader.getUint32(offset + 6, false);\n    offset += 10;\n\n    // next is to read vertices in float32\n    this.position = new Float32Array( this.nVertices * 3 );\n\n    for( let ii = 0 ; ii < this.nVertices * 3 ; ii++, offset += 4) {\n      this.position[ ii ] = reader.getFloat32( offset, false ); // bigEndian\n    }\n    // face indices\n    this.index = new Uint32Array( this.nFaces * 3 );\n    for( let ii = 0; ii < this.nFaces * 3 ; ii++, offset += 4) {\n      this.index[ ii ] = reader.getUint32(offset, false);\n    }\n    const indexMin = min2(this.index, 0);\n    if(indexMin !== 0) {\n      sub2(this.index, indexMin);\n    }\n\n    this.isFreeSurferMesh = true;\n    this.isSurfaceMesh = true;\n    this.isInvalid = false;\n\n    this.tkrToScan = null;\n\n    // try to read footer information\n    try {\n\n\n      if( offset < reader.byteLength ) {\n        // The following 3 uint32 should be 2 0 20 or just 20\n        let fsig0 = reader.getUint32(offset, false),\n            fsig1 = 0, fsig2 = 2;\n        offset += 4;\n        if( fsig0 !== 20 ) {\n          fsig2 = fsig0;\n          fsig1 = reader.getUint32(offset, false);\n          fsig0 = reader.getUint32(offset + 4, false);\n          offset += 8;\n        }\n        if( fsig0 == 20 && fsig1 == 0 && fsig2 == 2 ) {\n          const footReader = new DataView( buf, offset );\n          const footer = new TextDecoder().decode(footReader).split(\"\\n\");\n          /** Example of the footer\n  valid = 1  # volume info valid\n  filename = ../mri/filled-pretess127.mgz\n  volume = 256 256 256\n  voxelsize = 1.000000000000000e+00 1.000000000000000e+00 1.000000000000000e+00\n  xras   = -1.000000000000000e+00 0.000000000000000e+00 0.000000000000000e+00\n  yras   = 0.000000000000000e+00 0.000000000000000e+00 -1.000000000000000e+00\n  zras   = 0.000000000000000e+00 1.000000000000000e+00 0.000000000000000e+00\n  cras   = -1.000000000000000e+00 -1.700000000000000e+01 1.900000000000000e+01\n  \\u0000\\u0000\\u0000\\u0003\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001ymris_re...\n           */\n           /*\n          const xras = (footer[4].match(/^[ ]{0,}xras[ ]{0,}=[ ]{0,}(.*)$/i))[1]\n            .split(/[ \\t]+/i).map(parseFloat);\n          const yras = (footer[5].match(/^[ ]{0,}yras[ ]{0,}=[ ]{0,}(.*)$/i))[1]\n            .split(/[ \\t]+/i).map(parseFloat);\n          const zras = (footer[6].match(/^[ ]{0,}zras[ ]{0,}=[ ]{0,}(.*)$/i))[1]\n            .split(/[ \\t]+/i).map(parseFloat);\n            */\n          const cras = (footer[7].match(/^[ ]{0,}cras[ ]{0,}=[ ]{0,}(.*)$/i))[1]\n            .split(/[ \\t]+/i).map(parseFloat);\n          // using threejs mat4 convention (column-major)\n          this.tkrToScan = [\n            1, 0, 0, 0,\n            0, 1, 0, 0,\n            0, 0, 1, 0,\n            cras[0], cras[1], cras[2], 1\n          ];\n\n        }\n      }\n\n    } catch (e) {}\n\n  }\n\n  dispose() {\n    this.isInvalid = true;\n    this.position = null;\n    this.index = null;\n  }\n\n  copy( el ) {\n    this.isInvalid = el.isInvalid;\n    this.nVertices = el.nVertices;\n    this.nFaces = el.nFaces;\n    this.position = el.position;\n    this.index = el.index;\n    this.tkrToScan = el.tkrToScan;\n    this.isSurfaceMesh = true;\n    this.isFreeSurferMesh = true;\n    return this;\n  }\n\n}\n\n\nexport { FreeSurferMesh }\n\n","import { BufferAttribute } from 'three';\nimport { min2, sub2 } from '../utils.js';\n\nclass FreeSurferNodeValues {\n\n  constructor( data ) {\n    this.isInvalid = true;\n    if( !data ) { return; }\n    const raw = data;\n\n    let reader = new DataView( data );\n    let sig0 = reader.getUint8(0);\n    let sig1 = reader.getUint8(1);\n    let sig2 = reader.getUint8(2);\n\n    if (sig0 !== 255 || sig1 !== 255 || sig2 !== 255) {\n      console.warn(\n        \"FreeSurferNodeValues: this is not a FreeSurfer curv/sulc format.\"\n      );\n    }\n\n    this.nVertices = reader.getUint32(3, false);\n    this.nFrames = reader.getUint32(11, false);\n\n    this.vertexData = new Float32Array(this.nFrames * this.nVertices);\n    this._frameData = new Float32Array(this.nVertices);\n\n    let offset = 15, buf;\n    let min = Infinity, max = -Infinity;\n    for (let i = 0; i < this.nFrames * this.nVertices; i++, offset += 4) {\n      buf = reader.getFloat32( offset, false );\n      if( min > buf ) { min = buf; }\n      if( max < buf ) { max = buf; }\n      this.vertexData[i] = buf;\n    }\n\n    this.max = max;\n    this.min = min;\n\n    this.isFreeSurferNodeValues = true;\n    this.isSurfaceMeasurement = true;\n\n    if( this.nFrames > 0 ) {\n      this.setFrame( 0 );\n    }\n\n    this.isInvalid = false;\n\n  }\n\n  setFrame( frame ) {\n    frame = parseInt( frame );\n    if( isNaN(frame) || frame < 0 || frame >= this.nFrames ) {\n      throw 'FreeSurferNodeValues: Invalid frame';\n    }\n    const offset = frame * this.nVertices;\n    for(let i = 0 ; i < this.nVertices; i++ ) {\n      this._frameData[ i ] = this.vertexData[ offset + i ];\n    }\n    return this._frameData\n  }\n\n  dispose() {\n    this.vertexData = NaN;\n    this._frameData = NaN;\n  }\n\n  copy( el ) {\n    this.isInvalid = el.isInvalid;\n    this.nVertices = el.nVertices;\n    this.nFrames = el.nFrames;\n\n    this.vertexData = el.vertexData;\n    this._frameData = el._frameData;\n\n    this.max = el.max;\n    this.min = el.min;\n\n    this.isFreeSurferNodeValues = true;\n    this.isSurfaceMeasurement = true;\n    return this;\n  }\n\n}\n\n\nexport { FreeSurferNodeValues }\n\n","import { BufferAttribute } from 'three';\nimport { min2, sub2 } from '../utils.js';\n\n// https://github.com/niivue/niivue/blob/998281a283c1e1421be96c7c63ee2a96b37fc998/src/nvmesh-loaders.ts#L1176\nfunction decimateLayerVertices(nVertLayer, nVertMesh) {\n  // downsample layer vertices if the mesh has been decimated\n  if (nVertLayer % nVertMesh === 0) {\n    return nVertLayer;\n  }\n  const V0 = 12;\n  const orderLayer = Math.round(Math.log((nVertLayer - 2) / (V0 - 2)) / Math.log(4));\n  const orderMesh = Math.round(Math.log((nVertMesh - 2) / (V0 - 2)) / Math.log(4));\n  // sanity check\n  const nVLayer = Math.pow(4, orderLayer) * (V0 - 2) + 2;\n  const nVMesh = Math.pow(4, orderMesh) * (V0 - 2) + 2;\n  if (nVLayer !== nVertLayer || nVMesh !== nVertMesh) {\n    return nVertLayer;\n  }\n  return nVertMesh;\n}\n\nfunction readANNOT(buffer, n_vert, isReadColortables = false) {\n  const view = new DataView(buffer) // ArrayBuffer to dataview\n  // ALWAYS big endian\n  const n_vertex = view.getUint32(0, false);\n  if( n_vert === undefined ) {\n    n_vert = n_vertex;\n  }\n  const n_vertexDecimated = decimateLayerVertices(n_vertex, n_vert);\n  if (n_vert !== n_vertexDecimated) {\n    throw new Error('ANNOT file has different number of vertices than mesh');\n  }\n  if (buffer.byteLength < 4 + 8 * n_vertex) {\n    throw new Error('ANNOT file smaller than specified');\n  }\n  let pos = 0;\n  // reading all floats with .slice() would be faster, but lets handle endian-ness\n  const rgba32 = new Uint32Array(n_vertex);\n  for (let i = 0; i < n_vertex; i++) {\n    const idx = view.getUint32((pos += 4), false);\n    rgba32[idx] = view.getUint32((pos += 4), false);\n  }\n  if (!isReadColortables) {\n    // only read label colors, ignore labels\n    return rgba32;\n  }\n  let tag = 0;\n  try {\n    tag = view.getInt32((pos += 4), false);\n  } catch (error) {\n    return rgba32;\n  }\n  const TAG_OLD_COLORTABLE = 1;\n  if (tag !== TAG_OLD_COLORTABLE) {\n    // undocumented old format\n    return rgba32;\n  }\n  const ctabversion = view.getInt32((pos += 4), false);\n  if (ctabversion > 0) {\n    // undocumented old format\n    return rgba32;\n  }\n  const maxstruc = view.getInt32((pos += 4), false);\n  const len = view.getInt32((pos += 4), false);\n  pos += len;\n  const num_entries = view.getInt32((pos += 4), false);\n  if (num_entries < 1) {\n    // undocumented old format\n    return rgba32;\n  }\n  // preallocate lookuptable\n  const LUT = {\n    R: Array(maxstruc).fill(0),\n    G: Array(maxstruc).fill(0),\n    B: Array(maxstruc).fill(0),\n    A: Array(maxstruc).fill(0),\n    I: Array(maxstruc).fill(0),\n    labels: Array(maxstruc).fill('')\n  };\n  for (let i = 0; i < num_entries; i++) {\n    const struc = view.getInt32((pos += 4), false);\n    const labelLen = view.getInt32((pos += 4), false);\n    pos += 4;\n    let txt = '';\n    for (let c = 0; c < labelLen; c++) {\n      const val = view.getUint8(pos++);\n      if (val === 0) {\n        break;\n      }\n      txt += String.fromCharCode(val);\n    }\n    pos -= 4;\n    const R = view.getInt32((pos += 4), false);\n    const G = view.getInt32((pos += 4), false);\n    const B = view.getInt32((pos += 4), false);\n    const A = view.getInt32((pos += 4), false);\n    if (struc < 0 || struc >= maxstruc) {\n      connsole.warn('annot entry out of range');\n      continue;\n    }\n    LUT.R[struc] = R;\n    LUT.G[struc] = G;\n    LUT.B[struc] = B;\n    LUT.A[struc] = A;\n    LUT.I[struc] = (A << 24) + (B << 16) + (G << 8) + R;\n    LUT.labels[struc] = txt;\n  }\n  const scalars = new Float32Array(n_vertex);\n  scalars.fill(-1);\n  let nError = 0;\n  for (let i = 0; i < n_vert; i++) {\n    const RGB = rgba32[i];\n    for (let c = 0; c < maxstruc; c++) {\n      if (LUT.I[c] === RGB) {\n        scalars[i] = c;\n        break;\n      }\n    } // for c\n    if (scalars[i] < 0) {\n      nError++;\n      scalars[i] = 0;\n    }\n  }\n  if (nError > 0) {\n    console.error(`annot vertex colors do not match ${nError} of ${n_vertex} vertices.`);\n  }\n  for (let i = 0; i < maxstruc; i++) {\n    LUT.I[i] = i;\n  }\n  // const colormapLabel = cmapper.makeLabelLut(LUT);\n  return {\n    scalars: scalars,\n    colormapLabel: LUT\n  };\n} // readANNOT()\n\n\n\nclass FreeSurferAnnot {\n\n  constructor( data ) {\n    this.isInvalid = true;\n    if( !data ) { return; }\n    const raw = data;\n\n    // Uint32 but should be used as uint8 RGBA\n    const rgba32 = readANNOT(data);\n\n    this.nVertices = rgba32.length;\n    // this.nFrames = 1;\n\n    this.vertexColor = new Uint8Array( rgba32.buffer );\n\n    this.isFreeSurferAnnot = true;\n    this.isSurfaceAnnotation = true;\n\n    this.isInvalid = false;\n\n  }\n\n  dispose() {\n    this.vertexColor = NaN;\n  }\n\n  copy( el ) {\n    this.isInvalid = el.isInvalid;\n    this.nVertices = el.nVertices;\n    // this.nFrames = el.nFrames;\n\n    this.vertexColor = el.vertexColor;\n\n    this.isFreeSurferAnnot = true;\n    this.isSurfaceAnnotation = true;\n\n    return this;\n  }\n\n}\n\n\nexport { FreeSurferAnnot }\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as fflate from 'fflate';\nimport { mat3, mat4, vec3, vec4 } from \"gl-matrix\"; //for trk\n\nfunction readMatV4(buffer) {\n  let len = buffer.byteLength\n  if (len < 40)\n    throw new Error(\"File too small to be MAT v4: bytes = \" + buffer.byteLength)\n  let reader = new DataView(buffer)\n  let magic = reader.getUint16(0, true)\n  let _buffer = buffer\n  if (magic === 35615 || magic === 8075) {\n    // gzip signature 0x1F8B in little and big endian\n    const raw = fflate.decompressSync(new Uint8Array(buffer))\n    reader = new DataView(raw.buffer)\n    magic = reader.getUint16(0, true)\n    _buffer = raw.buffer\n    len = _buffer.byteLength\n  }\n  const textDecoder = new TextDecoder('utf-8')\n  let bytes = new Uint8Array(_buffer)\n  let pos = 0\n  let mat = []\n  function getTensDigit(v) {\n    return (Math.floor(v/10) % 10)\n  }\n  function readArray(tagDataType, tagBytesStart, tagBytesEnd) {\n    const byteArray = new Uint8Array(bytes.subarray(tagBytesStart, tagBytesEnd))\n    if (tagDataType === 1)\n      return new Float32Array(byteArray.buffer)\n    if (tagDataType === 2)\n      return new Int32Array(byteArray.buffer)\n    if (tagDataType === 3)\n      return new Int16Array(byteArray.buffer)\n    if (tagDataType === 4)\n      return new Uint16Array(byteArray.buffer)\n    if (tagDataType === 5)\n      return new Uint8Array(byteArray.buffer)\n    return new Float64Array(byteArray.buffer)\n  }\n  function readTag() {\n    let mtype = reader.getUint32(pos, true)\n    let mrows = reader.getUint32(pos+4, true)\n    let ncols = reader.getUint32(pos+8, true)\n    let imagf = reader.getUint32(pos+12, true)\n    let namlen = reader.getUint32(pos+16, true)\n    pos+= 20; //skip header\n    if (imagf !== 0)\n      throw new Error(\"Matlab V4 reader does not support imaginary numbers\")\n    let tagArrayItems = mrows * ncols\n    if (tagArrayItems < 1)\n      throw new Error(\"mrows * ncols must be greater than one\")\n    const byteArray = new Uint8Array(bytes.subarray(pos, pos+namlen))\n    let tagName = textDecoder.decode(byteArray).trim().replaceAll('\\x00','')\n    let tagDataType = getTensDigit(mtype)\n    //0 double-precision (64-bit) floating-point numbers\n    //1 single-precision (32-bit) floating-point numbers\n    //2 32-bit signed integers\n    //3 16-bit signed integers\n    //4 16-bit unsigned integers\n    //5 8-bit unsigned integers\n    let tagBytesPerItem = 8\n    if ((tagDataType >= 1) && (tagDataType <= 2))\n      tagBytesPerItem = 4\n    else if ((tagDataType >= 3) && (tagDataType <= 4))\n      tagBytesPerItem = 2\n    else if (tagDataType === 5)\n      tagBytesPerItem = 1\n    else if (tagDataType !== 0)\n      throw new Error(\"impossible Matlab v4 datatype\")\n    pos+= namlen; //skip name\n    if (mtype > 50)\n      throw new Error(\"Does not appear to be little-endian V4 Matlab file\")\n    let posEnd = pos + (tagArrayItems * tagBytesPerItem)\n    mat[tagName] = readArray(tagDataType, pos, posEnd)\n    pos = posEnd\n  }\n  while ((pos + 20) < len)\n    readTag()\n  return mat\n} // readMatV4()\n\n// https://dsi-studio.labsolver.org/doc/cli_data.html\n// https://brain.labsolver.org/hcp_trk_atlas.html\nfunction readTT(buffer) {\n  let offsetPt0 = []\n  let pts = []\n  const mat = readMatV4(buffer);\n  if (!('trans_to_mni' in mat))\n    throw new Error(\"TT format file must have 'trans_to_mni'\")\n  if (!('voxel_size' in mat))\n    throw new Error(\"TT format file must have 'voxel_size'\")\n  if (!('track' in mat))\n    throw new Error(\"TT format file must have 'track'\")\n  let trans_to_mni = mat4.create()\n  let m = mat.trans_to_mni\n  trans_to_mni = mat4.fromValues(m[0],m[1],m[2],m[3],  m[4],m[5],m[6],m[7],  m[8],m[9],m[10],m[11],  m[12],m[13],m[14],m[15])\n  mat4.transpose(trans_to_mni, trans_to_mni)\n  let zoomMat = mat4.create()\n  zoomMat = mat4.fromValues(1 / mat.voxel_size[0],0,0,-0.5,\n        0, 1 / mat.voxel_size[1], 0, -0.5,\n        0, 0, 1 / mat.voxel_size[2], -0.5,\n        0, 0, 0, 1)\n  mat4.transpose(zoomMat, zoomMat)\n  function parse_tt(track) {\n    let dv = new DataView(track.buffer)\n    let pos = []\n    let nvert3 = 0\n    let i = 0\n    while(i < track.length) {\n      pos.push(i)\n      let newpts = dv.getUint32(i, true)\n      i = i + newpts+13\n      nvert3 += newpts\n    }\n    offsetPt0 = new Uint32Array(pos.length+1)\n    pts = new Float32Array(nvert3)\n    let npt = 0\n    for (let i = 0; i < pos.length; i++) {\n      offsetPt0[i] = npt / 3\n      let p = pos[i]\n      let sz = dv.getUint32(p, true)/3\n      let x = dv.getInt32(p+4, true)\n      let y = dv.getInt32(p+8, true)\n      let z = dv.getInt32(p+12, true)\n      p += 16\n      pts[npt++] = x\n      pts[npt++] = y\n      pts[npt++] = z\n      for (let j = 2; j <= sz; j++) {\n          x = x + dv.getInt8(p++)\n          y = y + dv.getInt8(p++)\n          z = z + dv.getInt8(p++)\n          pts[npt++] = x\n          pts[npt++] = y\n          pts[npt++] = z\n      }\n    } //for each streamline\n    for (let i = 0; i < npt; i++)\n      pts[i] = pts[i]/32.0\n    let vox2mmMat = mat4.create()\n    mat4.mul(vox2mmMat, zoomMat, trans_to_mni)\n    let v = 0\n    for (let i = 0; i < npt / 3; i++) {\n      const pos = vec4.fromValues(pts[v], pts[v+1], pts[v+2], 1)\n      vec4.transformMat4(pos, pos, vox2mmMat)\n      pts[v++] = pos[0]\n      pts[v++] = pos[1]\n      pts[v++] = pos[2]\n    }\n    offsetPt0[pos.length] = npt / 3; //solve fence post problem, offset for final streamline\n  } // parse_tt()\n  parse_tt(mat.track)\n  return {\n    points : pts,\n    cutoff : offsetPt0,\n    shape  : mat.voxel_size,\n    color  : mat.color[0],\n  }\n} // readTT()\n\n\nexport { readTT };\n","import { Vector3, Matrix4, Color } from 'three';\nimport { readTT } from './streamlineIO.js';\n\n\nclass TTTract {\n  constructor ( data ) {\n    this.isInvalid = true;\n    this.isTractography = true;\n    this.isTTTract = true;\n\n    if(!data) { return; }\n    // parse TT\n    const parsed = readTT(data);\n\n    this.shape = parsed.shape;\n\n    this.points = parsed.points;\n    this.cutoff = parsed.cutoff;\n    this.color = new Color().set(parsed.color);\n\n\n    this.isInvalid = false;\n\n  }\n\n  dispose () {\n    this.shape = undefined;\n    this.points = undefined;\n    this.cutoff = undefined;\n    this.color = undefined;\n    this.isInvalid = true;\n  }\n\n  copy( el ) {\n    this.isInvalid = el.isInvalid;\n    if(this.isInvalid) { return this; }\n\n    this.shape = el.shape;\n    this.points = el.points;\n    this.cutoff = el.cutoff;\n    this.color = new Color().copy( el.color );\n\n    this.isFiberTract = true;\n    this.isTTTract = true;\n\n    return this;\n  }\n\n}\n\nexport { TTTract }\n","import { Loader, FileLoader, LoadingManager, EventDispatcher } from 'three';\nimport { Cache } from './StorageCache.js';\nimport { workerLoaders, asyncLoaderAvailable,\n  startWorker, stopWorker } from './Workers.js';\n\nimport { parse as csvParse } from 'papaparse';\nimport { NiftiImage } from '../formats/NIfTIImage.js';\nimport { MGHImage } from '../formats/MGHImage.js';\nimport { GiftiMesh } from '../formats/GIfTIMesh.js';\nimport { STLMesh } from '../formats/STLMesh.js';\nimport { FreeSurferMesh } from '../formats/FreeSurferMesh.js';\nimport { FreeSurferNodeValues } from '../formats/FreeSurferNodeValues.js';\nimport { FreeSurferAnnot } from '../formats/FreeSurferAnnot.js';\nimport { TTTract } from '../formats/TTTract.js';\n\n\nconst debugManager = new LoadingManager();\ndebugManager.onStart = function ( url, itemsLoaded, itemsTotal ) {\n  console.debug( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\n};\ndebugManager.onLoad = function ( ) {\n  console.debug( 'Loading complete!');\n};\ndebugManager.onProgress = function ( url, itemsLoaded, itemsTotal ) {\n  console.debug( 'Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\n};\ndebugManager.onError = function ( url ) {\n  console.debug( 'There was an error loading ' + url );\n};\nconst silentManager = new LoadingManager();\nsilentManager.onStart = function ( url, itemsLoaded, itemsTotal ) { };\nsilentManager.onLoad = function ( ) { };\nsilentManager.onProgress = function ( url, itemsLoaded, itemsTotal ) { };\nsilentManager.onError = function ( url ) { };\n\nfunction simpleLoad (loader, url, postMessage, token) {\n\n  Cache.enabled = false;\n\n  loader.load(\n    url,\n    ( obj ) => {\n      postMessage({\n        token: token,\n        status: \"done\",\n        object: obj\n      })\n    },\n    ( progress ) => {\n      postMessage({\n        token: token,\n        status: \"progress\",\n        object: {\n          lengthComputable: progress.lengthComputable,\n          loaded    : progress.loaded,\n          timeStamp : progress.timeStamp,\n          total     : progress.total,\n          type      : progress.type\n        }\n      })\n    },\n    (e) => {\n      postMessage({\n        token: token,\n        status: \"error\",\n        object: e\n      })\n    }\n  );\n\n  // no return since the postMessage is done in async\n  return;\n}\n\nfunction resolveURL( url ) {\n  if( url.startsWith(\"#\") ) {\n\n    const dataElements = document.querySelectorAll(`script[data-for='${ url }']`);\n    const dataMIMEType = dataElements[0].getAttribute(\"data-type\");\n    let isPlainText = false;\n    if( dataMIMEType && dataMIMEType.length > 0 ) {\n      const dataMIMETypeLower = dataMIMEType.toLowerCase();\n      const urlLower = url.toLowerCase();\n      if(\n        dataMIMETypeLower.endsWith(\"json\") ||\n        dataMIMETypeLower.endsWith(\"csv\") ||\n        dataMIMETypeLower.endsWith(\"txt\") ||\n        dataMIMETypeLower.endsWith(\"text\") ||\n        dataMIMETypeLower.endsWith(\"plain\") ||\n        dataMIMETypeLower.endsWith(\"tsv\") ||\n        urlLower.endsWith(\"json\") ||\n        urlLower.endsWith(\"csv\") ||\n        urlLower.endsWith(\"tsv\") ||\n        urlLower.endsWith(\"txt\")\n      ) {\n        isPlainText = true;\n      }\n    }\n\n    const dataArrays = [];\n    dataElements.forEach(el => {\n        const currentPartition = parseInt( el.getAttribute(\"data-partition\") );\n        const parsedBase64 = atob( el.innerHTML.trim() );\n        if( isPlainText ) {\n          // https://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript\n          dataArrays[ currentPartition ] = parsedBase64;\n        } else {\n          const partitionSize = parseInt( el.getAttribute(\"data-parition-size\") );\n          const byteArray = new Uint8Array( partitionSize );\n          for (let index = 0; index < partitionSize; index++ ) {\n            byteArray[index] = parsedBase64.charCodeAt(index);\n          }\n          dataArrays[ currentPartition ] = byteArray;\n        }\n    })\n    const blob = new Blob(dataArrays, { type: dataMIMEType });\n    return {\n      originalUrl : url,\n      response : blob,\n      isObjectURL : true,\n    };\n  } else {\n    let absoluteURL = url;\n    try {\n      const urlSolved = new URL(url, document.baseURI);\n      absoluteURL = `${urlSolved.pathname}${ urlSolved.search }`;\n      if(!startsWith(absoluteURL, \"/\")) {\n        absoluteURL = `/${absoluteURL}`;\n      }\n    } catch (e) {}\n    return {\n      originalUrl : url,\n      resolvedUrl : absoluteURL,\n      isObjectURL : false,\n    };\n  }\n}\n\nclass BasicLoader extends Loader {\n  constructor( manager, { workerScript, logger, timeOut = 15000 } = {} ) {\n    super( manager );\n    this.workerScript = workerScript;\n    // this.mimeType = mimeType;\n    // this.responseType = \"json\";\n    this.loaderName = null\n    this.timeOut = timeOut;\n    this.debug = false;\n    if( logger ) {\n      this.logger = logger;\n    } else {\n      this.logger = console.debug;\n    }\n  }\n\n  stopWorkers() {\n    stopWorker( this.workerScript )\n      .catch(e => {});\n  }\n\n  unpack( response ) {\n    switch ( this.responseType ) {\n      case 'arraybuffer':\n        return response.arrayBuffer();\n      case 'blob':\n\t\t\t\treturn response.blob();\n\t\t\tcase 'document':\n  \t\t\treturn response.text()\n\t\t\t\t\t.then( text => {\n\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\t\t\t\t\t} );\n\t\t\tcase 'json':\n\t\t\t\treturn response.text().then(v => { return JSON.parse(v); });\n\t\t\tdefault:\n\t\t\t  return response.text();\n\t\t}\n  }\n\n  _loadURLResponse( response, url, onLoad, onProgress, onError ) {\n    this.unpack( response )\n      .then( data => {\n        try {\n          onLoad( this.parse( data ) );\n        } catch ( e ) {\n          throw e;\n        }\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t  if( onError ) {\n\t\t\t    onError( err );\n\t\t\t    this.manager.itemError( url );\n\t\t\t  } else {\n\t\t\t    this.manager.itemError( url );\n\t\t\t    throw err;\n\t\t\t  }\n\t\t\t} )\n\t\t\t.finally( () => {\n\t\t\t\tthis.manager.itemEnd( url );\n\t\t\t});\n\t\tthis.manager.itemStart( url );\n  }\n\n  load( url, onLoad, onProgress, onError ) {\n\n    let resolved;\n    try {\n      resolved = resolveURL( url );\n    } catch (e) {\n      if ( onError ) {\n        onError( e );\n      } else {\n        console.error( e );\n      }\n      this.manager.itemError( url );\n      return;\n    }\n\n    if( resolved.isObjectURL ) {\n      this._loadURLResponse( resolved.response, url, onLoad, onProgress, onError );\n  \t\treturn;\n    }\n\n    const scope = this;\n    const loader = new FileLoader( this.manager );\n    loader.setPath( this.path );\n    loader.setRequestHeader( this.requestHeader );\n    loader.setWithCredentials( this.withCredentials );\n    loader.setResponseType( this.responseType );\n    loader.setMimeType( this.mimeType );\n\n    loader.load( resolved.resolvedUrl, function ( data ) {\n\n      try {\n        onLoad( scope.parse( data ) );\n      } catch ( e ) {\n        if ( onError ) {\n          onError( e );\n        } else {\n          console.error( e );\n        }\n        scope.manager.itemError( url );\n      }\n\n    }, onProgress, onError);\n  }\n\n  loadAsync( url, onProgress ) {\n    const scope = this;\n\n    return new Promise( function ( resolve, reject ) {\n      let resolved;\n      try {\n        resolved = resolveURL( url );\n      } catch (e) {\n        reject(e);\n        return;\n      }\n      const onProgress2 = (p) => {\n        try {\n          if( onProgress ) {\n            onProgress(p);\n          }\n        } catch (e) {\n          reject(e);\n        }\n      };\n      if( resolved.isObjectURL ) {\n        scope._loadURLResponse( resolved.response, url, resolve, onProgress2, reject );\n        return;\n      }\n\n      // check if window.Worker is available\n      const workerParams = asyncLoaderAvailable( scope.loaderName, scope.workerScript );\n      if( workerParams === false ) {\n        scope.load( resolved.resolvedUrl, resolve, onProgress2, reject );\n        return;\n      }\n\n      // try to use workers instead of main thread\n      startWorker( scope.workerScript, {\n        methodNames : workerParams,\n        timeOut : scope.timeOut,\n        logger: scope.logger,\n        args : { url : resolved.resolvedUrl, mimeType: scope.mimeType },\n        onProgress: onProgress2 })\n      .then(data => {\n        resolve( data );\n      })\n      .catch((e) => {\n        scope.logger(e);\n        scope.logger(\"Unable to resolve parallel worker (see warning above). Trying to use regular loader: \" + (resolved.resolvedUrl ?? url));\n        scope.load( resolved.resolvedUrl, (v) => {\n          scope.logger(\"Successfully retrieved via synchronus loader: \" + resolved.resolvedUrl);\n          resolve(v);\n        }, onProgress2, reject );\n      })\n      .catch(reject);\n    });\n  }\n\n  copyData( el ) {\n    return el;\n  }\n}\n\nclass JSONLoader extends BasicLoader {\n\n  responseType = 'json';\n  loaderName = 'JSONLoader';\n\n  parse( json ) {\n    return json;\n  }\n}\n\nclass CSVLoader extends BasicLoader {\n\n  responseType = 'csv';\n  loaderName = 'CSVLoader';\n  mimeType = undefined; // so text string is returned\n\n  parse( csv, config ) {\n    return csvParse( csv, {\n      header: true,\n      dynamicTyping: true,\n    }).data;\n  }\n}\n\n\nclass TypedLoader extends BasicLoader {\n\n  classType = undefined;\n\n  parse( data ) {\n    if( this.classType === undefined ) {\n      throw new Error(\"TypedLoader: please implement this.classType\");\n    }\n    return new this.classType( data );\n  }\n\n  copyData( el ) {\n    if( this.classType === undefined ) {\n      throw new Error(\"TypedLoader: please implement this.classType\");\n    }\n    return new this.classType().copy( el );\n  }\n}\n\nclass NiftiLoader extends TypedLoader {\n  responseType = \"arraybuffer\";\n  loaderName = \"NiftiLoader\";\n  classType = NiftiImage;\n}\n\nclass STLLoader2 extends TypedLoader {\n  responseType = \"arraybuffer\";\n  loaderName = \"STLLoader2\";\n  classType = STLMesh;\n}\n\nclass TTLoader extends TypedLoader {\n  responseType = \"arraybuffer\";\n  loaderName = \"TTLoader\";\n  classType = TTTract;\n}\n\nclass MGHLoader extends TypedLoader {\n  responseType = \"arraybuffer\";\n  loaderName = \"MGHLoader\";\n  classType = MGHImage;\n}\n\nclass GiftiLoader extends TypedLoader {\n  responseType = \"text\";\n  loaderName = \"GiftiLoader\";\n  mimeType = undefined; // so text string is returned\n  classType = GiftiMesh;\n}\n\nclass FreeSurferMeshLoader extends TypedLoader {\n  responseType = \"arraybuffer\";\n  loaderName = \"FreeSurferMeshLoader\";\n  classType = FreeSurferMesh;\n}\n\nclass FreeSurferNodeLoader extends TypedLoader {\n  responseType = \"arraybuffer\";\n  loaderName = \"FreeSurferNodeLoader\";\n  classType = FreeSurferNodeValues;\n}\n\nclass FreeSurferAnnotLoader extends TypedLoader {\n  responseType = \"arraybuffer\";\n  loaderName = \"FreeSurferAnnotLoader\";\n  classType = FreeSurferAnnot;\n}\n\nconst loaderClasses = {\n  \"JSONLoader\"  : JSONLoader,\n  \"CSVLoader\"   : CSVLoader,\n  \"NiftiLoader\" : NiftiLoader,\n  \"STLLoader2\"  : STLLoader2,\n  \"MGHLoader\"   : MGHLoader,\n  \"GiftiLoader\" : GiftiLoader,\n  \"FreeSurferMeshLoader\": FreeSurferMeshLoader,\n  \"FreeSurferNodeLoader\": FreeSurferNodeLoader,\n  \"FreeSurferAnnotLoader\": FreeSurferAnnotLoader,\n  \"TTLoader\"    : TTLoader,\n}\n\nfor(let loaderType in loaderClasses) {\n  const Cls = loaderClasses[ loaderType ];\n  const simpleLoader = function({ url, mimeType } = {}, postMessage, token) {\n    const loader = new Cls( silentManager );\n    if( mimeType ) {\n      loader.mimeType = mimeType;\n    }\n    simpleLoad(loader, url, postMessage, token);\n  }\n  simpleLoader._workerCallable = true;\n  workerLoaders[ loaderType ] = simpleLoader;\n}\n\nfunction guessLoaderType( url ) {\n  const urlLowerCase = url.toLowerCase();\n  let loaderType;\n  if( urlLowerCase.endsWith(\"nii\") || urlLowerCase.endsWith(\"nii.gz\") ) {\n    loaderType = \"NiftiLoader\";\n  } else if ( urlLowerCase.endsWith(\"mgh\") || urlLowerCase.endsWith(\"mgz\") ) {\n    loaderType = \"MGHLoader\";\n  } else if ( urlLowerCase.endsWith(\"gii\") || urlLowerCase.endsWith(\"gii.gz\") ) {\n    loaderType = \"GiftiLoader\";\n  } else if ( urlLowerCase.endsWith(\"sulc\") || urlLowerCase.endsWith(\"curv\") ) {\n    loaderType = \"FreeSurferNodeLoader\";\n  } else if ( urlLowerCase.endsWith(\"annot\") ) {\n    loaderType = \"FreeSurferAnnotLoader\";\n  } else if ( urlLowerCase.endsWith(\"json\") ) {\n    loaderType = \"JSONLoader\";\n  } else if ( urlLowerCase.endsWith(\"csv\") || urlLowerCase.endsWith(\"tsv\") ) {\n    loaderType = \"CSVLoader\";\n  } else if ( urlLowerCase.endsWith(\"stl\") ) {\n    loaderType = \"STLLoader2\";\n  } else if ( urlLowerCase.endsWith(\"tt\") || urlLowerCase.endsWith(\"tt.gz\") ) {\n    loaderType = \"TTLoader\";\n  } else {\n    loaderType = \"FreeSurferMeshLoader\";\n  }\n  return loaderType;\n}\n\nclass CanvasFileLoader2 extends Loader {\n  constructor( { workerScript, logger, maxTimeOut = 15000  } = {} ) {\n    super( new LoadingManager() );\n    this.workerScript = workerScript;\n    this.maxTimeOut = maxTimeOut;\n    this.debug = false;\n    this.logger = logger;\n    // keep a flag. If the flag mismatch, then no need to load\n    this.flag = 0;\n    this.cacheEnabled = true;\n    /*\n    this.manager.onStart = function ( url, itemsLoaded, itemsTotal )\n    debugManager.onLoad = function ( )\n    debugManager.onProgress = function ( url, itemsLoaded, itemsTotal )\n    debugManager.onError = function ( url )\n    */\n  }\n\n  setCacheEnabled( enabled ) {\n    if( enabled ) {\n      this.cacheEnabled = true;\n    } else {\n      Cache.clear();\n      this.cacheEnabled = false;\n    }\n  }\n\n  alterFlag() {\n    this.flag++;\n    if( this.flag > 4096 ) {\n      this.flag = 0;\n    }\n  }\n\n  stopWorkers() {\n    stopWorker( this.workerScript )\n      .catch(e => {});\n  }\n\n  load( url, onLoad, onProgress, onError ) {\n    const currentFlag = this.flag;\n    const loaderType = guessLoaderType( url );\n    if( loaderType === undefined ) {\n      onError(new Error(`Unknown format for file: ${ url }`));\n      return;\n    }\n    const loaderCls = loaderClasses[ loaderType ];\n    const loader = new loaderCls( this.manager, {\n      logger: this.logger,\n    } );\n    loader.debug = this.debug;\n\n    Cache.enabled = this.cacheEnabled;\n    loader.load( url, (data) => {\n      if( currentFlag !== this.flag ) {\n        onError(new Error(\"Loader flag changed.\"));\n        return;\n      }\n      onLoad( this.parse({\n        data: data,\n        loaderType: loaderType,\n      }) );\n    }, onProgress, onError );\n  }\n\n  loadFromResponse ( response, altType ) {\n    return new Promise((resolve, reject) => {\n      const loaderType = guessLoaderType( response.name ) || guessLoaderType( altType );\n      if( loaderType === undefined ) {\n        const err = new Error(`Unknown format for file: ${ response.name }`);\n        reject( err );\n        return;\n      }\n      const loaderCls = loaderClasses[ loaderType ];\n      const loader = new loaderCls( this.manager, {\n        logger: this.logger,\n      });\n\n      let p;\n      switch ( loader.responseType ) {\n  \t\t\tcase 'arraybuffer':\n  \t\t\t\tp = response.arrayBuffer();\n  \t\t\t\tbreak;\n  \t\t\tcase 'blob':\n  \t\t\t\tp = response.blob();\n  \t\t\t\tbreak;\n  \t\t\tcase 'document':\n  \t\t\t  p = response.text()\n  \t\t\t\t\t.then( text => {\n  \t\t\t\t\t\tconst parser = new DOMParser();\n  \t\t\t\t\t\treturn parser.parseFromString( text, loader.mimeType );\n  \t\t\t\t\t});\n  \t\t\t\tbreak;\n  \t\t\tcase 'json':\n  \t\t\t  p = response.text().then(JSON.parse);\n  \t\t\t  break;\n  \t\t\tdefault:\n  \t\t\t  p = response.text();\n  \t\t};\n  \t\tp.then(data => {\n  \t\t  resolve( loader.parse( data ) );\n  \t\t})\n  \t\t.catch(reject);\n\n    });\n\n  }\n\n  loadAsync( url, onProgress ) {\n    const currentFlag = this.flag;\n    const loaderType = guessLoaderType( url );\n    if( loaderType === undefined ) {\n      onError(new Error(`Unknown format for file: ${ url }`));\n      return;\n    }\n    const loaderCls = loaderClasses[ loaderType ];\n    const loader = new loaderCls( this.manager, {\n      workerScript: this.workerScript ,\n      logger: this.logger,\n    });\n    loader.debug = this.debug;\n    loader.timeOut = this.maxTimeOut;\n\n    Cache.enabled = this.cacheEnabled;\n    const p = loader.loadAsync(\n      url,\n      progress => {\n        if( currentFlag !== this.flag ) {\n          throw new Error(\"Loader flag changed.\");\n        }\n        if( onProgress ) {\n          onProgress( progress );\n        }\n      }\n    )\n    .then( data => {\n      if( currentFlag !== this.flag ) {\n        throw new Error(\"Loader flag changed.\");\n      }\n      return this.parse({\n        data: data,\n        loaderType: loaderType,\n        isAsync: true\n      })\n    });\n\n    return p;\n  }\n\n  parse( data ) {\n    if( data.loaderType === \"JSONLoader\" ) {\n      return data.data;\n    } else {\n      if( data.isAsync ) {\n        const content = data.data;\n        const loaderCls = loaderClasses[ data.loaderType ];\n        if( loaderCls === undefined ) {\n          return { \"_originalData_\": content };\n        }\n        return { \"_originalData_\": new loaderCls().copyData( content ) };\n      } else {\n        return {\n          \"_originalData_\": data.data\n        };\n      }\n    }\n  }\n\n}\n\nexport { loaderClasses, debugManager, silentManager, CanvasFileLoader2, resolveURL, Cache, workerLoaders };\n","/**\n * @Author: Zhengjia Wang\n * Adapter of model (threejs_scene) and viewer (htmlwidgets)\n */\n\n\n// Formats\nimport { workerLoaders } from './core/DataLoaders.js';\n\n\nasync function workerListener (event) {\n  const methodNames = event.data.methodNames;\n  const args = event.data.args;\n  const token = event.data.token;\n\n  if ( !Array.isArray(methodNames) ) {\n    throw new TypeError(`Invalid method names: ${methodNames}. Must be an array`);\n  }\n  let method = { workerLoaders : workerLoaders };\n  methodNames.forEach((name) => {\n    method = method[ name ];\n    if( method === undefined ) {\n      throw new TypeError(`Cannot find object: threeBrain.${methodNames.join(\".\")}`);\n    }\n  })\n  if( typeof method !== \"function\" ) {\n    throw new TypeError(`Object threeBrain.${methodNames.join(\".\")} is not a function. Abort.`);\n  }\n  if( !method._workerCallable ) {\n    throw new TypeError(`Method threeBrain.${methodNames.join(\".\")} is not a worker-callable function.`);\n  }\n\n  postMessage({\n    token: token,\n    status: \"started\"\n  });\n\n  const re = method(args, postMessage, token);\n\n  postMessage({\n    token: token,\n    status: \"scheduled\",\n    object: re\n  });\n}\n\nonmessage = (event) => {\n  workerListener(event);\n};\n\nexport { workerListener };\n"],"names":["root","factory","exports","module","define","amd","this","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","Base64Binary","_keyStr","decodeArrayBuffer","lkey1","charAt","lkey2","ab","decode","arrayBuffer","uarray","chr1","chr2","chr3","enc2","enc3","enc4","gifti","Transform","fflate","NIFTI_INTENT_GENMATRIX","NIFTI_INTENT_LABEL","NIFTI_INTENT_NODE_INDEX","NIFTI_INTENT_POINTSET","NIFTI_INTENT_RGB_VECTOR","NIFTI_INTENT_RGBA_VECTOR","NIFTI_INTENT_SHAPE","NIFTI_INTENT_TIME_SERIES","NIFTI_INTENT_TRIANGLE","NIFTI_INTENT_NONE","NIFTI_INTENT_VECTOR","ATT_ARRAYINDEXINGORDER","ATT_DATATYPE","ATT_DIMENSIONALITY","ATT_DIMN","ATT_ENCODING","ATT_ENDIAN","ATT_EXTERNALFILENAME","ATT_EXTERNALFILEOFFSET","ATT_INTENT","ENCODING_ASCII","ENCODING_BASE64BINARY","ENCODING_GZIPBASE64BINARY","ENCODING_EXTERNALFILEBINARY","TYPE_NIFTI_TYPE_UINT8","TYPE_NIFTI_TYPE_INT32","TYPE_NIFTI_TYPE_FLOAT32","DataArray","attributes","metadata","transforms","dataConverted","isPointSet","isTriangles","isNormals","isColors","getDimensions","getNumElements","dimIndex","isScalar","isTriple","isQuad","isAscii","isBase64Binary","isGzipBase64Binary","isBase64Encoded","isFloat32","isInt32","isUnsignedInt8","getData","readUnsignedInt8ASCII","readSignedInt32ASCII","readFloat32ASCII","readUnsignedInt8Base64","readSignedInt32Base64","readFloat32Base64","readUnsignedInt8GZIPBase64","readSignedInt32GZIPBase64","readFloat32GZIPBase64","getDataAsync","onProgress","onFinish","readUnsignedInt8GZIPBase64Async","readSignedInt32GZIPBase64Async","readFloat32GZIPBase64Async","Float32Array","match","map","v","parseFloat","Int32Array","rawData","decompressSync","inflator","Inflate","onFinished","result","setTimeout","readNext","index","finished","Utils","Label","sax","TAG_TRANSFORM","TAG_DATA","TAG_DATAARRAY","TAG_DATASPACE","TAG_GIFTI","TAG_LABEL","TAG_LABELTABLE","TAG_MATRIXDATA","TAG_METADATA","TAG_MD","TAG_NAME","TAG_TRANSFORMEDSPACE","TAG_VALUE","GIFTI","dataArrays","labelTable","getPointsDataArray","ctr","getTrianglesDataArray","getNormalsDataArray","getColorsDataArray","getNumPoints","getNumTriangles","isThisFormat","filename","parse","xmlStr","parser","gii","currentDataArray","currentMetadataHolder","currentMetadataName","currentMetadataValue","currentTransform","currentString","currentLabel","isReadingName","isReadingValue","isReadingDataSpace","isReadingTransformedSpace","isReadingMatrixData","isReadingData","isReadingLabel","onopentag","node","ontext","oncdata","text","onclosetag","tagName","label","key","dataSpace","transformedSpace","matrixData","onerror","log","close","ATT_KEY","ATT_RED","ATT_GREEN","ATT_BLUE","ATT_ALPHA","ATT_INDEX","r","g","crcTable","makeCRCTable","k","crc32","dataView","crc","getUint8","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","LN2","nifti","NIFTI1","NIFTI2","pako","isNIFTI1","mag1","mag2","mag3","STANDARD_HEADER_SIZE","DataView","MAGIC_NUMBER_LOCATION","MAGIC_NUMBER","isNIFTI2","isNIFTI","isCompressed","magicCookie1","magicCookie2","GUNZIP_MAGIC_COOKIE1","GUNZIP_MAGIC_COOKIE2","decompress","inflate","readHeader","header","hasExtension","extensionFlag","readImage","imageOffset","vox_offset","timeDim","statDim","dims","imageSize","numBitsPerVoxel","readExtension","loc","getExtensionLocation","extensionSize","readExtensionData","dim_info","intent_p1","intent_p2","intent_p3","intent_code","datatypeCode","slice_start","slice_end","slice_code","pixDims","scl_slope","scl_inter","xyzt_units","cal_max","cal_min","slice_duration","toffset","description","aux_file","intent_name","qform_code","sform_code","quatern_b","quatern_c","quatern_d","qoffset_x","qoffset_y","qoffset_z","affine","magic","isHDR","extensionCode","TYPE_NONE","TYPE_BINARY","TYPE_UINT8","TYPE_INT16","TYPE_INT32","TYPE_FLOAT32","TYPE_COMPLEX64","TYPE_FLOAT64","TYPE_RGB24","TYPE_INT8","TYPE_UINT16","TYPE_UINT32","TYPE_INT64","TYPE_UINT64","TYPE_FLOAT128","TYPE_COMPLEX128","TYPE_COMPLEX256","XFORM_UNKNOWN","XFORM_SCANNER_ANAT","XFORM_ALIGNED_ANAT","XFORM_TALAIRACH","XFORM_MNI_152","SPATIAL_UNITS_MASK","TEMPORAL_UNITS_MASK","UNITS_UNKNOWN","UNITS_METER","UNITS_MM","UNITS_MICRON","UNITS_SEC","UNITS_MSEC","UNITS_USEC","UNITS_HZ","UNITS_PPM","UNITS_RADS","MAGIC_COOKIE","MAGIC_NUMBER2","EXTENSION_HEADER_SIZE","ctrOut","ctrIn","magicCookieVal","getIntAt","getByteAt","getShortAt","getFloatAt","getStringAt","getExtensionSize","getExtensionCode","toFormattedString","fmt","formatNumber","getDatatypeCodeString","getUnitsCodeString","getTransformCodeString","getQformMat","convertNiftiQFormToNiftiSForm","qb","qc","qd","qx","qy","qz","dx","dy","dz","qfac","xd","yd","zd","R","sqrt","convertNiftiSFormToNEMA","xi","xj","xk","yi","yj","yk","zi","zj","zk","detQ","p","q","ibest","jbest","kbest","pbest","qbest","rbest","M","vbest","Q","P","iChar","jChar","kChar","iSense","jSense","kSense","nifti_mat33_determ","nifti_mat33_mul","A","B","C","r11","r12","r13","r21","r22","r23","r31","r32","r33","getLongAt","getDoubleAt","ch","getInt8","getInt16","getInt32","getFloat32","getFloat64","toArrayBuffer","view","isString","shortFormat","toPrecision","Deflate","deflate","deflateRaw","gzip","inflateRaw","ungzip","constants","zlib_deflate","utils","strings","ZStream","Z_NO_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_DEFAULT_COMPRESSION","Z_DEFAULT_STRATEGY","Z_DEFLATED","options","assign","level","method","chunkSize","windowBits","memLevel","strategy","opt","raw","err","ended","chunks","strm","avail_out","status","deflateInit2","deflateSetHeader","dictionary","dict","string2buf","deflateSetDictionary","_dict_set","deflator","flush_mode","_flush_mode","next_in","avail_in","next_out","onData","deflateEnd","onEnd","chunk","flattenChunks","zlib_inflate","GZheader","Z_NEED_DICT","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","to","inflateInit2","inflateGetHeader","inflateSetDictionary","last_avail_out","state","wrap","inflateReset","next_out_utf8","utf8border","tail","utf8str","buf2string","inflateEnd","_has","hasOwnProperty","sources","source","shift","l","STR_APPLY_UIA_OK","__","_utf8len","TextEncoder","encode","c2","m_pos","str_len","buf_len","TextDecoder","utf16buf","c_len","buf2binstring","adler","s1","s2","Z_PARTIAL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_BINARY","Z_TEXT","Z_UNKNOWN","Uint32Array","makeTable","t","_tr_init","_tr_stored_block","_tr_flush_block","_tr_tally","_tr_align","adler32","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","rank","f","zero","slide_hash","wsize","w_size","hash_size","head","prev","HASH","hash_shift","hash_mask","flush_pending","pending","pending_buf","pending_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","_win","window","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","insert","ins_h","deflate_stored","flush","left","have","min_block","pending_buf_size","used","bi_valid","matches","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","sym_next","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","Uint16Array","HEAP_SIZE","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","MAX_BITS","heap","heap_len","heap_max","depth","sym_buf","lit_bufsize","sym_end","opt_len","static_len","bi_buf","deflateStateCheck","deflateResetKeep","data_type","deflateReset","deflateInit","old_flush","level_flags","hcrc","extra","comment","time","os","beg","gzhead_extra","bstate","deflate_huff","deflate_rle","dictLength","tmpDict","avail","next","deflateInfo","xflags","extra_len","done","BAD","_in","_out","dmax","whave","wnext","s_window","hold","bits","lcode","dcode","lmask","dmask","here","op","dist","from_source","lencode","distcode","lenbits","distbits","top","dolen","mode","sane","inflate_fast","inflate_table","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","MEM","zswap32","InflateState","havedict","flags","check","total","wbits","ncode","nlen","ndist","work","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","inflateReset2","lenfix","distfix","virgin","fixedtables","updatewindow","inflateInit","put","here_bits","here_op","here_val","last_bits","last_op","last_val","hbuf","opts","order","inf_leave","dictid","inflateInfo","MAXBITS","lbase","lext","dbase","dext","lens_index","codes","table_index","incr","low","mask","curr","drop","huff","base","count","offs","LITERALS","L_CODES","D_CODES","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","w","send_bits","send_code","tree","bi_reverse","gen_codes","next_code","init_block","END_BLOCK","bi_windup","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","sx","build_tree","desc","stree","h","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","stored_len","LENGTH_CODES","tr_static_init","opt_lenb","static_lenb","max_blindex","block_mask","detect_data_type","BL_CODES","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","STATIC_TREES","bi_flush","self","document","postMessage","o","IS_PAPA_WORKER","u","dynamicTyping","J","dynamicTypingFunction","transform","worker","WORKERS_SUPPORTED","URL","webkitURL","BLOB_URL","createObjectURL","Blob","Worker","onmessage","_","id","userStep","step","userChunk","userComplete","complete","userError","config","workerId","NODE_STREAM_INPUT","download","readable","on","File","stream","unparse","delimiter","BAD_DELIMITERS","filter","quotes","skipEmptyLines","newline","quoteChar","columns","escapeChar","escapeFormulae","RegExp","JSON","keys","fields","meta","Date","stringify","test","RECORD_SEP","UNIT_SEP","BYTE_ORDER_MARK","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","jQuery","each","prop","toUpperCase","attr","FileReader","files","file","inputElem","instanceConfig","extend","before","action","reason","splice","_handle","_finished","_completed","_halted","_input","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","streamer","_config","parseChunk","beforeFirstChunk","paused","aborted","cursor","substring","preview","results","WORKER_ID","_sendError","_readChunk","_chunkLoaded","XMLHttpRequest","withCredentials","onload","_chunkError","open","downloadRequestBody","downloadRequestHeaders","setRequestHeader","send","readyState","responseText","getResponseHeader","statusText","webkitSlice","mozSlice","FileReaderSync","readAsText","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","removeListener","abort","forEach","transformHeader","row","comments","successful","bestDelimiter","delimitersToGuess","getCharIndex","z","U","N","fastMode","K","W","H","L","I","F","S","D","T","O","linebreak","truncated","terminate","create","copyProps","SafeBuffer","strict","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","Stream","buffers","clearBuffers","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","tag","noscript","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","xmlns","ns","rootNS","trackPosition","position","line","column","emit","EVENTS","BEGIN_WHITESPACE","beginWhiteSpace","TEXT","starti","textNode","isWhitespace","strictFail","TEXT_ENTITY","OPEN_WAKA","startTagPosition","SCRIPT","SCRIPT_ENDING","script","CLOSE_TAG","SGML_DECL","sgmlDecl","isMatch","nameStart","OPEN_TAG","PROC_INST","procInstName","procInstBody","pad","CDATA","emitNode","cdata","COMMENT","DOCTYPE","doctype","isQuote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","textopts","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","body","nameBody","newTag","openTag","OPEN_TAG_SLASH","ATTRIB","closeTag","attribName","attribValue","ATTRIB_NAME","ATTRIB_VALUE","attrib","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","isAttribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","notMatch","returnState","unparsedEntities","parsedEntity","parseEntity","entity","entityBody","entityStart","maxAllowed","maxActual","closeText","checkBufferLength","ex","streamWraps","ev","_parser","me","onend","er","_decoder","removeAllListeners","SD","handler","args","XML_NAMESPACE","XMLNS_NAMESPACE","xml","regex","stringFromCharCode","fromCodePoint","STATE","COMMENT_STARTING","event","nodeType","normalize","parent","qname","attribute","qualName","prefix","local","qn","selfClosing","uri","nv","isSelfClosing","closeTo","pop","entityLC","numStr","highSurrogate","lowSurrogate","codeUnits","StringDecoder","nb","enc","nenc","retried","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","utf8CheckIncomplete","node_worker_1","u8","u16","u32","fleb","fdeb","clim","freb","eb","_a","fl","revfl","_b","fd","revfd","rev","hMap","cd","mb","co","le","rvb","sv","r_1","flt","fdt","flm","flrm","fdm","fdrm","bits16","shft","slc","BYTES_PER_ELEMENT","FlateErrorCode","UnexpectedEOF","InvalidBlockType","InvalidLengthLiteral","InvalidDistance","StreamFinished","NoStreamHandler","InvalidHeader","NoCallback","InvalidUTF8","ExtraFieldTooLong","InvalidDate","FilenameTooLong","StreamFinishing","InvalidZipData","UnknownCompressionMethod","ec","ind","nt","captureStackTrace","inflt","dat","st","sl","noBuf","noSt","cbuf","bl","nbuf","final","bt","lm","dm","lbt","dbt","tbts","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","lpos","add","dsym","wbits16","hTree","t2","et","sort","i0","i1","i2","maxSym","tr","mbt","ln","lft","cst","i2_1","i2_2","i2_3","cl","cli","cln","cls","clen","cf","wfblk","wblk","syms","lf","df","li","bs","dlt","mlb","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","ll","dl","flen","ftlen","dtlen","llm","lcts","it","clct","deo","dflt","lvl","plvl","pre","post","lst","ceil","msk_1","bs1_1","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","maxd","ml","nl","mmd","md","ti","lin","din","crct","cr","dopt","mem","mrg","wcln","fnStr","td","ks","st_1","spInd","wrkr","fns","init","cb","td_1","cbfs","bInflt","inflateSync","pbf","gu8","bDflt","deflateSync","gze","gzh","gzhl","wbytes","guze","gzs","gzl","zle","zlh","zule","zlv","cbify","consume","astrm","ondata","astrmify","b2","b4","b8","mtime","now","flg","zs","lv","AsyncCmpStrm","AsyncDeflate","bts","AsyncInflate","Gzip","Compress","AsyncGzip","gzipSync","AsyncCompress","compress","compressSync","Gunzip","AsyncGunzip","gunzip","gunzipSync","Zlib","AsyncZlib","zlibSync","zlib","Unzlib","AsyncUnzlib","unzlib","unzlibSync","Decompress","G","Z","_this_1","AsyncDecompress","fltn","te","tds","dutf8","DecodeUTF8","np","EncodeUTF8","strToU8","latin1","ar_1","ar","ai","strFromU8","dbf","slzh","zh","fnl","es","z64e","sc","su","off","exfl","wzh","ce","col","exl","flag","compression","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","attrs","exf","wzf","ZipPassThrough","process","ZipDeflate","AsyncZipDeflate","Zip","fl_1","com","hl_1","chks_1","pAll_1","_i","chks_2","chk","tr_1","ind_1","uf_1","nxt","cl_1","dd","zip","tot","slft","term","tAll","cbd","mt","cbf","oe","cdl","badd","_loop_1","ms","cbl","zipSync","UnzipPassThrough","UnzipInflate","AsyncUnzipInflate","sz","Unzip","onfile","toAdd","is","oc","_loop_2","sig","this_1","bf","cmp_1","chks_3","unshift","d_1","sc_1","su_1","fn_1","file_1","chks_4","originalSize","register","decoder","queueMicrotask","unzip","ze","fltr","_loop_3","c_1","no","infl","unzipSync","c_2","ch2","transfer","ed","$e$","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","toStringTag","REVISION","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","AddEquation","SubtractEquation","ReverseSubtractEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","UnsignedByteType","ShortType","UnsignedShortType","IntType","FloatType","HalfFloatType","UnsignedInt248Type","RGBAFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGBA_BPTC_Format","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","sRGBEncoding","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","KeepStencilOp","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","listeners","hasEventListener","removeEventListener","listenerArray","dispatchEvent","_lut","DEG2RAD","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","clamp","euclideanModulo","lerp","isPowerOfTwo","floorPowerOfTwo","denormalize","Int16Array","Int8Array","round","Vector2","isVector2","width","height","setScalar","scalar","setX","setY","setComponent","getComponent","clone","addScalar","addVectors","addScaledVector","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","fromArray","toArray","fromBufferAttribute","getX","getY","rotateAround","center","cos","sin","iterator","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","identity","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","Uint8ClampedArray","Float64Array","createElementNS","createCanvasElement","canvas","style","display","_cache","warnOnce","warn","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","HTMLCanvasElement","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","_sourceId","Source","isSource","uuid","version","needsUpdate","isRootObject","images","url","isDataTexture","serializeImage","_textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","isTexture","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","textures","generator","dispose","transformUv","uv","Vector4","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","RenderTarget","isRenderTarget","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","depthTexture","samples","texture","setSize","WebGLRenderTarget","isWebGLRenderTarget","DataArrayTexture","isDataArrayTexture","wrapR","Data3DTexture","isData3DTexture","Quaternion","isQuaternion","_x","_y","_z","_w","slerpFlat","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","sqrSin","EPSILON","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","rotateTowards","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","setFromColor","randomDirection","Box3","isBox3","setFromArray","makeEmpty","il","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","b1","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","de","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","right","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$1","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","Layers","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","isObject3D","DEFAULT_UP","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","remove","removeFromParent","clear","attach","getObjectById","getObjectByProperty","getObjectByName","getObjectsByProperty","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","child","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","serialize","library","element","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","p3","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","setFromPointsAndIndices","setFromAttributeAndIndices","getArea","getMidpoint","getPlane","setFromCoplanarPoints","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","exec","components","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","NAMES","_materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","isMeshBasicMaterial","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","updateRange","setUsage","addUpdateRange","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Uint16BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","_id$2","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","group","tmp2","n2","handleVertex","computeVertexNormals","normalAttribute","pA","pB","pC","nA","nB","nC","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","ShaderMaterial","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","clipCullDistance","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","cloneUniformsGroups","Camera","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","renderTarget","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","scene","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","WeakMap","deleteBuffer","delete","bufferType","cached","bytesPerElement","elementSize","bindBuffer","bufferData","FLOAT","isFloat16BufferAttribute","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bufferSubData","updateBuffer","PlaneGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","objects","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","location","cachedAttribute","geometryAttribute","saveCache","ELEMENT_ARRAY_BUFFER","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","setMode","drawArrays","renderInstances","primcount","methodName","renderMultiDraw","starts","counts","drawCount","multiDrawArraysWEBGL","elementCount","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","numPlanes","numIntersection","enableLocalClipping","beginShadows","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","onTextureDispose","cubemap","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","sizeLods","lodPlanes","sigmas","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","_createPlanes","weights","poleAxis","shaderMaterial","_getCommonVertexShader","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","sum","weight","exp","outputSize","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","cubemapUV","isEquirectMap","isCubeMap","isCubeTextureComplete","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","multiDrawElementsWEBGL","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","MAX_SAFE_INTEGER","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","buffergeometry","DepthTexture","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","getShaderErrors","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","errorMatches","errorLine","lines2","handleSource","getShaderSource","getTexelEncodingFunction","functionName","workingPrimaries","encodingPrimaries","gamutMapping","getEncodingComponents","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","envMapCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","generateCubeUVSize","customExtensions","extensionDerivatives","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","generateExtensions","customVertexExtensions","extensionClipCullDistance","generateVertexExtensions","customDefines","generateDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","onFirstUse","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","deleteShader","cachedUniforms","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","fetchAttributeLocations","attachShader","bindAttribLocation","linkProgram","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","morphAttributeCount","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderStateArray","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","renderObject","shadowCamera","kl","depthMaterial","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","isPointLightShadow","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage2D","RGBA","texImage3D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","factor","POLYGON_OFFSET_FILL","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","isWebGLMultipleRenderTargets","COLOR_ATTACHMENT0","drawBuffersWEBGL","useProgram","setMaterial","frontFaceCW","SAMPLE_ALPHA_TO_COVERAGE","setLineWidth","lineWidth","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","texStorage2D","texStorage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","deallocateTexture","onRenderTargetDispose","renderTargetProperties","__webglTexture","__webglFramebuffer","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","deallocateRenderTarget","textureUnits","slot","updateVideoTexture","__version","uploadTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","getTextureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","textureNeedsPowerOfTwo","verifyColorSpace","mipmap","glInternalFormat","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthRenderbuffer","isCube","__autoAllocateDepthBuffer","webglDepthTexture","setupDepthTexture","createRenderbuffer","__useRenderToTexture","textureUnit","resetTextureUnits","cubeImage","mipmapImage","uploadCubeTexture","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","isWebGL3DRenderTarget","isWebGLArrayRenderTarget","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","jointPose","getJointPose","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","WebXRManager","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","onSessionEvent","controllerIndex","controller","onSessionEnd","onInputSourcesChange","isPresenting","setPixelRatio","removed","added","cameraAutoUpdate","getController","getControllerGrip","getHand","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","async","xrCompatible","makeXRCompatible","getPixelRatio","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","depthType","glDepthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshUniformsCommon","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","hasUniformChanged","indexArray","indexString","cachedObject","getUniformSize","boundary","storage","onUniformsGroupsDispose","bind","webglProgram","uniformArray","chunkOffsetUniform","__data","__offset","chunkOffset","__size","__cache","prepareUniformsGroup","bindingPointIndex","allocateBindingPointIndex","UNIFORM_BUFFER","bindBufferBase","arrayOffset","updateBufferData","WebGLRenderer","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","_alpha","isWebGLRenderer","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","WebGLRenderingContext","initGLContext","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","releaseMaterialProgramReferences","deallocateMaterial","prepareMaterial","getProgram","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","needsProgramChange","needsLights","lightsStateVersion","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","getUniformList","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","targetScene","material2","compileAsync","Promise","resolve","checkMaterialsReady","projectObject","isLOD","renderScene","opaqueObjects","transmissiveObjects","transparentObjects","currentToneMapping","renderObjects","renderTargetNeedsUpdate","currentSide","renderTransmissionPass","programCacheKey","updateCommonMaterialProperties","materialNeedsLights","uniformsList","progUniforms","camera2","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","outputEncoding","convertArray","forceClone","isTypedArray","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","settings","DefaultSettings_","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","times","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","track","trackType","json","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","Cache","LoadingManager","onLoad","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","DEFAULT_MATERIAL_NAME","loading","HttpError","response","FileLoader","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","ReadableStream","getReader","callbacks","reader","contentLength","lengthComputable","loaded","readData","ProgressEvent","enqueue","Response","blob","DOMParser","parseFromString","catch","finally","setResponseType","setMimeType","_RESERVED_CHARS_RE","_reservedRe","_wordChar","_wordCharOrDot","_trackRe","_supportedObjectNames","PropertyBinding","rootNode","parsedPath","parseTrackName","findNode","nodeName","getValue","_getValue_unbound","_setValue_unbound","isAnimationObjectGroup","Composite","sanitizeNodeName","trackName","objectName","objectIndex","propertyName","propertyIndex","lastDot","bone","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","bones","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","targetGroup","optionalParsedPath","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","binding","bindings","revision","__THREE__","maxFiles","item","hit","purge","excludeKey","workerLoaders","WorkerPool","workerScript","logger","softSize","_pool","_dispatcher","_spawnWorker","idle","timeOut","onResult","startWorker","elapsed","characters","counter","timeStarted","setIdle","getTime","errorHandler","resultHandler","onmessageerror","progress","progressHandler","methodNames","token","_spawn","anyIdle","maxElapsed","_startWorker","running","stopWorkers","workerURL","workerPool","stopWorker","pool","idx","NiftiImage","isInvalid","slope","intercept","calMin","calMax","niftiImage","imageDataType","dataIsInt8","dataIsInt16","dataIsInt32","dataIsFloat32","dataIsFloat64","dataIsUInt8","dataIsUInt16","UnsignedIntType","dataIsUInt32","maxV","minV","isNiftiImage","crsOrder","model2vox","ijkIndexOrder","model2RAS","model2tkrRAS","tOrigTranslate","getNormalizedImage","calSpread","calInterc","calSlope","newImage","el","MGHImage","isMGHImage","nframes","mtype","spacingX","spacingY","spacingZ","xa","xs","yr","ya","ys","zr","za","ca","cs","_MGHHeader","isLittleEndian","Torig","Pcrs","PxyzOffset","ijk2tkrRAS","Norig","nElements","imageDataBuf","dataReader","ii","GiftiMesh","nFaces","pointArray","tform","tmat","posArray","t21","t22","t23","t24","t31","t32","t33","t34","isGiftiMesh","isSurfaceMesh","STLLoader","matchDataViewAt","query","binData","array_buffer","ensureBinary","getUint32","solid","isBinary","faces","colors","defaultR","defaultG","defaultB","hasColors","normalX","normalY","normalZ","packedColor","getUint16","vertexstart","componentIdx","parseBinary","patternSolid","patternFace","faceCounter","patternFloat","patternVertex","patternNormal","startVertex","endVertex","vertexCountPerFace","normalCountPerFace","parseASCII","extractAttribute","bufferAttr","STLMesh","geomAttr","indexAttr","normalAttr","hasNormals","colorAttr","isSTLMesh","min2","re","sub2","floatView","int32View","FreeSurferMesh","indexMin","isFreeSurferMesh","tkrToScan","fsig0","fsig1","fsig2","footReader","cras","FreeSurferNodeValues","sig0","sig1","sig2","nFrames","vertexData","_frameData","isFreeSurferNodeValues","isSurfaceMeasurement","setFrame","readANNOT","n_vert","isReadColortables","n_vertex","nVertLayer","nVertMesh","orderLayer","orderMesh","nVLayer","nVMesh","decimateLayerVertices","rgba32","maxstruc","num_entries","LUT","labels","struc","labelLen","txt","connsole","scalars","nError","RGB","colormapLabel","FreeSurferAnnot","vertexColor","isFreeSurferAnnot","isSurfaceAnnotation","ARRAY_TYPE","fromValues","m00","m01","m02","m03","m10","m20","m30","a02","a03","hypot","a00","a10","a20","a30","b3","transformMat4","vec","readMatV4","_buffer","textDecoder","mat","readTag","mrows","ncols","imagf","namlen","tagArrayItems","replaceAll","tagDataType","tagBytesPerItem","posEnd","tagBytesStart","tagBytesEnd","readArray","TTTract","isTractography","isTTTract","offsetPt0","pts","trans_to_mni","zoomMat","voxel_size","dv","nvert3","newpts","npt","vox2mmMat","parse_tt","cutoff","readTT","isFiberTract","debugManager","silentManager","simpleLoad","timeStamp","startsWith","dataElements","querySelectorAll","dataMIMEType","isPlainText","dataMIMETypeLower","urlLower","endsWith","currentPartition","parsedBase64","atob","innerHTML","partitionSize","originalUrl","isObjectURL","absoluteURL","urlSolved","baseURI","pathname","search","resolvedUrl","BasicLoader","loaderName","unpack","_loadURLResponse","resolved","onProgress2","workerParams","copyData","TypedLoader","classType","loaderClasses","csv","loaderType","Cls","simpleLoader","_workerCallable","workerListener"],"sourceRoot":""}